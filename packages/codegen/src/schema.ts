/* eslint-disable */
export type Maybe<T> = T | null
export type InputMaybe<T> = T | null
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] }
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> }
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> }
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never }
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never }
/** All built-in and custom scalars, mapped to their actual values */
export interface Scalars {
  ID: { input: string; output: string }
  String: { input: string; output: string }
  Boolean: { input: boolean; output: boolean }
  Int: { input: number; output: number }
  Float: { input: number; output: number }
  /**
   * The `Address` scalar type represents a physical or mailing address.
   * This scalar can be used to store and validate address information in the GraphQL schema.
   * It contains `Line1`, `Line2`, `City`, `State`, `PostalCode`, and `Country`
   */
  Address: { input: any; output: any }
  /** The `AssessmentMethod` scalar type represents methods that can be used during the audit to assess the control implementation */
  AssessmentMethod: { input: any; output: any }
  /** The `AssessmentObjective` scalar type represents objectives that are validated during the audit to ensure the control is implemented */
  AssessmentObjective: { input: any; output: any }
  /**
   * Define a Relay Cursor type:
   * https://relay.dev/graphql/connections.htm#sec-Cursor
   */
  Cursor: { input: any; output: any }
  /** The `ExampleEvidence` scalar type represents example evidence that can be used to satisfy the control */
  ExampleEvidence: { input: any; output: any }
  /** The `ImplementationGuidance` scalar type that represents steps to take to implement a control; they can come directly from the control source or pulled from external sources */
  ImplementationGuidance: { input: any; output: any }
  /** A valid JSON string. */
  JSON: { input: any; output: any }
  /** The builtin Map type */
  Map: { input: any; output: any }
  /** The `Price` scalar type represents a monetary value for a subscription, including the numerical amount, the interval of recurrence and the currency to be charged in (e.g. USD) */
  Price: { input: any; output: any }
  /** The `Reference` represents are links to external sources that can be used to gain more information about the control */
  Reference: { input: any; output: any }
  /** The builtin Time type */
  Time: { input: any; output: any }
  /**
   * The `Upload` scalar type represents a file upload.
   * This scalar is typically used to handle file uploads in GraphQL mutations.
   */
  Upload: { input: any; output: any }
  /** VersionBump allows a revision to automatically be bumped based on "Major", "Minor", "Patch", or "Draft" */
  VersionBump: { input: any; output: any }
}

export interface ApiToken extends Node {
  __typename?: 'APIToken'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** a description of the token's purpose */
  description?: Maybe<Scalars['String']['output']>
  /** when the token expires */
  expiresAt?: Maybe<Scalars['Time']['output']>
  id: Scalars['ID']['output']
  /** whether the token is active */
  isActive?: Maybe<Scalars['Boolean']['output']>
  lastUsedAt?: Maybe<Scalars['Time']['output']>
  /** the name associated with the token */
  name: Scalars['String']['output']
  owner?: Maybe<Organization>
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  /** when the token was revoked */
  revokedAt?: Maybe<Scalars['Time']['output']>
  /** the user who revoked the token */
  revokedBy?: Maybe<Scalars['String']['output']>
  /** the reason the token was revoked */
  revokedReason?: Maybe<Scalars['String']['output']>
  scopes?: Maybe<Array<Scalars['String']['output']>>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  token: Scalars['String']['output']
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** Return response for createBulkAPIToken mutation */
export interface ApiTokenBulkCreatePayload {
  __typename?: 'APITokenBulkCreatePayload'
  /** Created apiTokens */
  apiTokens?: Maybe<Array<ApiToken>>
}

/** A connection to a list of items. */
export interface ApiTokenConnection {
  __typename?: 'APITokenConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ApiTokenEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createAPIToken mutation */
export interface ApiTokenCreatePayload {
  __typename?: 'APITokenCreatePayload'
  /** Created apiToken */
  apiToken: ApiToken
}

/** Return response for deleteAPIToken mutation */
export interface ApiTokenDeletePayload {
  __typename?: 'APITokenDeletePayload'
  /** Deleted apiToken ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface ApiTokenEdge {
  __typename?: 'APITokenEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<ApiToken>
}

/** Ordering options for APIToken connections */
export interface ApiTokenOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order APITokens. */
  field: ApiTokenOrderField
}

/** Properties by which APIToken connections can be ordered. */
export enum ApiTokenOrderField {
  created_at = 'created_at',
  expires_at = 'expires_at',
  is_active = 'is_active',
  last_used_at = 'last_used_at',
  name = 'name',
  updated_at = 'updated_at',
}

export interface ApiTokenSearchResult {
  __typename?: 'APITokenSearchResult'
  apiTokens?: Maybe<Array<ApiToken>>
}

/** Return response for updateAPIToken mutation */
export interface ApiTokenUpdatePayload {
  __typename?: 'APITokenUpdatePayload'
  /** Updated apiToken */
  apiToken: ApiToken
}

/**
 * APITokenWhereInput is used for filtering APIToken objects.
 * Input was generated by ent.
 */
export interface ApiTokenWhereInput {
  and?: InputMaybe<Array<ApiTokenWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** expires_at field predicates */
  expiresAt?: InputMaybe<Scalars['Time']['input']>
  expiresAtGT?: InputMaybe<Scalars['Time']['input']>
  expiresAtGTE?: InputMaybe<Scalars['Time']['input']>
  expiresAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  expiresAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  expiresAtLT?: InputMaybe<Scalars['Time']['input']>
  expiresAtLTE?: InputMaybe<Scalars['Time']['input']>
  expiresAtNEQ?: InputMaybe<Scalars['Time']['input']>
  expiresAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  expiresAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** is_active field predicates */
  isActive?: InputMaybe<Scalars['Boolean']['input']>
  isActiveIsNil?: InputMaybe<Scalars['Boolean']['input']>
  isActiveNEQ?: InputMaybe<Scalars['Boolean']['input']>
  isActiveNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** last_used_at field predicates */
  lastUsedAt?: InputMaybe<Scalars['Time']['input']>
  lastUsedAtGT?: InputMaybe<Scalars['Time']['input']>
  lastUsedAtGTE?: InputMaybe<Scalars['Time']['input']>
  lastUsedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  lastUsedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  lastUsedAtLT?: InputMaybe<Scalars['Time']['input']>
  lastUsedAtLTE?: InputMaybe<Scalars['Time']['input']>
  lastUsedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  lastUsedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  lastUsedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<ApiTokenWhereInput>
  or?: InputMaybe<Array<ApiTokenWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** revoked_at field predicates */
  revokedAt?: InputMaybe<Scalars['Time']['input']>
  revokedAtGT?: InputMaybe<Scalars['Time']['input']>
  revokedAtGTE?: InputMaybe<Scalars['Time']['input']>
  revokedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  revokedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  revokedAtLT?: InputMaybe<Scalars['Time']['input']>
  revokedAtLTE?: InputMaybe<Scalars['Time']['input']>
  revokedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  revokedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  revokedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** revoked_by field predicates */
  revokedBy?: InputMaybe<Scalars['String']['input']>
  revokedByContains?: InputMaybe<Scalars['String']['input']>
  revokedByContainsFold?: InputMaybe<Scalars['String']['input']>
  revokedByEqualFold?: InputMaybe<Scalars['String']['input']>
  revokedByGT?: InputMaybe<Scalars['String']['input']>
  revokedByGTE?: InputMaybe<Scalars['String']['input']>
  revokedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  revokedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  revokedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  revokedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  revokedByLT?: InputMaybe<Scalars['String']['input']>
  revokedByLTE?: InputMaybe<Scalars['String']['input']>
  revokedByNEQ?: InputMaybe<Scalars['String']['input']>
  revokedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  revokedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** revoked_reason field predicates */
  revokedReason?: InputMaybe<Scalars['String']['input']>
  revokedReasonContains?: InputMaybe<Scalars['String']['input']>
  revokedReasonContainsFold?: InputMaybe<Scalars['String']['input']>
  revokedReasonEqualFold?: InputMaybe<Scalars['String']['input']>
  revokedReasonGT?: InputMaybe<Scalars['String']['input']>
  revokedReasonGTE?: InputMaybe<Scalars['String']['input']>
  revokedReasonHasPrefix?: InputMaybe<Scalars['String']['input']>
  revokedReasonHasSuffix?: InputMaybe<Scalars['String']['input']>
  revokedReasonIn?: InputMaybe<Array<Scalars['String']['input']>>
  revokedReasonIsNil?: InputMaybe<Scalars['Boolean']['input']>
  revokedReasonLT?: InputMaybe<Scalars['String']['input']>
  revokedReasonLTE?: InputMaybe<Scalars['String']['input']>
  revokedReasonNEQ?: InputMaybe<Scalars['String']['input']>
  revokedReasonNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  revokedReasonNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface ActionPlan extends Node {
  __typename?: 'ActionPlan'
  /** type of the action_plan, e.g. compliance, operational, health and safety, etc. */
  actionPlanType?: Maybe<Scalars['String']['output']>
  /** whether approval is required for edits to the action_plan */
  approvalRequired?: Maybe<Scalars['Boolean']['output']>
  /** the group of users who are responsible for approving the action_plan */
  approver?: Maybe<Group>
  /** the id of the group responsible for approving the action_plan */
  approverID?: Maybe<Scalars['ID']['output']>
  controls: ControlConnection
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** temporary delegates for the action_plan, used for temporary approval */
  delegate?: Maybe<Group>
  /** the id of the group responsible for approving the action_plan */
  delegateID?: Maybe<Scalars['ID']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** details of the action_plan */
  details?: Maybe<Scalars['String']['output']>
  /** due date of the action plan */
  dueDate?: Maybe<Scalars['Time']['output']>
  id: Scalars['ID']['output']
  /** the name of the action_plan */
  name: Scalars['String']['output']
  owner?: Maybe<Organization>
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  /** priority of the action plan */
  priority?: Maybe<ActionPlanPriority>
  programs: ProgramConnection
  /** the date the action_plan should be reviewed, calculated based on the review_frequency if not directly set */
  reviewDue?: Maybe<Scalars['Time']['output']>
  /** the frequency at which the action_plan should be reviewed, used to calculate the review_due date */
  reviewFrequency?: Maybe<ActionPlanFrequency>
  /** revision of the object as a semver (e.g. v1.0.0), by default any update will bump the patch version, unless the revision_bump field is set */
  revision?: Maybe<Scalars['String']['output']>
  risks: RiskConnection
  /** source of the action plan */
  source?: Maybe<Scalars['String']['output']>
  /** status of the action_plan, e.g. draft, published, archived, etc. */
  status?: Maybe<ActionPlanDocumentStatus>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  users: UserConnection
}

export interface ActionPlanControlsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlOrder>>
  where?: InputMaybe<ControlWhereInput>
}

export interface ActionPlanProgramsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProgramOrder>>
  where?: InputMaybe<ProgramWhereInput>
}

export interface ActionPlanRisksArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<RiskOrder>>
  where?: InputMaybe<RiskWhereInput>
}

export interface ActionPlanUsersArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<UserOrder>>
  where?: InputMaybe<UserWhereInput>
}

/** Return response for createBulkActionPlan mutation */
export interface ActionPlanBulkCreatePayload {
  __typename?: 'ActionPlanBulkCreatePayload'
  /** Created actionPlans */
  actionPlans?: Maybe<Array<ActionPlan>>
}

/** A connection to a list of items. */
export interface ActionPlanConnection {
  __typename?: 'ActionPlanConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ActionPlanEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createActionPlan mutation */
export interface ActionPlanCreatePayload {
  __typename?: 'ActionPlanCreatePayload'
  /** Created actionPlan */
  actionPlan: ActionPlan
}

/** Return response for deleteActionPlan mutation */
export interface ActionPlanDeletePayload {
  __typename?: 'ActionPlanDeletePayload'
  /** Deleted actionPlan ID */
  deletedID: Scalars['ID']['output']
}

/** ActionPlanDocumentStatus is enum for the field status */
export enum ActionPlanDocumentStatus {
  APPROVED = 'APPROVED',
  ARCHIVED = 'ARCHIVED',
  DRAFT = 'DRAFT',
  NEEDS_APPROVAL = 'NEEDS_APPROVAL',
  PUBLISHED = 'PUBLISHED',
}

/** An edge in a connection. */
export interface ActionPlanEdge {
  __typename?: 'ActionPlanEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<ActionPlan>
}

/** ActionPlanFrequency is enum for the field review_frequency */
export enum ActionPlanFrequency {
  BIANNUALLY = 'BIANNUALLY',
  MONTHLY = 'MONTHLY',
  QUARTERLY = 'QUARTERLY',
  YEARLY = 'YEARLY',
}

export interface ActionPlanHistory extends Node {
  __typename?: 'ActionPlanHistory'
  /** type of the action_plan, e.g. compliance, operational, health and safety, etc. */
  actionPlanType?: Maybe<Scalars['String']['output']>
  /** whether approval is required for edits to the action_plan */
  approvalRequired?: Maybe<Scalars['Boolean']['output']>
  /** the id of the group responsible for approving the action_plan */
  approverID?: Maybe<Scalars['String']['output']>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** the id of the group responsible for approving the action_plan */
  delegateID?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** details of the action_plan */
  details?: Maybe<Scalars['String']['output']>
  /** due date of the action plan */
  dueDate?: Maybe<Scalars['Time']['output']>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** the name of the action_plan */
  name: Scalars['String']['output']
  operation: ActionPlanHistoryOpType
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['String']['output']>
  /** priority of the action plan */
  priority?: Maybe<ActionPlanHistoryPriority>
  ref?: Maybe<Scalars['String']['output']>
  /** the date the action_plan should be reviewed, calculated based on the review_frequency if not directly set */
  reviewDue?: Maybe<Scalars['Time']['output']>
  /** the frequency at which the action_plan should be reviewed, used to calculate the review_due date */
  reviewFrequency?: Maybe<ActionPlanHistoryFrequency>
  /** revision of the object as a semver (e.g. v1.0.0), by default any update will bump the patch version, unless the revision_bump field is set */
  revision?: Maybe<Scalars['String']['output']>
  /** source of the action plan */
  source?: Maybe<Scalars['String']['output']>
  /** status of the action_plan, e.g. draft, published, archived, etc. */
  status?: Maybe<ActionPlanHistoryDocumentStatus>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface ActionPlanHistoryConnection {
  __typename?: 'ActionPlanHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ActionPlanHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** ActionPlanHistoryDocumentStatus is enum for the field status */
export enum ActionPlanHistoryDocumentStatus {
  APPROVED = 'APPROVED',
  ARCHIVED = 'ARCHIVED',
  DRAFT = 'DRAFT',
  NEEDS_APPROVAL = 'NEEDS_APPROVAL',
  PUBLISHED = 'PUBLISHED',
}

/** An edge in a connection. */
export interface ActionPlanHistoryEdge {
  __typename?: 'ActionPlanHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<ActionPlanHistory>
}

/** ActionPlanHistoryFrequency is enum for the field review_frequency */
export enum ActionPlanHistoryFrequency {
  BIANNUALLY = 'BIANNUALLY',
  MONTHLY = 'MONTHLY',
  QUARTERLY = 'QUARTERLY',
  YEARLY = 'YEARLY',
}

/** ActionPlanHistoryOpType is enum for the field operation */
export enum ActionPlanHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for ActionPlanHistory connections */
export interface ActionPlanHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order ActionPlanHistories. */
  field: ActionPlanHistoryOrderField
}

/** Properties by which ActionPlanHistory connections can be ordered. */
export enum ActionPlanHistoryOrderField {
  PRIORITY = 'PRIORITY',
  REVIEW_FREQUENCY = 'REVIEW_FREQUENCY',
  STATUS = 'STATUS',
  created_at = 'created_at',
  due_date = 'due_date',
  name = 'name',
  review_due = 'review_due',
  revision = 'revision',
  source = 'source',
  updated_at = 'updated_at',
}

/** ActionPlanHistoryPriority is enum for the field priority */
export enum ActionPlanHistoryPriority {
  CRITICAL = 'CRITICAL',
  HIGH = 'HIGH',
  LOW = 'LOW',
  MEDIUM = 'MEDIUM',
}

/**
 * ActionPlanHistoryWhereInput is used for filtering ActionPlanHistory objects.
 * Input was generated by ent.
 */
export interface ActionPlanHistoryWhereInput {
  /** action_plan_type field predicates */
  actionPlanType?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeContains?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeGT?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeGTE?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  actionPlanTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  actionPlanTypeLT?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeLTE?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeNEQ?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  actionPlanTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  and?: InputMaybe<Array<ActionPlanHistoryWhereInput>>
  /** approval_required field predicates */
  approvalRequired?: InputMaybe<Scalars['Boolean']['input']>
  approvalRequiredIsNil?: InputMaybe<Scalars['Boolean']['input']>
  approvalRequiredNEQ?: InputMaybe<Scalars['Boolean']['input']>
  approvalRequiredNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** approver_id field predicates */
  approverID?: InputMaybe<Scalars['String']['input']>
  approverIDContains?: InputMaybe<Scalars['String']['input']>
  approverIDContainsFold?: InputMaybe<Scalars['String']['input']>
  approverIDEqualFold?: InputMaybe<Scalars['String']['input']>
  approverIDGT?: InputMaybe<Scalars['String']['input']>
  approverIDGTE?: InputMaybe<Scalars['String']['input']>
  approverIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  approverIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  approverIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  approverIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  approverIDLT?: InputMaybe<Scalars['String']['input']>
  approverIDLTE?: InputMaybe<Scalars['String']['input']>
  approverIDNEQ?: InputMaybe<Scalars['String']['input']>
  approverIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  approverIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** delegate_id field predicates */
  delegateID?: InputMaybe<Scalars['String']['input']>
  delegateIDContains?: InputMaybe<Scalars['String']['input']>
  delegateIDContainsFold?: InputMaybe<Scalars['String']['input']>
  delegateIDEqualFold?: InputMaybe<Scalars['String']['input']>
  delegateIDGT?: InputMaybe<Scalars['String']['input']>
  delegateIDGTE?: InputMaybe<Scalars['String']['input']>
  delegateIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  delegateIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  delegateIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  delegateIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  delegateIDLT?: InputMaybe<Scalars['String']['input']>
  delegateIDLTE?: InputMaybe<Scalars['String']['input']>
  delegateIDNEQ?: InputMaybe<Scalars['String']['input']>
  delegateIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  delegateIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** details field predicates */
  details?: InputMaybe<Scalars['String']['input']>
  detailsContains?: InputMaybe<Scalars['String']['input']>
  detailsContainsFold?: InputMaybe<Scalars['String']['input']>
  detailsEqualFold?: InputMaybe<Scalars['String']['input']>
  detailsGT?: InputMaybe<Scalars['String']['input']>
  detailsGTE?: InputMaybe<Scalars['String']['input']>
  detailsHasPrefix?: InputMaybe<Scalars['String']['input']>
  detailsHasSuffix?: InputMaybe<Scalars['String']['input']>
  detailsIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsIsNil?: InputMaybe<Scalars['Boolean']['input']>
  detailsLT?: InputMaybe<Scalars['String']['input']>
  detailsLTE?: InputMaybe<Scalars['String']['input']>
  detailsNEQ?: InputMaybe<Scalars['String']['input']>
  detailsNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** due_date field predicates */
  dueDate?: InputMaybe<Scalars['Time']['input']>
  dueDateGT?: InputMaybe<Scalars['Time']['input']>
  dueDateGTE?: InputMaybe<Scalars['Time']['input']>
  dueDateIn?: InputMaybe<Array<Scalars['Time']['input']>>
  dueDateIsNil?: InputMaybe<Scalars['Boolean']['input']>
  dueDateLT?: InputMaybe<Scalars['Time']['input']>
  dueDateLTE?: InputMaybe<Scalars['Time']['input']>
  dueDateNEQ?: InputMaybe<Scalars['Time']['input']>
  dueDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  dueDateNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<ActionPlanHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<ActionPlanHistoryOpType>
  operationIn?: InputMaybe<Array<ActionPlanHistoryOpType>>
  operationNEQ?: InputMaybe<ActionPlanHistoryOpType>
  operationNotIn?: InputMaybe<Array<ActionPlanHistoryOpType>>
  or?: InputMaybe<Array<ActionPlanHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** priority field predicates */
  priority?: InputMaybe<ActionPlanHistoryPriority>
  priorityIn?: InputMaybe<Array<ActionPlanHistoryPriority>>
  priorityIsNil?: InputMaybe<Scalars['Boolean']['input']>
  priorityNEQ?: InputMaybe<ActionPlanHistoryPriority>
  priorityNotIn?: InputMaybe<Array<ActionPlanHistoryPriority>>
  priorityNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** review_due field predicates */
  reviewDue?: InputMaybe<Scalars['Time']['input']>
  reviewDueGT?: InputMaybe<Scalars['Time']['input']>
  reviewDueGTE?: InputMaybe<Scalars['Time']['input']>
  reviewDueIn?: InputMaybe<Array<Scalars['Time']['input']>>
  reviewDueIsNil?: InputMaybe<Scalars['Boolean']['input']>
  reviewDueLT?: InputMaybe<Scalars['Time']['input']>
  reviewDueLTE?: InputMaybe<Scalars['Time']['input']>
  reviewDueNEQ?: InputMaybe<Scalars['Time']['input']>
  reviewDueNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  reviewDueNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** review_frequency field predicates */
  reviewFrequency?: InputMaybe<ActionPlanHistoryFrequency>
  reviewFrequencyIn?: InputMaybe<Array<ActionPlanHistoryFrequency>>
  reviewFrequencyIsNil?: InputMaybe<Scalars['Boolean']['input']>
  reviewFrequencyNEQ?: InputMaybe<ActionPlanHistoryFrequency>
  reviewFrequencyNotIn?: InputMaybe<Array<ActionPlanHistoryFrequency>>
  reviewFrequencyNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** revision field predicates */
  revision?: InputMaybe<Scalars['String']['input']>
  revisionContains?: InputMaybe<Scalars['String']['input']>
  revisionContainsFold?: InputMaybe<Scalars['String']['input']>
  revisionEqualFold?: InputMaybe<Scalars['String']['input']>
  revisionGT?: InputMaybe<Scalars['String']['input']>
  revisionGTE?: InputMaybe<Scalars['String']['input']>
  revisionHasPrefix?: InputMaybe<Scalars['String']['input']>
  revisionHasSuffix?: InputMaybe<Scalars['String']['input']>
  revisionIn?: InputMaybe<Array<Scalars['String']['input']>>
  revisionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  revisionLT?: InputMaybe<Scalars['String']['input']>
  revisionLTE?: InputMaybe<Scalars['String']['input']>
  revisionNEQ?: InputMaybe<Scalars['String']['input']>
  revisionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  revisionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** source field predicates */
  source?: InputMaybe<Scalars['String']['input']>
  sourceContains?: InputMaybe<Scalars['String']['input']>
  sourceContainsFold?: InputMaybe<Scalars['String']['input']>
  sourceEqualFold?: InputMaybe<Scalars['String']['input']>
  sourceGT?: InputMaybe<Scalars['String']['input']>
  sourceGTE?: InputMaybe<Scalars['String']['input']>
  sourceHasPrefix?: InputMaybe<Scalars['String']['input']>
  sourceHasSuffix?: InputMaybe<Scalars['String']['input']>
  sourceIn?: InputMaybe<Array<Scalars['String']['input']>>
  sourceIsNil?: InputMaybe<Scalars['Boolean']['input']>
  sourceLT?: InputMaybe<Scalars['String']['input']>
  sourceLTE?: InputMaybe<Scalars['String']['input']>
  sourceNEQ?: InputMaybe<Scalars['String']['input']>
  sourceNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  sourceNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<ActionPlanHistoryDocumentStatus>
  statusIn?: InputMaybe<Array<ActionPlanHistoryDocumentStatus>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusNEQ?: InputMaybe<ActionPlanHistoryDocumentStatus>
  statusNotIn?: InputMaybe<Array<ActionPlanHistoryDocumentStatus>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for ActionPlan connections */
export interface ActionPlanOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order ActionPlans. */
  field: ActionPlanOrderField
}

/** Properties by which ActionPlan connections can be ordered. */
export enum ActionPlanOrderField {
  PRIORITY = 'PRIORITY',
  REVIEW_FREQUENCY = 'REVIEW_FREQUENCY',
  STATUS = 'STATUS',
  created_at = 'created_at',
  due_date = 'due_date',
  name = 'name',
  review_due = 'review_due',
  revision = 'revision',
  source = 'source',
  updated_at = 'updated_at',
}

/** ActionPlanPriority is enum for the field priority */
export enum ActionPlanPriority {
  CRITICAL = 'CRITICAL',
  HIGH = 'HIGH',
  LOW = 'LOW',
  MEDIUM = 'MEDIUM',
}

export interface ActionPlanSearchResult {
  __typename?: 'ActionPlanSearchResult'
  actionPlans?: Maybe<Array<ActionPlan>>
}

/** Return response for updateActionPlan mutation */
export interface ActionPlanUpdatePayload {
  __typename?: 'ActionPlanUpdatePayload'
  /** Updated actionPlan */
  actionPlan: ActionPlan
}

/**
 * ActionPlanWhereInput is used for filtering ActionPlan objects.
 * Input was generated by ent.
 */
export interface ActionPlanWhereInput {
  /** action_plan_type field predicates */
  actionPlanType?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeContains?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeGT?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeGTE?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  actionPlanTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  actionPlanTypeLT?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeLTE?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeNEQ?: InputMaybe<Scalars['String']['input']>
  actionPlanTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  actionPlanTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  and?: InputMaybe<Array<ActionPlanWhereInput>>
  /** approval_required field predicates */
  approvalRequired?: InputMaybe<Scalars['Boolean']['input']>
  approvalRequiredIsNil?: InputMaybe<Scalars['Boolean']['input']>
  approvalRequiredNEQ?: InputMaybe<Scalars['Boolean']['input']>
  approvalRequiredNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** approver_id field predicates */
  approverID?: InputMaybe<Scalars['ID']['input']>
  approverIDContains?: InputMaybe<Scalars['ID']['input']>
  approverIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  approverIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  approverIDGT?: InputMaybe<Scalars['ID']['input']>
  approverIDGTE?: InputMaybe<Scalars['ID']['input']>
  approverIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  approverIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  approverIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  approverIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  approverIDLT?: InputMaybe<Scalars['ID']['input']>
  approverIDLTE?: InputMaybe<Scalars['ID']['input']>
  approverIDNEQ?: InputMaybe<Scalars['ID']['input']>
  approverIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  approverIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** delegate_id field predicates */
  delegateID?: InputMaybe<Scalars['ID']['input']>
  delegateIDContains?: InputMaybe<Scalars['ID']['input']>
  delegateIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  delegateIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  delegateIDGT?: InputMaybe<Scalars['ID']['input']>
  delegateIDGTE?: InputMaybe<Scalars['ID']['input']>
  delegateIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  delegateIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  delegateIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  delegateIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  delegateIDLT?: InputMaybe<Scalars['ID']['input']>
  delegateIDLTE?: InputMaybe<Scalars['ID']['input']>
  delegateIDNEQ?: InputMaybe<Scalars['ID']['input']>
  delegateIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  delegateIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** details field predicates */
  details?: InputMaybe<Scalars['String']['input']>
  detailsContains?: InputMaybe<Scalars['String']['input']>
  detailsContainsFold?: InputMaybe<Scalars['String']['input']>
  detailsEqualFold?: InputMaybe<Scalars['String']['input']>
  detailsGT?: InputMaybe<Scalars['String']['input']>
  detailsGTE?: InputMaybe<Scalars['String']['input']>
  detailsHasPrefix?: InputMaybe<Scalars['String']['input']>
  detailsHasSuffix?: InputMaybe<Scalars['String']['input']>
  detailsIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsIsNil?: InputMaybe<Scalars['Boolean']['input']>
  detailsLT?: InputMaybe<Scalars['String']['input']>
  detailsLTE?: InputMaybe<Scalars['String']['input']>
  detailsNEQ?: InputMaybe<Scalars['String']['input']>
  detailsNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** due_date field predicates */
  dueDate?: InputMaybe<Scalars['Time']['input']>
  dueDateGT?: InputMaybe<Scalars['Time']['input']>
  dueDateGTE?: InputMaybe<Scalars['Time']['input']>
  dueDateIn?: InputMaybe<Array<Scalars['Time']['input']>>
  dueDateIsNil?: InputMaybe<Scalars['Boolean']['input']>
  dueDateLT?: InputMaybe<Scalars['Time']['input']>
  dueDateLTE?: InputMaybe<Scalars['Time']['input']>
  dueDateNEQ?: InputMaybe<Scalars['Time']['input']>
  dueDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  dueDateNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** approver edge predicates */
  hasApprover?: InputMaybe<Scalars['Boolean']['input']>
  hasApproverWith?: InputMaybe<Array<GroupWhereInput>>
  /** controls edge predicates */
  hasControls?: InputMaybe<Scalars['Boolean']['input']>
  hasControlsWith?: InputMaybe<Array<ControlWhereInput>>
  /** delegate edge predicates */
  hasDelegate?: InputMaybe<Scalars['Boolean']['input']>
  hasDelegateWith?: InputMaybe<Array<GroupWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>
  /** risks edge predicates */
  hasRisks?: InputMaybe<Scalars['Boolean']['input']>
  hasRisksWith?: InputMaybe<Array<RiskWhereInput>>
  /** users edge predicates */
  hasUsers?: InputMaybe<Scalars['Boolean']['input']>
  hasUsersWith?: InputMaybe<Array<UserWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<ActionPlanWhereInput>
  or?: InputMaybe<Array<ActionPlanWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** priority field predicates */
  priority?: InputMaybe<ActionPlanPriority>
  priorityIn?: InputMaybe<Array<ActionPlanPriority>>
  priorityIsNil?: InputMaybe<Scalars['Boolean']['input']>
  priorityNEQ?: InputMaybe<ActionPlanPriority>
  priorityNotIn?: InputMaybe<Array<ActionPlanPriority>>
  priorityNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** review_due field predicates */
  reviewDue?: InputMaybe<Scalars['Time']['input']>
  reviewDueGT?: InputMaybe<Scalars['Time']['input']>
  reviewDueGTE?: InputMaybe<Scalars['Time']['input']>
  reviewDueIn?: InputMaybe<Array<Scalars['Time']['input']>>
  reviewDueIsNil?: InputMaybe<Scalars['Boolean']['input']>
  reviewDueLT?: InputMaybe<Scalars['Time']['input']>
  reviewDueLTE?: InputMaybe<Scalars['Time']['input']>
  reviewDueNEQ?: InputMaybe<Scalars['Time']['input']>
  reviewDueNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  reviewDueNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** review_frequency field predicates */
  reviewFrequency?: InputMaybe<ActionPlanFrequency>
  reviewFrequencyIn?: InputMaybe<Array<ActionPlanFrequency>>
  reviewFrequencyIsNil?: InputMaybe<Scalars['Boolean']['input']>
  reviewFrequencyNEQ?: InputMaybe<ActionPlanFrequency>
  reviewFrequencyNotIn?: InputMaybe<Array<ActionPlanFrequency>>
  reviewFrequencyNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** revision field predicates */
  revision?: InputMaybe<Scalars['String']['input']>
  revisionContains?: InputMaybe<Scalars['String']['input']>
  revisionContainsFold?: InputMaybe<Scalars['String']['input']>
  revisionEqualFold?: InputMaybe<Scalars['String']['input']>
  revisionGT?: InputMaybe<Scalars['String']['input']>
  revisionGTE?: InputMaybe<Scalars['String']['input']>
  revisionHasPrefix?: InputMaybe<Scalars['String']['input']>
  revisionHasSuffix?: InputMaybe<Scalars['String']['input']>
  revisionIn?: InputMaybe<Array<Scalars['String']['input']>>
  revisionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  revisionLT?: InputMaybe<Scalars['String']['input']>
  revisionLTE?: InputMaybe<Scalars['String']['input']>
  revisionNEQ?: InputMaybe<Scalars['String']['input']>
  revisionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  revisionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** source field predicates */
  source?: InputMaybe<Scalars['String']['input']>
  sourceContains?: InputMaybe<Scalars['String']['input']>
  sourceContainsFold?: InputMaybe<Scalars['String']['input']>
  sourceEqualFold?: InputMaybe<Scalars['String']['input']>
  sourceGT?: InputMaybe<Scalars['String']['input']>
  sourceGTE?: InputMaybe<Scalars['String']['input']>
  sourceHasPrefix?: InputMaybe<Scalars['String']['input']>
  sourceHasSuffix?: InputMaybe<Scalars['String']['input']>
  sourceIn?: InputMaybe<Array<Scalars['String']['input']>>
  sourceIsNil?: InputMaybe<Scalars['Boolean']['input']>
  sourceLT?: InputMaybe<Scalars['String']['input']>
  sourceLTE?: InputMaybe<Scalars['String']['input']>
  sourceNEQ?: InputMaybe<Scalars['String']['input']>
  sourceNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  sourceNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<ActionPlanDocumentStatus>
  statusIn?: InputMaybe<Array<ActionPlanDocumentStatus>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusNEQ?: InputMaybe<ActionPlanDocumentStatus>
  statusNotIn?: InputMaybe<Array<ActionPlanDocumentStatus>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface AuditLog extends Node {
  __typename?: 'AuditLog'
  changes?: Maybe<Array<Scalars['String']['output']>>
  id: Scalars['ID']['output']
  operation?: Maybe<Scalars['String']['output']>
  table?: Maybe<Scalars['String']['output']>
  time?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['ID']['output']>
}

/** A connection to a list of items. */
export interface AuditLogConnection {
  __typename?: 'AuditLogConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<AuditLogEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface AuditLogEdge {
  __typename?: 'AuditLogEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<AuditLog>
}

export interface AuditLogWhereInput {
  after?: InputMaybe<Scalars['Time']['input']>
  before?: InputMaybe<Scalars['Time']['input']>
  operation?: InputMaybe<Scalars['String']['input']>
  refID?: InputMaybe<Scalars['ID']['input']>
  table?: InputMaybe<Scalars['ID']['input']>
  updatedBy?: InputMaybe<Scalars['ID']['input']>
}

/**
 * CloneControlInput is used to clone controls and their subcontrols
 * under an organization (ownerID)
 */
export interface CloneControlInput {
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  programID?: InputMaybe<Scalars['ID']['input']>
}

export interface Contact extends Node {
  __typename?: 'Contact'
  /** the address of the contact */
  address?: Maybe<Scalars['String']['output']>
  /** the company of the contact */
  company?: Maybe<Scalars['String']['output']>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** the email of the contact */
  email?: Maybe<Scalars['String']['output']>
  entities: EntityConnection
  files: FileConnection
  /** the full name of the contact */
  fullName: Scalars['String']['output']
  id: Scalars['ID']['output']
  owner?: Maybe<Organization>
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  /** the phone number of the contact */
  phoneNumber?: Maybe<Scalars['String']['output']>
  /** status of the contact */
  status: ContactUserStatus
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  /** the title of the contact */
  title?: Maybe<Scalars['String']['output']>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

export interface ContactEntitiesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EntityOrder>>
  where?: InputMaybe<EntityWhereInput>
}

export interface ContactFilesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<FileOrder>>
  where?: InputMaybe<FileWhereInput>
}

/** Return response for createBulkContact mutation */
export interface ContactBulkCreatePayload {
  __typename?: 'ContactBulkCreatePayload'
  /** Created contacts */
  contacts?: Maybe<Array<Contact>>
}

/** A connection to a list of items. */
export interface ContactConnection {
  __typename?: 'ContactConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ContactEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createContact mutation */
export interface ContactCreatePayload {
  __typename?: 'ContactCreatePayload'
  /** Created contact */
  contact: Contact
}

/** Return response for deleteContact mutation */
export interface ContactDeletePayload {
  __typename?: 'ContactDeletePayload'
  /** Deleted contact ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface ContactEdge {
  __typename?: 'ContactEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<Contact>
}

export interface ContactHistory extends Node {
  __typename?: 'ContactHistory'
  /** the address of the contact */
  address?: Maybe<Scalars['String']['output']>
  /** the company of the contact */
  company?: Maybe<Scalars['String']['output']>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** the email of the contact */
  email?: Maybe<Scalars['String']['output']>
  /** the full name of the contact */
  fullName: Scalars['String']['output']
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  operation: ContactHistoryOpType
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['String']['output']>
  /** the phone number of the contact */
  phoneNumber?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** status of the contact */
  status: ContactHistoryUserStatus
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  /** the title of the contact */
  title?: Maybe<Scalars['String']['output']>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface ContactHistoryConnection {
  __typename?: 'ContactHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ContactHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface ContactHistoryEdge {
  __typename?: 'ContactHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<ContactHistory>
}

/** ContactHistoryOpType is enum for the field operation */
export enum ContactHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for ContactHistory connections */
export interface ContactHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order ContactHistories. */
  field: ContactHistoryOrderField
}

/** Properties by which ContactHistory connections can be ordered. */
export enum ContactHistoryOrderField {
  STATUS = 'STATUS',
  company = 'company',
  created_at = 'created_at',
  email = 'email',
  full_name = 'full_name',
  title = 'title',
  updated_at = 'updated_at',
}

/** ContactHistoryUserStatus is enum for the field status */
export enum ContactHistoryUserStatus {
  ACTIVE = 'ACTIVE',
  DEACTIVATED = 'DEACTIVATED',
  INACTIVE = 'INACTIVE',
  ONBOARDING = 'ONBOARDING',
  SUSPENDED = 'SUSPENDED',
}

/**
 * ContactHistoryWhereInput is used for filtering ContactHistory objects.
 * Input was generated by ent.
 */
export interface ContactHistoryWhereInput {
  /** address field predicates */
  address?: InputMaybe<Scalars['String']['input']>
  addressContains?: InputMaybe<Scalars['String']['input']>
  addressContainsFold?: InputMaybe<Scalars['String']['input']>
  addressEqualFold?: InputMaybe<Scalars['String']['input']>
  addressGT?: InputMaybe<Scalars['String']['input']>
  addressGTE?: InputMaybe<Scalars['String']['input']>
  addressHasPrefix?: InputMaybe<Scalars['String']['input']>
  addressHasSuffix?: InputMaybe<Scalars['String']['input']>
  addressIn?: InputMaybe<Array<Scalars['String']['input']>>
  addressIsNil?: InputMaybe<Scalars['Boolean']['input']>
  addressLT?: InputMaybe<Scalars['String']['input']>
  addressLTE?: InputMaybe<Scalars['String']['input']>
  addressNEQ?: InputMaybe<Scalars['String']['input']>
  addressNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  addressNotNil?: InputMaybe<Scalars['Boolean']['input']>
  and?: InputMaybe<Array<ContactHistoryWhereInput>>
  /** company field predicates */
  company?: InputMaybe<Scalars['String']['input']>
  companyContains?: InputMaybe<Scalars['String']['input']>
  companyContainsFold?: InputMaybe<Scalars['String']['input']>
  companyEqualFold?: InputMaybe<Scalars['String']['input']>
  companyGT?: InputMaybe<Scalars['String']['input']>
  companyGTE?: InputMaybe<Scalars['String']['input']>
  companyHasPrefix?: InputMaybe<Scalars['String']['input']>
  companyHasSuffix?: InputMaybe<Scalars['String']['input']>
  companyIn?: InputMaybe<Array<Scalars['String']['input']>>
  companyIsNil?: InputMaybe<Scalars['Boolean']['input']>
  companyLT?: InputMaybe<Scalars['String']['input']>
  companyLTE?: InputMaybe<Scalars['String']['input']>
  companyNEQ?: InputMaybe<Scalars['String']['input']>
  companyNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  companyNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** email field predicates */
  email?: InputMaybe<Scalars['String']['input']>
  emailContains?: InputMaybe<Scalars['String']['input']>
  emailContainsFold?: InputMaybe<Scalars['String']['input']>
  emailEqualFold?: InputMaybe<Scalars['String']['input']>
  emailGT?: InputMaybe<Scalars['String']['input']>
  emailGTE?: InputMaybe<Scalars['String']['input']>
  emailHasPrefix?: InputMaybe<Scalars['String']['input']>
  emailHasSuffix?: InputMaybe<Scalars['String']['input']>
  emailIn?: InputMaybe<Array<Scalars['String']['input']>>
  emailIsNil?: InputMaybe<Scalars['Boolean']['input']>
  emailLT?: InputMaybe<Scalars['String']['input']>
  emailLTE?: InputMaybe<Scalars['String']['input']>
  emailNEQ?: InputMaybe<Scalars['String']['input']>
  emailNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  emailNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** full_name field predicates */
  fullName?: InputMaybe<Scalars['String']['input']>
  fullNameContains?: InputMaybe<Scalars['String']['input']>
  fullNameContainsFold?: InputMaybe<Scalars['String']['input']>
  fullNameEqualFold?: InputMaybe<Scalars['String']['input']>
  fullNameGT?: InputMaybe<Scalars['String']['input']>
  fullNameGTE?: InputMaybe<Scalars['String']['input']>
  fullNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  fullNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  fullNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  fullNameLT?: InputMaybe<Scalars['String']['input']>
  fullNameLTE?: InputMaybe<Scalars['String']['input']>
  fullNameNEQ?: InputMaybe<Scalars['String']['input']>
  fullNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<ContactHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<ContactHistoryOpType>
  operationIn?: InputMaybe<Array<ContactHistoryOpType>>
  operationNEQ?: InputMaybe<ContactHistoryOpType>
  operationNotIn?: InputMaybe<Array<ContactHistoryOpType>>
  or?: InputMaybe<Array<ContactHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** phone_number field predicates */
  phoneNumber?: InputMaybe<Scalars['String']['input']>
  phoneNumberContains?: InputMaybe<Scalars['String']['input']>
  phoneNumberContainsFold?: InputMaybe<Scalars['String']['input']>
  phoneNumberEqualFold?: InputMaybe<Scalars['String']['input']>
  phoneNumberGT?: InputMaybe<Scalars['String']['input']>
  phoneNumberGTE?: InputMaybe<Scalars['String']['input']>
  phoneNumberHasPrefix?: InputMaybe<Scalars['String']['input']>
  phoneNumberHasSuffix?: InputMaybe<Scalars['String']['input']>
  phoneNumberIn?: InputMaybe<Array<Scalars['String']['input']>>
  phoneNumberIsNil?: InputMaybe<Scalars['Boolean']['input']>
  phoneNumberLT?: InputMaybe<Scalars['String']['input']>
  phoneNumberLTE?: InputMaybe<Scalars['String']['input']>
  phoneNumberNEQ?: InputMaybe<Scalars['String']['input']>
  phoneNumberNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  phoneNumberNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<ContactHistoryUserStatus>
  statusIn?: InputMaybe<Array<ContactHistoryUserStatus>>
  statusNEQ?: InputMaybe<ContactHistoryUserStatus>
  statusNotIn?: InputMaybe<Array<ContactHistoryUserStatus>>
  /** title field predicates */
  title?: InputMaybe<Scalars['String']['input']>
  titleContains?: InputMaybe<Scalars['String']['input']>
  titleContainsFold?: InputMaybe<Scalars['String']['input']>
  titleEqualFold?: InputMaybe<Scalars['String']['input']>
  titleGT?: InputMaybe<Scalars['String']['input']>
  titleGTE?: InputMaybe<Scalars['String']['input']>
  titleHasPrefix?: InputMaybe<Scalars['String']['input']>
  titleHasSuffix?: InputMaybe<Scalars['String']['input']>
  titleIn?: InputMaybe<Array<Scalars['String']['input']>>
  titleIsNil?: InputMaybe<Scalars['Boolean']['input']>
  titleLT?: InputMaybe<Scalars['String']['input']>
  titleLTE?: InputMaybe<Scalars['String']['input']>
  titleNEQ?: InputMaybe<Scalars['String']['input']>
  titleNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  titleNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for Contact connections */
export interface ContactOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Contacts. */
  field: ContactOrderField
}

/** Properties by which Contact connections can be ordered. */
export enum ContactOrderField {
  STATUS = 'STATUS',
  company = 'company',
  created_at = 'created_at',
  email = 'email',
  full_name = 'full_name',
  title = 'title',
  updated_at = 'updated_at',
}

export interface ContactSearchResult {
  __typename?: 'ContactSearchResult'
  contacts?: Maybe<Array<Contact>>
}

/** Return response for updateContact mutation */
export interface ContactUpdatePayload {
  __typename?: 'ContactUpdatePayload'
  /** Updated contact */
  contact: Contact
}

/** ContactUserStatus is enum for the field status */
export enum ContactUserStatus {
  ACTIVE = 'ACTIVE',
  DEACTIVATED = 'DEACTIVATED',
  INACTIVE = 'INACTIVE',
  ONBOARDING = 'ONBOARDING',
  SUSPENDED = 'SUSPENDED',
}

/**
 * ContactWhereInput is used for filtering Contact objects.
 * Input was generated by ent.
 */
export interface ContactWhereInput {
  /** address field predicates */
  address?: InputMaybe<Scalars['String']['input']>
  addressContains?: InputMaybe<Scalars['String']['input']>
  addressContainsFold?: InputMaybe<Scalars['String']['input']>
  addressEqualFold?: InputMaybe<Scalars['String']['input']>
  addressGT?: InputMaybe<Scalars['String']['input']>
  addressGTE?: InputMaybe<Scalars['String']['input']>
  addressHasPrefix?: InputMaybe<Scalars['String']['input']>
  addressHasSuffix?: InputMaybe<Scalars['String']['input']>
  addressIn?: InputMaybe<Array<Scalars['String']['input']>>
  addressIsNil?: InputMaybe<Scalars['Boolean']['input']>
  addressLT?: InputMaybe<Scalars['String']['input']>
  addressLTE?: InputMaybe<Scalars['String']['input']>
  addressNEQ?: InputMaybe<Scalars['String']['input']>
  addressNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  addressNotNil?: InputMaybe<Scalars['Boolean']['input']>
  and?: InputMaybe<Array<ContactWhereInput>>
  /** company field predicates */
  company?: InputMaybe<Scalars['String']['input']>
  companyContains?: InputMaybe<Scalars['String']['input']>
  companyContainsFold?: InputMaybe<Scalars['String']['input']>
  companyEqualFold?: InputMaybe<Scalars['String']['input']>
  companyGT?: InputMaybe<Scalars['String']['input']>
  companyGTE?: InputMaybe<Scalars['String']['input']>
  companyHasPrefix?: InputMaybe<Scalars['String']['input']>
  companyHasSuffix?: InputMaybe<Scalars['String']['input']>
  companyIn?: InputMaybe<Array<Scalars['String']['input']>>
  companyIsNil?: InputMaybe<Scalars['Boolean']['input']>
  companyLT?: InputMaybe<Scalars['String']['input']>
  companyLTE?: InputMaybe<Scalars['String']['input']>
  companyNEQ?: InputMaybe<Scalars['String']['input']>
  companyNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  companyNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** email field predicates */
  email?: InputMaybe<Scalars['String']['input']>
  emailContains?: InputMaybe<Scalars['String']['input']>
  emailContainsFold?: InputMaybe<Scalars['String']['input']>
  emailEqualFold?: InputMaybe<Scalars['String']['input']>
  emailGT?: InputMaybe<Scalars['String']['input']>
  emailGTE?: InputMaybe<Scalars['String']['input']>
  emailHasPrefix?: InputMaybe<Scalars['String']['input']>
  emailHasSuffix?: InputMaybe<Scalars['String']['input']>
  emailIn?: InputMaybe<Array<Scalars['String']['input']>>
  emailIsNil?: InputMaybe<Scalars['Boolean']['input']>
  emailLT?: InputMaybe<Scalars['String']['input']>
  emailLTE?: InputMaybe<Scalars['String']['input']>
  emailNEQ?: InputMaybe<Scalars['String']['input']>
  emailNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  emailNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** full_name field predicates */
  fullName?: InputMaybe<Scalars['String']['input']>
  fullNameContains?: InputMaybe<Scalars['String']['input']>
  fullNameContainsFold?: InputMaybe<Scalars['String']['input']>
  fullNameEqualFold?: InputMaybe<Scalars['String']['input']>
  fullNameGT?: InputMaybe<Scalars['String']['input']>
  fullNameGTE?: InputMaybe<Scalars['String']['input']>
  fullNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  fullNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  fullNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  fullNameLT?: InputMaybe<Scalars['String']['input']>
  fullNameLTE?: InputMaybe<Scalars['String']['input']>
  fullNameNEQ?: InputMaybe<Scalars['String']['input']>
  fullNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** entities edge predicates */
  hasEntities?: InputMaybe<Scalars['Boolean']['input']>
  hasEntitiesWith?: InputMaybe<Array<EntityWhereInput>>
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<ContactWhereInput>
  or?: InputMaybe<Array<ContactWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** phone_number field predicates */
  phoneNumber?: InputMaybe<Scalars['String']['input']>
  phoneNumberContains?: InputMaybe<Scalars['String']['input']>
  phoneNumberContainsFold?: InputMaybe<Scalars['String']['input']>
  phoneNumberEqualFold?: InputMaybe<Scalars['String']['input']>
  phoneNumberGT?: InputMaybe<Scalars['String']['input']>
  phoneNumberGTE?: InputMaybe<Scalars['String']['input']>
  phoneNumberHasPrefix?: InputMaybe<Scalars['String']['input']>
  phoneNumberHasSuffix?: InputMaybe<Scalars['String']['input']>
  phoneNumberIn?: InputMaybe<Array<Scalars['String']['input']>>
  phoneNumberIsNil?: InputMaybe<Scalars['Boolean']['input']>
  phoneNumberLT?: InputMaybe<Scalars['String']['input']>
  phoneNumberLTE?: InputMaybe<Scalars['String']['input']>
  phoneNumberNEQ?: InputMaybe<Scalars['String']['input']>
  phoneNumberNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  phoneNumberNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<ContactUserStatus>
  statusIn?: InputMaybe<Array<ContactUserStatus>>
  statusNEQ?: InputMaybe<ContactUserStatus>
  statusNotIn?: InputMaybe<Array<ContactUserStatus>>
  /** title field predicates */
  title?: InputMaybe<Scalars['String']['input']>
  titleContains?: InputMaybe<Scalars['String']['input']>
  titleContainsFold?: InputMaybe<Scalars['String']['input']>
  titleEqualFold?: InputMaybe<Scalars['String']['input']>
  titleGT?: InputMaybe<Scalars['String']['input']>
  titleGTE?: InputMaybe<Scalars['String']['input']>
  titleHasPrefix?: InputMaybe<Scalars['String']['input']>
  titleHasSuffix?: InputMaybe<Scalars['String']['input']>
  titleIn?: InputMaybe<Array<Scalars['String']['input']>>
  titleIsNil?: InputMaybe<Scalars['Boolean']['input']>
  titleLT?: InputMaybe<Scalars['String']['input']>
  titleLTE?: InputMaybe<Scalars['String']['input']>
  titleNEQ?: InputMaybe<Scalars['String']['input']>
  titleNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  titleNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface Control extends Node {
  __typename?: 'Control'
  actionPlans: ActionPlanConnection
  /** methods used to verify the control implementation during an audit */
  assessmentMethods?: Maybe<Array<Scalars['AssessmentMethod']['output']>>
  /** objectives of the audit assessment for the control */
  assessmentObjectives?: Maybe<Array<Scalars['AssessmentObjective']['output']>>
  /** external auditor id of the control, can be used to map to external audit partner mappings */
  auditorReferenceID?: Maybe<Scalars['String']['output']>
  /** groups that are blocked from viewing or editing the risk */
  blockedGroups?: Maybe<Array<Group>>
  /** category of the control */
  category?: Maybe<Scalars['String']['output']>
  /** category id of the control */
  categoryID?: Maybe<Scalars['String']['output']>
  controlImplementations: ControlImplementationConnection
  controlObjectives: ControlObjectiveConnection
  /** the group of users who are responsible for the control, will be assigned tasks, approval, etc. */
  controlOwner?: Maybe<Group>
  /** the id of the group that owns the control */
  controlOwnerID?: Maybe<Scalars['ID']['output']>
  /** questions to ask to verify the control */
  controlQuestions?: Maybe<Array<Scalars['String']['output']>>
  /** type of the control e.g. preventive, detective, corrective, or deterrent. */
  controlType?: Maybe<ControlControlType>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** temporary delegate for the control, used for temporary control ownership */
  delegate?: Maybe<Group>
  /** the id of the group that is temporarily delegated to own the control */
  delegateID?: Maybe<Scalars['ID']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** description of what the control is supposed to accomplish */
  description?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  /** provides edit access to the risk to members of the group */
  editors?: Maybe<Array<Group>>
  evidence: EvidenceConnection
  /** examples of evidence for the control */
  exampleEvidence?: Maybe<Array<Scalars['ExampleEvidence']['output']>>
  id: Scalars['ID']['output']
  /** implementation guidance for the control */
  implementationGuidance?: Maybe<Array<Scalars['ImplementationGuidance']['output']>>
  internalPolicies: InternalPolicyConnection
  /** mapped categories of the control to other standards */
  mappedCategories?: Maybe<Array<Scalars['String']['output']>>
  mappedControls: MappedControlConnection
  narratives: NarrativeConnection
  owner?: Maybe<Organization>
  /** the ID of the organization owner of the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  procedures: ProcedureConnection
  programs: ProgramConnection
  /** the unique reference code for the control */
  refCode: Scalars['String']['output']
  /** internal reference id of the control, can be used for internal tracking */
  referenceID?: Maybe<Scalars['String']['output']>
  /** references for the control */
  references?: Maybe<Array<Scalars['Reference']['output']>>
  risks: RiskConnection
  /** source of the control, e.g. framework, template, custom, etc. */
  source?: Maybe<ControlControlSource>
  standard?: Maybe<Standard>
  /** the id of the standard that the control belongs to, if applicable */
  standardID?: Maybe<Scalars['ID']['output']>
  /** status of the control */
  status?: Maybe<ControlControlStatus>
  /** subcategory of the control */
  subcategory?: Maybe<Scalars['String']['output']>
  subcontrols: SubcontrolConnection
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  tasks: TaskConnection
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  /** provides view access to the risk to members of the group */
  viewers?: Maybe<Array<Group>>
}

export interface ControlActionPlansArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ActionPlanOrder>>
  where?: InputMaybe<ActionPlanWhereInput>
}

export interface ControlControlImplementationsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlImplementationOrder>>
  where?: InputMaybe<ControlImplementationWhereInput>
}

export interface ControlControlObjectivesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlObjectiveOrder>>
  where?: InputMaybe<ControlObjectiveWhereInput>
}

export interface ControlEvidenceArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EvidenceOrder>>
  where?: InputMaybe<EvidenceWhereInput>
}

export interface ControlInternalPoliciesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<InternalPolicyOrder>>
  where?: InputMaybe<InternalPolicyWhereInput>
}

export interface ControlMappedControlsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<MappedControlOrder>>
  where?: InputMaybe<MappedControlWhereInput>
}

export interface ControlNarrativesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<NarrativeOrder>>
  where?: InputMaybe<NarrativeWhereInput>
}

export interface ControlProceduresArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProcedureOrder>>
  where?: InputMaybe<ProcedureWhereInput>
}

export interface ControlProgramsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProgramOrder>>
  where?: InputMaybe<ProgramWhereInput>
}

export interface ControlRisksArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<RiskOrder>>
  where?: InputMaybe<RiskWhereInput>
}

export interface ControlSubcontrolsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<SubcontrolOrder>>
  where?: InputMaybe<SubcontrolWhereInput>
}

export interface ControlTasksArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<TaskOrder>>
  where?: InputMaybe<TaskWhereInput>
}

/** Return response for createBulkControl mutation */
export interface ControlBulkCreatePayload {
  __typename?: 'ControlBulkCreatePayload'
  /** Created controls */
  controls?: Maybe<Array<Control>>
}

/** A connection to a list of items. */
export interface ControlConnection {
  __typename?: 'ControlConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ControlEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** ControlControlSource is enum for the field source */
export enum ControlControlSource {
  FRAMEWORK = 'FRAMEWORK',
  IMPORTED = 'IMPORTED',
  TEMPLATE = 'TEMPLATE',
  USER_DEFINED = 'USER_DEFINED',
}

/** ControlControlStatus is enum for the field status */
export enum ControlControlStatus {
  APPROVED = 'APPROVED',
  ARCHIVED = 'ARCHIVED',
  CHANGES_REQUESTED = 'CHANGES_REQUESTED',
  NEEDS_APPROVAL = 'NEEDS_APPROVAL',
  NULL = 'NULL',
  PREPARING = 'PREPARING',
}

/** ControlControlType is enum for the field control_type */
export enum ControlControlType {
  CORRECTIVE = 'CORRECTIVE',
  DETECTIVE = 'DETECTIVE',
  DETERRENT = 'DETERRENT',
  PREVENTATIVE = 'PREVENTATIVE',
}

/** Return response for createControl mutation */
export interface ControlCreatePayload {
  __typename?: 'ControlCreatePayload'
  /** Created control */
  control: Control
}

/** Return response for deleteControl mutation */
export interface ControlDeletePayload {
  __typename?: 'ControlDeletePayload'
  /** Deleted control ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface ControlEdge {
  __typename?: 'ControlEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<Control>
}

export interface ControlHistory extends Node {
  __typename?: 'ControlHistory'
  /** methods used to verify the control implementation during an audit */
  assessmentMethods?: Maybe<Array<Scalars['AssessmentMethod']['output']>>
  /** objectives of the audit assessment for the control */
  assessmentObjectives?: Maybe<Array<Scalars['AssessmentObjective']['output']>>
  /** external auditor id of the control, can be used to map to external audit partner mappings */
  auditorReferenceID?: Maybe<Scalars['String']['output']>
  /** category of the control */
  category?: Maybe<Scalars['String']['output']>
  /** category id of the control */
  categoryID?: Maybe<Scalars['String']['output']>
  /** the id of the group that owns the control */
  controlOwnerID?: Maybe<Scalars['String']['output']>
  /** questions to ask to verify the control */
  controlQuestions?: Maybe<Array<Scalars['String']['output']>>
  /** type of the control e.g. preventive, detective, corrective, or deterrent. */
  controlType?: Maybe<ControlHistoryControlType>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** the id of the group that is temporarily delegated to own the control */
  delegateID?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** description of what the control is supposed to accomplish */
  description?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  /** examples of evidence for the control */
  exampleEvidence?: Maybe<Array<Scalars['ExampleEvidence']['output']>>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** implementation guidance for the control */
  implementationGuidance?: Maybe<Array<Scalars['ImplementationGuidance']['output']>>
  /** mapped categories of the control to other standards */
  mappedCategories?: Maybe<Array<Scalars['String']['output']>>
  operation: ControlHistoryOpType
  /** the ID of the organization owner of the object */
  ownerID?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** the unique reference code for the control */
  refCode: Scalars['String']['output']
  /** internal reference id of the control, can be used for internal tracking */
  referenceID?: Maybe<Scalars['String']['output']>
  /** references for the control */
  references?: Maybe<Array<Scalars['Reference']['output']>>
  /** source of the control, e.g. framework, template, custom, etc. */
  source?: Maybe<ControlHistoryControlSource>
  /** the id of the standard that the control belongs to, if applicable */
  standardID?: Maybe<Scalars['String']['output']>
  /** status of the control */
  status?: Maybe<ControlHistoryControlStatus>
  /** subcategory of the control */
  subcategory?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface ControlHistoryConnection {
  __typename?: 'ControlHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ControlHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** ControlHistoryControlSource is enum for the field source */
export enum ControlHistoryControlSource {
  FRAMEWORK = 'FRAMEWORK',
  IMPORTED = 'IMPORTED',
  TEMPLATE = 'TEMPLATE',
  USER_DEFINED = 'USER_DEFINED',
}

/** ControlHistoryControlStatus is enum for the field status */
export enum ControlHistoryControlStatus {
  APPROVED = 'APPROVED',
  ARCHIVED = 'ARCHIVED',
  CHANGES_REQUESTED = 'CHANGES_REQUESTED',
  NEEDS_APPROVAL = 'NEEDS_APPROVAL',
  NULL = 'NULL',
  PREPARING = 'PREPARING',
}

/** ControlHistoryControlType is enum for the field control_type */
export enum ControlHistoryControlType {
  CORRECTIVE = 'CORRECTIVE',
  DETECTIVE = 'DETECTIVE',
  DETERRENT = 'DETERRENT',
  PREVENTATIVE = 'PREVENTATIVE',
}

/** An edge in a connection. */
export interface ControlHistoryEdge {
  __typename?: 'ControlHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<ControlHistory>
}

/** ControlHistoryOpType is enum for the field operation */
export enum ControlHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for ControlHistory connections */
export interface ControlHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order ControlHistories. */
  field: ControlHistoryOrderField
}

/** Properties by which ControlHistory connections can be ordered. */
export enum ControlHistoryOrderField {
  CONTROL_TYPE = 'CONTROL_TYPE',
  SOURCE = 'SOURCE',
  STATUS = 'STATUS',
  category = 'category',
  created_at = 'created_at',
  ref_code = 'ref_code',
  subcategory = 'subcategory',
  updated_at = 'updated_at',
}

/**
 * ControlHistoryWhereInput is used for filtering ControlHistory objects.
 * Input was generated by ent.
 */
export interface ControlHistoryWhereInput {
  and?: InputMaybe<Array<ControlHistoryWhereInput>>
  /** auditor_reference_id field predicates */
  auditorReferenceID?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDContains?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDContainsFold?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDEqualFold?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDGT?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDGTE?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  auditorReferenceIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  auditorReferenceIDLT?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDLTE?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDNEQ?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  auditorReferenceIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** category field predicates */
  category?: InputMaybe<Scalars['String']['input']>
  categoryContains?: InputMaybe<Scalars['String']['input']>
  categoryContainsFold?: InputMaybe<Scalars['String']['input']>
  categoryEqualFold?: InputMaybe<Scalars['String']['input']>
  categoryGT?: InputMaybe<Scalars['String']['input']>
  categoryGTE?: InputMaybe<Scalars['String']['input']>
  categoryHasPrefix?: InputMaybe<Scalars['String']['input']>
  categoryHasSuffix?: InputMaybe<Scalars['String']['input']>
  /** category_id field predicates */
  categoryID?: InputMaybe<Scalars['String']['input']>
  categoryIDContains?: InputMaybe<Scalars['String']['input']>
  categoryIDContainsFold?: InputMaybe<Scalars['String']['input']>
  categoryIDEqualFold?: InputMaybe<Scalars['String']['input']>
  categoryIDGT?: InputMaybe<Scalars['String']['input']>
  categoryIDGTE?: InputMaybe<Scalars['String']['input']>
  categoryIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  categoryIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  categoryIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  categoryIDLT?: InputMaybe<Scalars['String']['input']>
  categoryIDLTE?: InputMaybe<Scalars['String']['input']>
  categoryIDNEQ?: InputMaybe<Scalars['String']['input']>
  categoryIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  categoryIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryIsNil?: InputMaybe<Scalars['Boolean']['input']>
  categoryLT?: InputMaybe<Scalars['String']['input']>
  categoryLTE?: InputMaybe<Scalars['String']['input']>
  categoryNEQ?: InputMaybe<Scalars['String']['input']>
  categoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** control_owner_id field predicates */
  controlOwnerID?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDContains?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDGT?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDGTE?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  controlOwnerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  controlOwnerIDLT?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDLTE?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDNEQ?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  controlOwnerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** control_type field predicates */
  controlType?: InputMaybe<ControlHistoryControlType>
  controlTypeIn?: InputMaybe<Array<ControlHistoryControlType>>
  controlTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  controlTypeNEQ?: InputMaybe<ControlHistoryControlType>
  controlTypeNotIn?: InputMaybe<Array<ControlHistoryControlType>>
  controlTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** delegate_id field predicates */
  delegateID?: InputMaybe<Scalars['String']['input']>
  delegateIDContains?: InputMaybe<Scalars['String']['input']>
  delegateIDContainsFold?: InputMaybe<Scalars['String']['input']>
  delegateIDEqualFold?: InputMaybe<Scalars['String']['input']>
  delegateIDGT?: InputMaybe<Scalars['String']['input']>
  delegateIDGTE?: InputMaybe<Scalars['String']['input']>
  delegateIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  delegateIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  delegateIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  delegateIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  delegateIDLT?: InputMaybe<Scalars['String']['input']>
  delegateIDLTE?: InputMaybe<Scalars['String']['input']>
  delegateIDNEQ?: InputMaybe<Scalars['String']['input']>
  delegateIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  delegateIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>
  descriptionContains?: InputMaybe<Scalars['String']['input']>
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>
  descriptionGT?: InputMaybe<Scalars['String']['input']>
  descriptionGTE?: InputMaybe<Scalars['String']['input']>
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  descriptionLT?: InputMaybe<Scalars['String']['input']>
  descriptionLTE?: InputMaybe<Scalars['String']['input']>
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<ControlHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<ControlHistoryOpType>
  operationIn?: InputMaybe<Array<ControlHistoryOpType>>
  operationNEQ?: InputMaybe<ControlHistoryOpType>
  operationNotIn?: InputMaybe<Array<ControlHistoryOpType>>
  or?: InputMaybe<Array<ControlHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  /** ref_code field predicates */
  refCode?: InputMaybe<Scalars['String']['input']>
  refCodeContains?: InputMaybe<Scalars['String']['input']>
  refCodeContainsFold?: InputMaybe<Scalars['String']['input']>
  refCodeEqualFold?: InputMaybe<Scalars['String']['input']>
  refCodeGT?: InputMaybe<Scalars['String']['input']>
  refCodeGTE?: InputMaybe<Scalars['String']['input']>
  refCodeHasPrefix?: InputMaybe<Scalars['String']['input']>
  refCodeHasSuffix?: InputMaybe<Scalars['String']['input']>
  refCodeIn?: InputMaybe<Array<Scalars['String']['input']>>
  refCodeLT?: InputMaybe<Scalars['String']['input']>
  refCodeLTE?: InputMaybe<Scalars['String']['input']>
  refCodeNEQ?: InputMaybe<Scalars['String']['input']>
  refCodeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** reference_id field predicates */
  referenceID?: InputMaybe<Scalars['String']['input']>
  referenceIDContains?: InputMaybe<Scalars['String']['input']>
  referenceIDContainsFold?: InputMaybe<Scalars['String']['input']>
  referenceIDEqualFold?: InputMaybe<Scalars['String']['input']>
  referenceIDGT?: InputMaybe<Scalars['String']['input']>
  referenceIDGTE?: InputMaybe<Scalars['String']['input']>
  referenceIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  referenceIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  referenceIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  referenceIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  referenceIDLT?: InputMaybe<Scalars['String']['input']>
  referenceIDLTE?: InputMaybe<Scalars['String']['input']>
  referenceIDNEQ?: InputMaybe<Scalars['String']['input']>
  referenceIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  referenceIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** source field predicates */
  source?: InputMaybe<ControlHistoryControlSource>
  sourceIn?: InputMaybe<Array<ControlHistoryControlSource>>
  sourceIsNil?: InputMaybe<Scalars['Boolean']['input']>
  sourceNEQ?: InputMaybe<ControlHistoryControlSource>
  sourceNotIn?: InputMaybe<Array<ControlHistoryControlSource>>
  sourceNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** standard_id field predicates */
  standardID?: InputMaybe<Scalars['String']['input']>
  standardIDContains?: InputMaybe<Scalars['String']['input']>
  standardIDContainsFold?: InputMaybe<Scalars['String']['input']>
  standardIDEqualFold?: InputMaybe<Scalars['String']['input']>
  standardIDGT?: InputMaybe<Scalars['String']['input']>
  standardIDGTE?: InputMaybe<Scalars['String']['input']>
  standardIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  standardIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  standardIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  standardIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  standardIDLT?: InputMaybe<Scalars['String']['input']>
  standardIDLTE?: InputMaybe<Scalars['String']['input']>
  standardIDNEQ?: InputMaybe<Scalars['String']['input']>
  standardIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  standardIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<ControlHistoryControlStatus>
  statusIn?: InputMaybe<Array<ControlHistoryControlStatus>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusNEQ?: InputMaybe<ControlHistoryControlStatus>
  statusNotIn?: InputMaybe<Array<ControlHistoryControlStatus>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** subcategory field predicates */
  subcategory?: InputMaybe<Scalars['String']['input']>
  subcategoryContains?: InputMaybe<Scalars['String']['input']>
  subcategoryContainsFold?: InputMaybe<Scalars['String']['input']>
  subcategoryEqualFold?: InputMaybe<Scalars['String']['input']>
  subcategoryGT?: InputMaybe<Scalars['String']['input']>
  subcategoryGTE?: InputMaybe<Scalars['String']['input']>
  subcategoryHasPrefix?: InputMaybe<Scalars['String']['input']>
  subcategoryHasSuffix?: InputMaybe<Scalars['String']['input']>
  subcategoryIn?: InputMaybe<Array<Scalars['String']['input']>>
  subcategoryIsNil?: InputMaybe<Scalars['Boolean']['input']>
  subcategoryLT?: InputMaybe<Scalars['String']['input']>
  subcategoryLTE?: InputMaybe<Scalars['String']['input']>
  subcategoryNEQ?: InputMaybe<Scalars['String']['input']>
  subcategoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  subcategoryNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface ControlImplementation extends Node {
  __typename?: 'ControlImplementation'
  controls: ControlConnection
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** details of the control implementation */
  details?: Maybe<Scalars['String']['output']>
  id: Scalars['ID']['output']
  /** date the control was implemented */
  implementationDate?: Maybe<Scalars['Time']['output']>
  owner?: Maybe<Organization>
  /** the ID of the organization owner of the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  /** status of the %s, e.g. draft, published, archived, etc. */
  status?: Maybe<ControlImplementationDocumentStatus>
  subcontrols: SubcontrolConnection
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  /** date the control implementation was verified */
  verificationDate?: Maybe<Scalars['Time']['output']>
  /** set to true if the control implementation has been verified */
  verified?: Maybe<Scalars['Boolean']['output']>
}

export interface ControlImplementationControlsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlOrder>>
  where?: InputMaybe<ControlWhereInput>
}

export interface ControlImplementationSubcontrolsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<SubcontrolOrder>>
  where?: InputMaybe<SubcontrolWhereInput>
}

/** Return response for createBulkControlImplementation mutation */
export interface ControlImplementationBulkCreatePayload {
  __typename?: 'ControlImplementationBulkCreatePayload'
  /** Created controlImplementations */
  controlImplementations?: Maybe<Array<ControlImplementation>>
}

/** A connection to a list of items. */
export interface ControlImplementationConnection {
  __typename?: 'ControlImplementationConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ControlImplementationEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createControlImplementation mutation */
export interface ControlImplementationCreatePayload {
  __typename?: 'ControlImplementationCreatePayload'
  /** Created controlImplementation */
  controlImplementation: ControlImplementation
}

/** Return response for deleteControlImplementation mutation */
export interface ControlImplementationDeletePayload {
  __typename?: 'ControlImplementationDeletePayload'
  /** Deleted controlImplementation ID */
  deletedID: Scalars['ID']['output']
}

/** ControlImplementationDocumentStatus is enum for the field status */
export enum ControlImplementationDocumentStatus {
  APPROVED = 'APPROVED',
  ARCHIVED = 'ARCHIVED',
  DRAFT = 'DRAFT',
  NEEDS_APPROVAL = 'NEEDS_APPROVAL',
  PUBLISHED = 'PUBLISHED',
}

/** An edge in a connection. */
export interface ControlImplementationEdge {
  __typename?: 'ControlImplementationEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<ControlImplementation>
}

export interface ControlImplementationHistory extends Node {
  __typename?: 'ControlImplementationHistory'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** details of the control implementation */
  details?: Maybe<Scalars['String']['output']>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** date the control was implemented */
  implementationDate?: Maybe<Scalars['Time']['output']>
  operation: ControlImplementationHistoryOpType
  /** the ID of the organization owner of the object */
  ownerID?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** status of the %s, e.g. draft, published, archived, etc. */
  status?: Maybe<ControlImplementationHistoryDocumentStatus>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  /** date the control implementation was verified */
  verificationDate?: Maybe<Scalars['Time']['output']>
  /** set to true if the control implementation has been verified */
  verified?: Maybe<Scalars['Boolean']['output']>
}

/** A connection to a list of items. */
export interface ControlImplementationHistoryConnection {
  __typename?: 'ControlImplementationHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ControlImplementationHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** ControlImplementationHistoryDocumentStatus is enum for the field status */
export enum ControlImplementationHistoryDocumentStatus {
  APPROVED = 'APPROVED',
  ARCHIVED = 'ARCHIVED',
  DRAFT = 'DRAFT',
  NEEDS_APPROVAL = 'NEEDS_APPROVAL',
  PUBLISHED = 'PUBLISHED',
}

/** An edge in a connection. */
export interface ControlImplementationHistoryEdge {
  __typename?: 'ControlImplementationHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<ControlImplementationHistory>
}

/** ControlImplementationHistoryOpType is enum for the field operation */
export enum ControlImplementationHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for ControlImplementationHistory connections */
export interface ControlImplementationHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order ControlImplementationHistories. */
  field: ControlImplementationHistoryOrderField
}

/** Properties by which ControlImplementationHistory connections can be ordered. */
export enum ControlImplementationHistoryOrderField {
  STATUS = 'STATUS',
  created_at = 'created_at',
  implementation_date = 'implementation_date',
  updated_at = 'updated_at',
  verification_date = 'verification_date',
  verified = 'verified',
}

/**
 * ControlImplementationHistoryWhereInput is used for filtering ControlImplementationHistory objects.
 * Input was generated by ent.
 */
export interface ControlImplementationHistoryWhereInput {
  and?: InputMaybe<Array<ControlImplementationHistoryWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** details field predicates */
  details?: InputMaybe<Scalars['String']['input']>
  detailsContains?: InputMaybe<Scalars['String']['input']>
  detailsContainsFold?: InputMaybe<Scalars['String']['input']>
  detailsEqualFold?: InputMaybe<Scalars['String']['input']>
  detailsGT?: InputMaybe<Scalars['String']['input']>
  detailsGTE?: InputMaybe<Scalars['String']['input']>
  detailsHasPrefix?: InputMaybe<Scalars['String']['input']>
  detailsHasSuffix?: InputMaybe<Scalars['String']['input']>
  detailsIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsIsNil?: InputMaybe<Scalars['Boolean']['input']>
  detailsLT?: InputMaybe<Scalars['String']['input']>
  detailsLTE?: InputMaybe<Scalars['String']['input']>
  detailsNEQ?: InputMaybe<Scalars['String']['input']>
  detailsNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** implementation_date field predicates */
  implementationDate?: InputMaybe<Scalars['Time']['input']>
  implementationDateGT?: InputMaybe<Scalars['Time']['input']>
  implementationDateGTE?: InputMaybe<Scalars['Time']['input']>
  implementationDateIn?: InputMaybe<Array<Scalars['Time']['input']>>
  implementationDateIsNil?: InputMaybe<Scalars['Boolean']['input']>
  implementationDateLT?: InputMaybe<Scalars['Time']['input']>
  implementationDateLTE?: InputMaybe<Scalars['Time']['input']>
  implementationDateNEQ?: InputMaybe<Scalars['Time']['input']>
  implementationDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  implementationDateNotNil?: InputMaybe<Scalars['Boolean']['input']>
  not?: InputMaybe<ControlImplementationHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<ControlImplementationHistoryOpType>
  operationIn?: InputMaybe<Array<ControlImplementationHistoryOpType>>
  operationNEQ?: InputMaybe<ControlImplementationHistoryOpType>
  operationNotIn?: InputMaybe<Array<ControlImplementationHistoryOpType>>
  or?: InputMaybe<Array<ControlImplementationHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<ControlImplementationHistoryDocumentStatus>
  statusIn?: InputMaybe<Array<ControlImplementationHistoryDocumentStatus>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusNEQ?: InputMaybe<ControlImplementationHistoryDocumentStatus>
  statusNotIn?: InputMaybe<Array<ControlImplementationHistoryDocumentStatus>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** verification_date field predicates */
  verificationDate?: InputMaybe<Scalars['Time']['input']>
  verificationDateGT?: InputMaybe<Scalars['Time']['input']>
  verificationDateGTE?: InputMaybe<Scalars['Time']['input']>
  verificationDateIn?: InputMaybe<Array<Scalars['Time']['input']>>
  verificationDateIsNil?: InputMaybe<Scalars['Boolean']['input']>
  verificationDateLT?: InputMaybe<Scalars['Time']['input']>
  verificationDateLTE?: InputMaybe<Scalars['Time']['input']>
  verificationDateNEQ?: InputMaybe<Scalars['Time']['input']>
  verificationDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  verificationDateNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** verified field predicates */
  verified?: InputMaybe<Scalars['Boolean']['input']>
  verifiedIsNil?: InputMaybe<Scalars['Boolean']['input']>
  verifiedNEQ?: InputMaybe<Scalars['Boolean']['input']>
  verifiedNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for ControlImplementation connections */
export interface ControlImplementationOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order ControlImplementations. */
  field: ControlImplementationOrderField
}

/** Properties by which ControlImplementation connections can be ordered. */
export enum ControlImplementationOrderField {
  STATUS = 'STATUS',
  created_at = 'created_at',
  implementation_date = 'implementation_date',
  updated_at = 'updated_at',
  verification_date = 'verification_date',
  verified = 'verified',
}

export interface ControlImplementationSearchResult {
  __typename?: 'ControlImplementationSearchResult'
  controlImplementations?: Maybe<Array<ControlImplementation>>
}

/** Return response for updateControlImplementation mutation */
export interface ControlImplementationUpdatePayload {
  __typename?: 'ControlImplementationUpdatePayload'
  /** Updated controlImplementation */
  controlImplementation: ControlImplementation
}

/**
 * ControlImplementationWhereInput is used for filtering ControlImplementation objects.
 * Input was generated by ent.
 */
export interface ControlImplementationWhereInput {
  and?: InputMaybe<Array<ControlImplementationWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** details field predicates */
  details?: InputMaybe<Scalars['String']['input']>
  detailsContains?: InputMaybe<Scalars['String']['input']>
  detailsContainsFold?: InputMaybe<Scalars['String']['input']>
  detailsEqualFold?: InputMaybe<Scalars['String']['input']>
  detailsGT?: InputMaybe<Scalars['String']['input']>
  detailsGTE?: InputMaybe<Scalars['String']['input']>
  detailsHasPrefix?: InputMaybe<Scalars['String']['input']>
  detailsHasSuffix?: InputMaybe<Scalars['String']['input']>
  detailsIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsIsNil?: InputMaybe<Scalars['Boolean']['input']>
  detailsLT?: InputMaybe<Scalars['String']['input']>
  detailsLTE?: InputMaybe<Scalars['String']['input']>
  detailsNEQ?: InputMaybe<Scalars['String']['input']>
  detailsNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** controls edge predicates */
  hasControls?: InputMaybe<Scalars['Boolean']['input']>
  hasControlsWith?: InputMaybe<Array<ControlWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** subcontrols edge predicates */
  hasSubcontrols?: InputMaybe<Scalars['Boolean']['input']>
  hasSubcontrolsWith?: InputMaybe<Array<SubcontrolWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** implementation_date field predicates */
  implementationDate?: InputMaybe<Scalars['Time']['input']>
  implementationDateGT?: InputMaybe<Scalars['Time']['input']>
  implementationDateGTE?: InputMaybe<Scalars['Time']['input']>
  implementationDateIn?: InputMaybe<Array<Scalars['Time']['input']>>
  implementationDateIsNil?: InputMaybe<Scalars['Boolean']['input']>
  implementationDateLT?: InputMaybe<Scalars['Time']['input']>
  implementationDateLTE?: InputMaybe<Scalars['Time']['input']>
  implementationDateNEQ?: InputMaybe<Scalars['Time']['input']>
  implementationDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  implementationDateNotNil?: InputMaybe<Scalars['Boolean']['input']>
  not?: InputMaybe<ControlImplementationWhereInput>
  or?: InputMaybe<Array<ControlImplementationWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<ControlImplementationDocumentStatus>
  statusIn?: InputMaybe<Array<ControlImplementationDocumentStatus>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusNEQ?: InputMaybe<ControlImplementationDocumentStatus>
  statusNotIn?: InputMaybe<Array<ControlImplementationDocumentStatus>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** verification_date field predicates */
  verificationDate?: InputMaybe<Scalars['Time']['input']>
  verificationDateGT?: InputMaybe<Scalars['Time']['input']>
  verificationDateGTE?: InputMaybe<Scalars['Time']['input']>
  verificationDateIn?: InputMaybe<Array<Scalars['Time']['input']>>
  verificationDateIsNil?: InputMaybe<Scalars['Boolean']['input']>
  verificationDateLT?: InputMaybe<Scalars['Time']['input']>
  verificationDateLTE?: InputMaybe<Scalars['Time']['input']>
  verificationDateNEQ?: InputMaybe<Scalars['Time']['input']>
  verificationDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  verificationDateNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** verified field predicates */
  verified?: InputMaybe<Scalars['Boolean']['input']>
  verifiedIsNil?: InputMaybe<Scalars['Boolean']['input']>
  verifiedNEQ?: InputMaybe<Scalars['Boolean']['input']>
  verifiedNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface ControlObjective extends Node {
  __typename?: 'ControlObjective'
  /** groups that are blocked from viewing or editing the risk */
  blockedGroups?: Maybe<Array<Group>>
  /** category of the control */
  category?: Maybe<Scalars['String']['output']>
  /** type of the control objective e.g. compliance, financial, operational, etc. */
  controlObjectiveType?: Maybe<Scalars['String']['output']>
  controls: ControlConnection
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** the desired outcome or target of the control objective */
  desiredOutcome?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  /** provides edit access to the risk to members of the group */
  editors?: Maybe<Array<Group>>
  evidence: EvidenceConnection
  id: Scalars['ID']['output']
  internalPolicies: InternalPolicyConnection
  /** the name of the control objective */
  name: Scalars['String']['output']
  narratives: NarrativeConnection
  owner?: Maybe<Organization>
  /** the ID of the organization owner of the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  procedures: ProcedureConnection
  programs: ProgramConnection
  /** revision of the object as a semver (e.g. v1.0.0), by default any update will bump the patch version, unless the revision_bump field is set */
  revision?: Maybe<Scalars['String']['output']>
  risks: RiskConnection
  /** source of the control, e.g. framework, template, custom, etc. */
  source?: Maybe<ControlObjectiveControlSource>
  /** status of the control objective */
  status?: Maybe<Scalars['String']['output']>
  /** subcategory of the control */
  subcategory?: Maybe<Scalars['String']['output']>
  subcontrols: SubcontrolConnection
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  tasks: TaskConnection
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  /** provides view access to the risk to members of the group */
  viewers?: Maybe<Array<Group>>
}

export interface ControlObjectiveControlsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlOrder>>
  where?: InputMaybe<ControlWhereInput>
}

export interface ControlObjectiveEvidenceArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EvidenceOrder>>
  where?: InputMaybe<EvidenceWhereInput>
}

export interface ControlObjectiveInternalPoliciesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<InternalPolicyOrder>>
  where?: InputMaybe<InternalPolicyWhereInput>
}

export interface ControlObjectiveNarrativesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<NarrativeOrder>>
  where?: InputMaybe<NarrativeWhereInput>
}

export interface ControlObjectiveProceduresArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProcedureOrder>>
  where?: InputMaybe<ProcedureWhereInput>
}

export interface ControlObjectiveProgramsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProgramOrder>>
  where?: InputMaybe<ProgramWhereInput>
}

export interface ControlObjectiveRisksArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<RiskOrder>>
  where?: InputMaybe<RiskWhereInput>
}

export interface ControlObjectiveSubcontrolsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<SubcontrolOrder>>
  where?: InputMaybe<SubcontrolWhereInput>
}

export interface ControlObjectiveTasksArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<TaskOrder>>
  where?: InputMaybe<TaskWhereInput>
}

/** Return response for createBulkControlObjective mutation */
export interface ControlObjectiveBulkCreatePayload {
  __typename?: 'ControlObjectiveBulkCreatePayload'
  /** Created controlObjectives */
  controlObjectives?: Maybe<Array<ControlObjective>>
}

/** A connection to a list of items. */
export interface ControlObjectiveConnection {
  __typename?: 'ControlObjectiveConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ControlObjectiveEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** ControlObjectiveControlSource is enum for the field source */
export enum ControlObjectiveControlSource {
  FRAMEWORK = 'FRAMEWORK',
  IMPORTED = 'IMPORTED',
  TEMPLATE = 'TEMPLATE',
  USER_DEFINED = 'USER_DEFINED',
}

/** Return response for createControlObjective mutation */
export interface ControlObjectiveCreatePayload {
  __typename?: 'ControlObjectiveCreatePayload'
  /** Created controlObjective */
  controlObjective: ControlObjective
}

/** Return response for deleteControlObjective mutation */
export interface ControlObjectiveDeletePayload {
  __typename?: 'ControlObjectiveDeletePayload'
  /** Deleted controlObjective ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface ControlObjectiveEdge {
  __typename?: 'ControlObjectiveEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<ControlObjective>
}

export interface ControlObjectiveHistory extends Node {
  __typename?: 'ControlObjectiveHistory'
  /** category of the control */
  category?: Maybe<Scalars['String']['output']>
  /** type of the control objective e.g. compliance, financial, operational, etc. */
  controlObjectiveType?: Maybe<Scalars['String']['output']>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** the desired outcome or target of the control objective */
  desiredOutcome?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** the name of the control objective */
  name: Scalars['String']['output']
  operation: ControlObjectiveHistoryOpType
  /** the ID of the organization owner of the object */
  ownerID?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** revision of the object as a semver (e.g. v1.0.0), by default any update will bump the patch version, unless the revision_bump field is set */
  revision?: Maybe<Scalars['String']['output']>
  /** source of the control, e.g. framework, template, custom, etc. */
  source?: Maybe<ControlObjectiveHistoryControlSource>
  /** status of the control objective */
  status?: Maybe<Scalars['String']['output']>
  /** subcategory of the control */
  subcategory?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface ControlObjectiveHistoryConnection {
  __typename?: 'ControlObjectiveHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ControlObjectiveHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** ControlObjectiveHistoryControlSource is enum for the field source */
export enum ControlObjectiveHistoryControlSource {
  FRAMEWORK = 'FRAMEWORK',
  IMPORTED = 'IMPORTED',
  TEMPLATE = 'TEMPLATE',
  USER_DEFINED = 'USER_DEFINED',
}

/** An edge in a connection. */
export interface ControlObjectiveHistoryEdge {
  __typename?: 'ControlObjectiveHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<ControlObjectiveHistory>
}

/** ControlObjectiveHistoryOpType is enum for the field operation */
export enum ControlObjectiveHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for ControlObjectiveHistory connections */
export interface ControlObjectiveHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order ControlObjectiveHistories. */
  field: ControlObjectiveHistoryOrderField
}

/** Properties by which ControlObjectiveHistory connections can be ordered. */
export enum ControlObjectiveHistoryOrderField {
  SOURCE = 'SOURCE',
  category = 'category',
  control_objective_type = 'control_objective_type',
  created_at = 'created_at',
  name = 'name',
  revision = 'revision',
  status = 'status',
  subcategory = 'subcategory',
  updated_at = 'updated_at',
}

/**
 * ControlObjectiveHistoryWhereInput is used for filtering ControlObjectiveHistory objects.
 * Input was generated by ent.
 */
export interface ControlObjectiveHistoryWhereInput {
  and?: InputMaybe<Array<ControlObjectiveHistoryWhereInput>>
  /** category field predicates */
  category?: InputMaybe<Scalars['String']['input']>
  categoryContains?: InputMaybe<Scalars['String']['input']>
  categoryContainsFold?: InputMaybe<Scalars['String']['input']>
  categoryEqualFold?: InputMaybe<Scalars['String']['input']>
  categoryGT?: InputMaybe<Scalars['String']['input']>
  categoryGTE?: InputMaybe<Scalars['String']['input']>
  categoryHasPrefix?: InputMaybe<Scalars['String']['input']>
  categoryHasSuffix?: InputMaybe<Scalars['String']['input']>
  categoryIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryIsNil?: InputMaybe<Scalars['Boolean']['input']>
  categoryLT?: InputMaybe<Scalars['String']['input']>
  categoryLTE?: InputMaybe<Scalars['String']['input']>
  categoryNEQ?: InputMaybe<Scalars['String']['input']>
  categoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** control_objective_type field predicates */
  controlObjectiveType?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeContains?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeGT?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeGTE?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  controlObjectiveTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  controlObjectiveTypeLT?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeLTE?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeNEQ?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  controlObjectiveTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** desired_outcome field predicates */
  desiredOutcome?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeContains?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeContainsFold?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeEqualFold?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeGT?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeGTE?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeHasPrefix?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeHasSuffix?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeIn?: InputMaybe<Array<Scalars['String']['input']>>
  desiredOutcomeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  desiredOutcomeLT?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeLTE?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeNEQ?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  desiredOutcomeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<ControlObjectiveHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<ControlObjectiveHistoryOpType>
  operationIn?: InputMaybe<Array<ControlObjectiveHistoryOpType>>
  operationNEQ?: InputMaybe<ControlObjectiveHistoryOpType>
  operationNotIn?: InputMaybe<Array<ControlObjectiveHistoryOpType>>
  or?: InputMaybe<Array<ControlObjectiveHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** revision field predicates */
  revision?: InputMaybe<Scalars['String']['input']>
  revisionContains?: InputMaybe<Scalars['String']['input']>
  revisionContainsFold?: InputMaybe<Scalars['String']['input']>
  revisionEqualFold?: InputMaybe<Scalars['String']['input']>
  revisionGT?: InputMaybe<Scalars['String']['input']>
  revisionGTE?: InputMaybe<Scalars['String']['input']>
  revisionHasPrefix?: InputMaybe<Scalars['String']['input']>
  revisionHasSuffix?: InputMaybe<Scalars['String']['input']>
  revisionIn?: InputMaybe<Array<Scalars['String']['input']>>
  revisionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  revisionLT?: InputMaybe<Scalars['String']['input']>
  revisionLTE?: InputMaybe<Scalars['String']['input']>
  revisionNEQ?: InputMaybe<Scalars['String']['input']>
  revisionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  revisionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** source field predicates */
  source?: InputMaybe<ControlObjectiveHistoryControlSource>
  sourceIn?: InputMaybe<Array<ControlObjectiveHistoryControlSource>>
  sourceIsNil?: InputMaybe<Scalars['Boolean']['input']>
  sourceNEQ?: InputMaybe<ControlObjectiveHistoryControlSource>
  sourceNotIn?: InputMaybe<Array<ControlObjectiveHistoryControlSource>>
  sourceNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>
  statusContains?: InputMaybe<Scalars['String']['input']>
  statusContainsFold?: InputMaybe<Scalars['String']['input']>
  statusEqualFold?: InputMaybe<Scalars['String']['input']>
  statusGT?: InputMaybe<Scalars['String']['input']>
  statusGTE?: InputMaybe<Scalars['String']['input']>
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusLT?: InputMaybe<Scalars['String']['input']>
  statusLTE?: InputMaybe<Scalars['String']['input']>
  statusNEQ?: InputMaybe<Scalars['String']['input']>
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** subcategory field predicates */
  subcategory?: InputMaybe<Scalars['String']['input']>
  subcategoryContains?: InputMaybe<Scalars['String']['input']>
  subcategoryContainsFold?: InputMaybe<Scalars['String']['input']>
  subcategoryEqualFold?: InputMaybe<Scalars['String']['input']>
  subcategoryGT?: InputMaybe<Scalars['String']['input']>
  subcategoryGTE?: InputMaybe<Scalars['String']['input']>
  subcategoryHasPrefix?: InputMaybe<Scalars['String']['input']>
  subcategoryHasSuffix?: InputMaybe<Scalars['String']['input']>
  subcategoryIn?: InputMaybe<Array<Scalars['String']['input']>>
  subcategoryIsNil?: InputMaybe<Scalars['Boolean']['input']>
  subcategoryLT?: InputMaybe<Scalars['String']['input']>
  subcategoryLTE?: InputMaybe<Scalars['String']['input']>
  subcategoryNEQ?: InputMaybe<Scalars['String']['input']>
  subcategoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  subcategoryNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for ControlObjective connections */
export interface ControlObjectiveOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order ControlObjectives. */
  field: ControlObjectiveOrderField
}

/** Properties by which ControlObjective connections can be ordered. */
export enum ControlObjectiveOrderField {
  SOURCE = 'SOURCE',
  category = 'category',
  control_objective_type = 'control_objective_type',
  created_at = 'created_at',
  name = 'name',
  revision = 'revision',
  status = 'status',
  subcategory = 'subcategory',
  updated_at = 'updated_at',
}

export interface ControlObjectiveSearchResult {
  __typename?: 'ControlObjectiveSearchResult'
  controlObjectives?: Maybe<Array<ControlObjective>>
}

/** Return response for updateControlObjective mutation */
export interface ControlObjectiveUpdatePayload {
  __typename?: 'ControlObjectiveUpdatePayload'
  /** Updated controlObjective */
  controlObjective: ControlObjective
}

/**
 * ControlObjectiveWhereInput is used for filtering ControlObjective objects.
 * Input was generated by ent.
 */
export interface ControlObjectiveWhereInput {
  and?: InputMaybe<Array<ControlObjectiveWhereInput>>
  /** category field predicates */
  category?: InputMaybe<Scalars['String']['input']>
  categoryContains?: InputMaybe<Scalars['String']['input']>
  categoryContainsFold?: InputMaybe<Scalars['String']['input']>
  categoryEqualFold?: InputMaybe<Scalars['String']['input']>
  categoryGT?: InputMaybe<Scalars['String']['input']>
  categoryGTE?: InputMaybe<Scalars['String']['input']>
  categoryHasPrefix?: InputMaybe<Scalars['String']['input']>
  categoryHasSuffix?: InputMaybe<Scalars['String']['input']>
  categoryIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryIsNil?: InputMaybe<Scalars['Boolean']['input']>
  categoryLT?: InputMaybe<Scalars['String']['input']>
  categoryLTE?: InputMaybe<Scalars['String']['input']>
  categoryNEQ?: InputMaybe<Scalars['String']['input']>
  categoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** control_objective_type field predicates */
  controlObjectiveType?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeContains?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeGT?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeGTE?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  controlObjectiveTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  controlObjectiveTypeLT?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeLTE?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeNEQ?: InputMaybe<Scalars['String']['input']>
  controlObjectiveTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  controlObjectiveTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** desired_outcome field predicates */
  desiredOutcome?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeContains?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeContainsFold?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeEqualFold?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeGT?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeGTE?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeHasPrefix?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeHasSuffix?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeIn?: InputMaybe<Array<Scalars['String']['input']>>
  desiredOutcomeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  desiredOutcomeLT?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeLTE?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeNEQ?: InputMaybe<Scalars['String']['input']>
  desiredOutcomeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  desiredOutcomeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** blocked_groups edge predicates */
  hasBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  hasBlockedGroupsWith?: InputMaybe<Array<GroupWhereInput>>
  /** controls edge predicates */
  hasControls?: InputMaybe<Scalars['Boolean']['input']>
  hasControlsWith?: InputMaybe<Array<ControlWhereInput>>
  /** editors edge predicates */
  hasEditors?: InputMaybe<Scalars['Boolean']['input']>
  hasEditorsWith?: InputMaybe<Array<GroupWhereInput>>
  /** evidence edge predicates */
  hasEvidence?: InputMaybe<Scalars['Boolean']['input']>
  hasEvidenceWith?: InputMaybe<Array<EvidenceWhereInput>>
  /** internal_policies edge predicates */
  hasInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>
  hasInternalPoliciesWith?: InputMaybe<Array<InternalPolicyWhereInput>>
  /** narratives edge predicates */
  hasNarratives?: InputMaybe<Scalars['Boolean']['input']>
  hasNarrativesWith?: InputMaybe<Array<NarrativeWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** procedures edge predicates */
  hasProcedures?: InputMaybe<Scalars['Boolean']['input']>
  hasProceduresWith?: InputMaybe<Array<ProcedureWhereInput>>
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>
  /** risks edge predicates */
  hasRisks?: InputMaybe<Scalars['Boolean']['input']>
  hasRisksWith?: InputMaybe<Array<RiskWhereInput>>
  /** subcontrols edge predicates */
  hasSubcontrols?: InputMaybe<Scalars['Boolean']['input']>
  hasSubcontrolsWith?: InputMaybe<Array<SubcontrolWhereInput>>
  /** tasks edge predicates */
  hasTasks?: InputMaybe<Scalars['Boolean']['input']>
  hasTasksWith?: InputMaybe<Array<TaskWhereInput>>
  /** viewers edge predicates */
  hasViewers?: InputMaybe<Scalars['Boolean']['input']>
  hasViewersWith?: InputMaybe<Array<GroupWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<ControlObjectiveWhereInput>
  or?: InputMaybe<Array<ControlObjectiveWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** revision field predicates */
  revision?: InputMaybe<Scalars['String']['input']>
  revisionContains?: InputMaybe<Scalars['String']['input']>
  revisionContainsFold?: InputMaybe<Scalars['String']['input']>
  revisionEqualFold?: InputMaybe<Scalars['String']['input']>
  revisionGT?: InputMaybe<Scalars['String']['input']>
  revisionGTE?: InputMaybe<Scalars['String']['input']>
  revisionHasPrefix?: InputMaybe<Scalars['String']['input']>
  revisionHasSuffix?: InputMaybe<Scalars['String']['input']>
  revisionIn?: InputMaybe<Array<Scalars['String']['input']>>
  revisionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  revisionLT?: InputMaybe<Scalars['String']['input']>
  revisionLTE?: InputMaybe<Scalars['String']['input']>
  revisionNEQ?: InputMaybe<Scalars['String']['input']>
  revisionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  revisionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** source field predicates */
  source?: InputMaybe<ControlObjectiveControlSource>
  sourceIn?: InputMaybe<Array<ControlObjectiveControlSource>>
  sourceIsNil?: InputMaybe<Scalars['Boolean']['input']>
  sourceNEQ?: InputMaybe<ControlObjectiveControlSource>
  sourceNotIn?: InputMaybe<Array<ControlObjectiveControlSource>>
  sourceNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>
  statusContains?: InputMaybe<Scalars['String']['input']>
  statusContainsFold?: InputMaybe<Scalars['String']['input']>
  statusEqualFold?: InputMaybe<Scalars['String']['input']>
  statusGT?: InputMaybe<Scalars['String']['input']>
  statusGTE?: InputMaybe<Scalars['String']['input']>
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusLT?: InputMaybe<Scalars['String']['input']>
  statusLTE?: InputMaybe<Scalars['String']['input']>
  statusNEQ?: InputMaybe<Scalars['String']['input']>
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** subcategory field predicates */
  subcategory?: InputMaybe<Scalars['String']['input']>
  subcategoryContains?: InputMaybe<Scalars['String']['input']>
  subcategoryContainsFold?: InputMaybe<Scalars['String']['input']>
  subcategoryEqualFold?: InputMaybe<Scalars['String']['input']>
  subcategoryGT?: InputMaybe<Scalars['String']['input']>
  subcategoryGTE?: InputMaybe<Scalars['String']['input']>
  subcategoryHasPrefix?: InputMaybe<Scalars['String']['input']>
  subcategoryHasSuffix?: InputMaybe<Scalars['String']['input']>
  subcategoryIn?: InputMaybe<Array<Scalars['String']['input']>>
  subcategoryIsNil?: InputMaybe<Scalars['Boolean']['input']>
  subcategoryLT?: InputMaybe<Scalars['String']['input']>
  subcategoryLTE?: InputMaybe<Scalars['String']['input']>
  subcategoryNEQ?: InputMaybe<Scalars['String']['input']>
  subcategoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  subcategoryNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for Control connections */
export interface ControlOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Controls. */
  field: ControlOrderField
}

/** Properties by which Control connections can be ordered. */
export enum ControlOrderField {
  CONTROL_TYPE = 'CONTROL_TYPE',
  SOURCE = 'SOURCE',
  STATUS = 'STATUS',
  category = 'category',
  created_at = 'created_at',
  ref_code = 'ref_code',
  subcategory = 'subcategory',
  updated_at = 'updated_at',
}

export interface ControlSearchResult {
  __typename?: 'ControlSearchResult'
  controls?: Maybe<Array<Control>>
}

/** Return response for updateControl mutation */
export interface ControlUpdatePayload {
  __typename?: 'ControlUpdatePayload'
  /** Updated control */
  control: Control
}

/**
 * ControlWhereInput is used for filtering Control objects.
 * Input was generated by ent.
 */
export interface ControlWhereInput {
  and?: InputMaybe<Array<ControlWhereInput>>
  /** auditor_reference_id field predicates */
  auditorReferenceID?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDContains?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDContainsFold?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDEqualFold?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDGT?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDGTE?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  auditorReferenceIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  auditorReferenceIDLT?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDLTE?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDNEQ?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  auditorReferenceIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** category field predicates */
  category?: InputMaybe<Scalars['String']['input']>
  categoryContains?: InputMaybe<Scalars['String']['input']>
  categoryContainsFold?: InputMaybe<Scalars['String']['input']>
  categoryEqualFold?: InputMaybe<Scalars['String']['input']>
  categoryGT?: InputMaybe<Scalars['String']['input']>
  categoryGTE?: InputMaybe<Scalars['String']['input']>
  categoryHasPrefix?: InputMaybe<Scalars['String']['input']>
  categoryHasSuffix?: InputMaybe<Scalars['String']['input']>
  /** category_id field predicates */
  categoryID?: InputMaybe<Scalars['String']['input']>
  categoryIDContains?: InputMaybe<Scalars['String']['input']>
  categoryIDContainsFold?: InputMaybe<Scalars['String']['input']>
  categoryIDEqualFold?: InputMaybe<Scalars['String']['input']>
  categoryIDGT?: InputMaybe<Scalars['String']['input']>
  categoryIDGTE?: InputMaybe<Scalars['String']['input']>
  categoryIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  categoryIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  categoryIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  categoryIDLT?: InputMaybe<Scalars['String']['input']>
  categoryIDLTE?: InputMaybe<Scalars['String']['input']>
  categoryIDNEQ?: InputMaybe<Scalars['String']['input']>
  categoryIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  categoryIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryIsNil?: InputMaybe<Scalars['Boolean']['input']>
  categoryLT?: InputMaybe<Scalars['String']['input']>
  categoryLTE?: InputMaybe<Scalars['String']['input']>
  categoryNEQ?: InputMaybe<Scalars['String']['input']>
  categoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** control_owner_id field predicates */
  controlOwnerID?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDContains?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDGT?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDGTE?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  controlOwnerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  controlOwnerIDLT?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDLTE?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  controlOwnerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** control_type field predicates */
  controlType?: InputMaybe<ControlControlType>
  controlTypeIn?: InputMaybe<Array<ControlControlType>>
  controlTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  controlTypeNEQ?: InputMaybe<ControlControlType>
  controlTypeNotIn?: InputMaybe<Array<ControlControlType>>
  controlTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** delegate_id field predicates */
  delegateID?: InputMaybe<Scalars['ID']['input']>
  delegateIDContains?: InputMaybe<Scalars['ID']['input']>
  delegateIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  delegateIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  delegateIDGT?: InputMaybe<Scalars['ID']['input']>
  delegateIDGTE?: InputMaybe<Scalars['ID']['input']>
  delegateIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  delegateIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  delegateIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  delegateIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  delegateIDLT?: InputMaybe<Scalars['ID']['input']>
  delegateIDLTE?: InputMaybe<Scalars['ID']['input']>
  delegateIDNEQ?: InputMaybe<Scalars['ID']['input']>
  delegateIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  delegateIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>
  descriptionContains?: InputMaybe<Scalars['String']['input']>
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>
  descriptionGT?: InputMaybe<Scalars['String']['input']>
  descriptionGTE?: InputMaybe<Scalars['String']['input']>
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  descriptionLT?: InputMaybe<Scalars['String']['input']>
  descriptionLTE?: InputMaybe<Scalars['String']['input']>
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** action_plans edge predicates */
  hasActionPlans?: InputMaybe<Scalars['Boolean']['input']>
  hasActionPlansWith?: InputMaybe<Array<ActionPlanWhereInput>>
  /** blocked_groups edge predicates */
  hasBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  hasBlockedGroupsWith?: InputMaybe<Array<GroupWhereInput>>
  /** control_implementations edge predicates */
  hasControlImplementations?: InputMaybe<Scalars['Boolean']['input']>
  hasControlImplementationsWith?: InputMaybe<Array<ControlImplementationWhereInput>>
  /** control_objectives edge predicates */
  hasControlObjectives?: InputMaybe<Scalars['Boolean']['input']>
  hasControlObjectivesWith?: InputMaybe<Array<ControlObjectiveWhereInput>>
  /** control_owner edge predicates */
  hasControlOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasControlOwnerWith?: InputMaybe<Array<GroupWhereInput>>
  /** delegate edge predicates */
  hasDelegate?: InputMaybe<Scalars['Boolean']['input']>
  hasDelegateWith?: InputMaybe<Array<GroupWhereInput>>
  /** editors edge predicates */
  hasEditors?: InputMaybe<Scalars['Boolean']['input']>
  hasEditorsWith?: InputMaybe<Array<GroupWhereInput>>
  /** evidence edge predicates */
  hasEvidence?: InputMaybe<Scalars['Boolean']['input']>
  hasEvidenceWith?: InputMaybe<Array<EvidenceWhereInput>>
  /** internal_policies edge predicates */
  hasInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>
  hasInternalPoliciesWith?: InputMaybe<Array<InternalPolicyWhereInput>>
  /** mapped_controls edge predicates */
  hasMappedControls?: InputMaybe<Scalars['Boolean']['input']>
  hasMappedControlsWith?: InputMaybe<Array<MappedControlWhereInput>>
  /** narratives edge predicates */
  hasNarratives?: InputMaybe<Scalars['Boolean']['input']>
  hasNarrativesWith?: InputMaybe<Array<NarrativeWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** procedures edge predicates */
  hasProcedures?: InputMaybe<Scalars['Boolean']['input']>
  hasProceduresWith?: InputMaybe<Array<ProcedureWhereInput>>
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>
  /** risks edge predicates */
  hasRisks?: InputMaybe<Scalars['Boolean']['input']>
  hasRisksWith?: InputMaybe<Array<RiskWhereInput>>
  /** standard edge predicates */
  hasStandard?: InputMaybe<Scalars['Boolean']['input']>
  hasStandardWith?: InputMaybe<Array<StandardWhereInput>>
  /** subcontrols edge predicates */
  hasSubcontrols?: InputMaybe<Scalars['Boolean']['input']>
  hasSubcontrolsWith?: InputMaybe<Array<SubcontrolWhereInput>>
  /** tasks edge predicates */
  hasTasks?: InputMaybe<Scalars['Boolean']['input']>
  hasTasksWith?: InputMaybe<Array<TaskWhereInput>>
  /** viewers edge predicates */
  hasViewers?: InputMaybe<Scalars['Boolean']['input']>
  hasViewersWith?: InputMaybe<Array<GroupWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<ControlWhereInput>
  or?: InputMaybe<Array<ControlWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref_code field predicates */
  refCode?: InputMaybe<Scalars['String']['input']>
  refCodeContains?: InputMaybe<Scalars['String']['input']>
  refCodeContainsFold?: InputMaybe<Scalars['String']['input']>
  refCodeEqualFold?: InputMaybe<Scalars['String']['input']>
  refCodeGT?: InputMaybe<Scalars['String']['input']>
  refCodeGTE?: InputMaybe<Scalars['String']['input']>
  refCodeHasPrefix?: InputMaybe<Scalars['String']['input']>
  refCodeHasSuffix?: InputMaybe<Scalars['String']['input']>
  refCodeIn?: InputMaybe<Array<Scalars['String']['input']>>
  refCodeLT?: InputMaybe<Scalars['String']['input']>
  refCodeLTE?: InputMaybe<Scalars['String']['input']>
  refCodeNEQ?: InputMaybe<Scalars['String']['input']>
  refCodeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** reference_id field predicates */
  referenceID?: InputMaybe<Scalars['String']['input']>
  referenceIDContains?: InputMaybe<Scalars['String']['input']>
  referenceIDContainsFold?: InputMaybe<Scalars['String']['input']>
  referenceIDEqualFold?: InputMaybe<Scalars['String']['input']>
  referenceIDGT?: InputMaybe<Scalars['String']['input']>
  referenceIDGTE?: InputMaybe<Scalars['String']['input']>
  referenceIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  referenceIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  referenceIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  referenceIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  referenceIDLT?: InputMaybe<Scalars['String']['input']>
  referenceIDLTE?: InputMaybe<Scalars['String']['input']>
  referenceIDNEQ?: InputMaybe<Scalars['String']['input']>
  referenceIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  referenceIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** source field predicates */
  source?: InputMaybe<ControlControlSource>
  sourceIn?: InputMaybe<Array<ControlControlSource>>
  sourceIsNil?: InputMaybe<Scalars['Boolean']['input']>
  sourceNEQ?: InputMaybe<ControlControlSource>
  sourceNotIn?: InputMaybe<Array<ControlControlSource>>
  sourceNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** standard_id field predicates */
  standardID?: InputMaybe<Scalars['ID']['input']>
  standardIDContains?: InputMaybe<Scalars['ID']['input']>
  standardIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  standardIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  standardIDGT?: InputMaybe<Scalars['ID']['input']>
  standardIDGTE?: InputMaybe<Scalars['ID']['input']>
  standardIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  standardIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  standardIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  standardIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  standardIDLT?: InputMaybe<Scalars['ID']['input']>
  standardIDLTE?: InputMaybe<Scalars['ID']['input']>
  standardIDNEQ?: InputMaybe<Scalars['ID']['input']>
  standardIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  standardIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<ControlControlStatus>
  statusIn?: InputMaybe<Array<ControlControlStatus>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusNEQ?: InputMaybe<ControlControlStatus>
  statusNotIn?: InputMaybe<Array<ControlControlStatus>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** subcategory field predicates */
  subcategory?: InputMaybe<Scalars['String']['input']>
  subcategoryContains?: InputMaybe<Scalars['String']['input']>
  subcategoryContainsFold?: InputMaybe<Scalars['String']['input']>
  subcategoryEqualFold?: InputMaybe<Scalars['String']['input']>
  subcategoryGT?: InputMaybe<Scalars['String']['input']>
  subcategoryGTE?: InputMaybe<Scalars['String']['input']>
  subcategoryHasPrefix?: InputMaybe<Scalars['String']['input']>
  subcategoryHasSuffix?: InputMaybe<Scalars['String']['input']>
  subcategoryIn?: InputMaybe<Array<Scalars['String']['input']>>
  subcategoryIsNil?: InputMaybe<Scalars['Boolean']['input']>
  subcategoryLT?: InputMaybe<Scalars['String']['input']>
  subcategoryLTE?: InputMaybe<Scalars['String']['input']>
  subcategoryNEQ?: InputMaybe<Scalars['String']['input']>
  subcategoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  subcategoryNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/**
 * CreateAPITokenInput is used for create APIToken object.
 * Input was generated by ent.
 */
export interface CreateApiTokenInput {
  /** a description of the token's purpose */
  description?: InputMaybe<Scalars['String']['input']>
  /** when the token expires */
  expiresAt?: InputMaybe<Scalars['Time']['input']>
  /** whether the token is active */
  isActive?: InputMaybe<Scalars['Boolean']['input']>
  lastUsedAt?: InputMaybe<Scalars['Time']['input']>
  /** the name associated with the token */
  name: Scalars['String']['input']
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** when the token was revoked */
  revokedAt?: InputMaybe<Scalars['Time']['input']>
  /** the user who revoked the token */
  revokedBy?: InputMaybe<Scalars['String']['input']>
  /** the reason the token was revoked */
  revokedReason?: InputMaybe<Scalars['String']['input']>
  scopes?: InputMaybe<Array<Scalars['String']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * CreateActionPlanInput is used for create ActionPlan object.
 * Input was generated by ent.
 */
export interface CreateActionPlanInput {
  /** type of the action_plan, e.g. compliance, operational, health and safety, etc. */
  actionPlanType?: InputMaybe<Scalars['String']['input']>
  /** whether approval is required for edits to the action_plan */
  approvalRequired?: InputMaybe<Scalars['Boolean']['input']>
  approverID?: InputMaybe<Scalars['ID']['input']>
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  delegateID?: InputMaybe<Scalars['ID']['input']>
  /** details of the action_plan */
  details?: InputMaybe<Scalars['String']['input']>
  /** due date of the action plan */
  dueDate?: InputMaybe<Scalars['Time']['input']>
  /** the name of the action_plan */
  name: Scalars['String']['input']
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** priority of the action plan */
  priority?: InputMaybe<ActionPlanPriority>
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the date the action_plan should be reviewed, calculated based on the review_frequency if not directly set */
  reviewDue?: InputMaybe<Scalars['Time']['input']>
  /** the frequency at which the action_plan should be reviewed, used to calculate the review_due date */
  reviewFrequency?: InputMaybe<ActionPlanFrequency>
  /** revision of the object as a semver (e.g. v1.0.0), by default any update will bump the patch version, unless the revision_bump field is set */
  revision?: InputMaybe<Scalars['String']['input']>
  riskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** source of the action plan */
  source?: InputMaybe<Scalars['String']['input']>
  /** status of the action_plan, e.g. draft, published, archived, etc. */
  status?: InputMaybe<ActionPlanDocumentStatus>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  userIDs?: InputMaybe<Array<Scalars['ID']['input']>>
}

/**
 * CreateContactInput is used for create Contact object.
 * Input was generated by ent.
 */
export interface CreateContactInput {
  /** the address of the contact */
  address?: InputMaybe<Scalars['String']['input']>
  /** the company of the contact */
  company?: InputMaybe<Scalars['String']['input']>
  /** the email of the contact */
  email?: InputMaybe<Scalars['String']['input']>
  entityIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the full name of the contact */
  fullName: Scalars['String']['input']
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** the phone number of the contact */
  phoneNumber?: InputMaybe<Scalars['String']['input']>
  /** status of the contact */
  status?: InputMaybe<ContactUserStatus>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  /** the title of the contact */
  title?: InputMaybe<Scalars['String']['input']>
}

/**
 * CreateControlImplementationInput is used for create ControlImplementation object.
 * Input was generated by ent.
 */
export interface CreateControlImplementationInput {
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** details of the control implementation */
  details?: InputMaybe<Scalars['String']['input']>
  /** date the control was implemented */
  implementationDate?: InputMaybe<Scalars['Time']['input']>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** status of the %s, e.g. draft, published, archived, etc. */
  status?: InputMaybe<ControlImplementationDocumentStatus>
  subcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  /** date the control implementation was verified */
  verificationDate?: InputMaybe<Scalars['Time']['input']>
  /** set to true if the control implementation has been verified */
  verified?: InputMaybe<Scalars['Boolean']['input']>
}

/**
 * CreateControlInput is used for create Control object.
 * Input was generated by ent.
 */
export interface CreateControlInput {
  actionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** methods used to verify the control implementation during an audit */
  assessmentMethods?: InputMaybe<Array<Scalars['AssessmentMethod']['input']>>
  /** objectives of the audit assessment for the control */
  assessmentObjectives?: InputMaybe<Array<Scalars['AssessmentObjective']['input']>>
  /** external auditor id of the control, can be used to map to external audit partner mappings */
  auditorReferenceID?: InputMaybe<Scalars['String']['input']>
  blockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** category of the control */
  category?: InputMaybe<Scalars['String']['input']>
  /** category id of the control */
  categoryID?: InputMaybe<Scalars['String']['input']>
  controlImplementationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlOwnerID?: InputMaybe<Scalars['ID']['input']>
  /** questions to ask to verify the control */
  controlQuestions?: InputMaybe<Array<Scalars['String']['input']>>
  /** type of the control e.g. preventive, detective, corrective, or deterrent. */
  controlType?: InputMaybe<ControlControlType>
  delegateID?: InputMaybe<Scalars['ID']['input']>
  /** description of what the control is supposed to accomplish */
  description?: InputMaybe<Scalars['String']['input']>
  editorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  evidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** examples of evidence for the control */
  exampleEvidence?: InputMaybe<Array<Scalars['ExampleEvidence']['input']>>
  /** implementation guidance for the control */
  implementationGuidance?: InputMaybe<Array<Scalars['ImplementationGuidance']['input']>>
  internalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** mapped categories of the control to other standards */
  mappedCategories?: InputMaybe<Array<Scalars['String']['input']>>
  mappedControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  narrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  procedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the unique reference code for the control */
  refCode: Scalars['String']['input']
  /** internal reference id of the control, can be used for internal tracking */
  referenceID?: InputMaybe<Scalars['String']['input']>
  /** references for the control */
  references?: InputMaybe<Array<Scalars['Reference']['input']>>
  riskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** source of the control, e.g. framework, template, custom, etc. */
  source?: InputMaybe<ControlControlSource>
  standardID?: InputMaybe<Scalars['ID']['input']>
  /** status of the control */
  status?: InputMaybe<ControlControlStatus>
  /** subcategory of the control */
  subcategory?: InputMaybe<Scalars['String']['input']>
  subcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  taskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  viewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
}

/**
 * CreateControlObjectiveInput is used for create ControlObjective object.
 * Input was generated by ent.
 */
export interface CreateControlObjectiveInput {
  blockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** category of the control */
  category?: InputMaybe<Scalars['String']['input']>
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** type of the control objective e.g. compliance, financial, operational, etc. */
  controlObjectiveType?: InputMaybe<Scalars['String']['input']>
  /** the desired outcome or target of the control objective */
  desiredOutcome?: InputMaybe<Scalars['String']['input']>
  editorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  evidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  internalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the name of the control objective */
  name: Scalars['String']['input']
  narrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  procedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** revision of the object as a semver (e.g. v1.0.0), by default any update will bump the patch version, unless the revision_bump field is set */
  revision?: InputMaybe<Scalars['String']['input']>
  riskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** source of the control, e.g. framework, template, custom, etc. */
  source?: InputMaybe<ControlObjectiveControlSource>
  /** status of the control objective */
  status?: InputMaybe<Scalars['String']['input']>
  /** subcategory of the control */
  subcategory?: InputMaybe<Scalars['String']['input']>
  subcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  taskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  viewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
}

export interface CreateControlWithSubcontrolsInput {
  control?: InputMaybe<CreateControlInput>
  subcontrols?: InputMaybe<Array<CreateSubcontrolInput>>
}

/**
 * CreateDocumentDataInput is used for create DocumentData object.
 * Input was generated by ent.
 */
export interface CreateDocumentDataInput {
  /** the json data of the document */
  data: Scalars['Map']['input']
  entityIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  templateID: Scalars['ID']['input']
}

/**
 * CreateEntityInput is used for create Entity object.
 * Input was generated by ent.
 */
export interface CreateEntityInput {
  contactIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** An optional description of the entity */
  description?: InputMaybe<Scalars['String']['input']>
  /** The entity's displayed 'friendly' name */
  displayName?: InputMaybe<Scalars['String']['input']>
  documentIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** domains associated with the entity */
  domains?: InputMaybe<Array<Scalars['String']['input']>>
  entityTypeID?: InputMaybe<Scalars['ID']['input']>
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the name of the entity */
  name?: InputMaybe<Scalars['String']['input']>
  note?: InputMaybe<CreateNoteInput>
  noteIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** status of the entity */
  status?: InputMaybe<Scalars['String']['input']>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * CreateEntityTypeInput is used for create EntityType object.
 * Input was generated by ent.
 */
export interface CreateEntityTypeInput {
  entityIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the name of the entity */
  name: Scalars['String']['input']
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * CreateEventInput is used for create Event object.
 * Input was generated by ent.
 */
export interface CreateEventInput {
  correlationID?: InputMaybe<Scalars['String']['input']>
  eventID?: InputMaybe<Scalars['String']['input']>
  eventType: Scalars['String']['input']
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  groupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  integrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  inviteIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  metadata?: InputMaybe<Scalars['Map']['input']>
  orgSubscriptionIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  organizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  personalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  secretIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  subscriberIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  userIDs?: InputMaybe<Array<Scalars['ID']['input']>>
}

/**
 * CreateEvidenceInput is used for create Evidence object.
 * Input was generated by ent.
 */
export interface CreateEvidenceInput {
  /** description of how the evidence was collected */
  collectionProcedure?: InputMaybe<Scalars['String']['input']>
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the date the evidence was retrieved */
  creationDate?: InputMaybe<Scalars['Time']['input']>
  /** the description of the evidence, what is contained in the uploaded file(s) or url(s) */
  description?: InputMaybe<Scalars['String']['input']>
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** whether the evidence was automatically generated */
  isAutomated?: InputMaybe<Scalars['Boolean']['input']>
  /** the name of the evidence */
  name: Scalars['String']['input']
  ownerID?: InputMaybe<Scalars['ID']['input']>
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the date the evidence should be renewed, defaults to a year from entry date */
  renewalDate?: InputMaybe<Scalars['Time']['input']>
  /** the source of the evidence, e.g. system the evidence was retrieved from (splunk, github, etc) */
  source?: InputMaybe<Scalars['String']['input']>
  /** the status of the evidence, ready, approved, needs renewal, missing artifact, rejected */
  status?: InputMaybe<EvidenceEvidenceStatus>
  subcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  taskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the url of the evidence if not uploaded directly to the system */
  url?: InputMaybe<Scalars['String']['input']>
}

/**
 * CreateFileInput is used for create File object.
 * Input was generated by ent.
 */
export interface CreateFileInput {
  /** the category type of the file, if any (e.g. evidence, invoice, etc.) */
  categoryType?: InputMaybe<Scalars['String']['input']>
  contactIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the content type of the HTTP request - may be different than MIME type as multipart-form can transmit multiple files and different types */
  detectedContentType: Scalars['String']['input']
  /** the mime type detected by the system */
  detectedMimeType?: InputMaybe<Scalars['String']['input']>
  documentIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  entityIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  evidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  groupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the computed md5 hash of the file calculated after we received the contents of the file, but before the file was written to permanent storage */
  md5Hash?: InputMaybe<Scalars['String']['input']>
  organizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  organizationSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  persistedFileSize?: InputMaybe<Scalars['Int']['input']>
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the extension of the file provided */
  providedFileExtension: Scalars['String']['input']
  /** the name of the file provided in the payload key without the extension */
  providedFileName: Scalars['String']['input']
  /** the computed size of the file in the original http request */
  providedFileSize?: InputMaybe<Scalars['Int']['input']>
  /** the storage path is the second-level directory of the file path, typically the correlating logical object ID the file is associated with; files can be stand alone objects and not always correlated to a logical one, so this path of the tree may be empty */
  storagePath?: InputMaybe<Scalars['String']['input']>
  /** the storage scheme of the file, e.g. file://, s3://, etc. */
  storageScheme?: InputMaybe<Scalars['String']['input']>
  /** the storage volume of the file which typically will be the organization ID the file belongs to - this is not a literal volume but the overlay file system mapping */
  storageVolume?: InputMaybe<Scalars['String']['input']>
  /** the key parsed out of a multipart-form request; if we allow multiple files to be uploaded we may want our API specifications to require the use of different keys allowing us to perform easier conditional evaluation on the key and what to do with the file based on key */
  storeKey?: InputMaybe<Scalars['String']['input']>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  templateIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the full URI of the file */
  uri?: InputMaybe<Scalars['String']['input']>
  userIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  userSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>
}

export interface CreateFullProgramInput {
  controls?: InputMaybe<Array<CreateControlWithSubcontrolsInput>>
  internalPolicies?: InputMaybe<Array<CreateInternalPolicyInput>>
  members?: InputMaybe<Array<CreateMemberWithProgramInput>>
  procedures?: InputMaybe<Array<CreateProcedureInput>>
  program: CreateProgramInput
  risks?: InputMaybe<Array<CreateRiskInput>>
}

/**
 * CreateGroupInput is used for create Group object.
 * Input was generated by ent.
 */
export interface CreateGroupInput {
  controlBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlObjectiveBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlObjectiveEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlObjectiveViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  createGroupSettings?: InputMaybe<CreateGroupSettingInput>
  /** the groups description */
  description?: InputMaybe<Scalars['String']['input']>
  /** The group's displayed 'friendly' name */
  displayName?: InputMaybe<Scalars['String']['input']>
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  integrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  internalPolicyBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  internalPolicyEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the URL to an image uploaded by the customer for the groups avatar image */
  logoURL?: InputMaybe<Scalars['String']['input']>
  /** the name of the group - must be unique within the organization */
  name: Scalars['String']['input']
  narrativeBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  narrativeEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  narrativeViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  procedureBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  procedureEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  programBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  programEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  programViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  riskBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  riskEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  riskViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  settingID?: InputMaybe<Scalars['ID']['input']>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  taskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
}

/**
 * CreateGroupMembershipInput is used for create GroupMembership object.
 * Input was generated by ent.
 */
export interface CreateGroupMembershipInput {
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  groupID: Scalars['ID']['input']
  role?: InputMaybe<GroupMembershipRole>
  userID: Scalars['ID']['input']
}

/**
 * CreateGroupSettingInput is used for create GroupSetting object.
 * Input was generated by ent.
 */
export interface CreateGroupSettingInput {
  groupID?: InputMaybe<Scalars['ID']['input']>
  /** the policy governing ability to freely join a group, whether it requires an invitation, application, or either */
  joinPolicy?: InputMaybe<GroupSettingJoinPolicy>
  /** whether to sync group members to github groups */
  syncToGithub?: InputMaybe<Scalars['Boolean']['input']>
  /** whether to sync group members to slack groups */
  syncToSlack?: InputMaybe<Scalars['Boolean']['input']>
  /** whether the group is visible to it's members / owners only or if it's searchable by anyone within the organization */
  visibility?: InputMaybe<GroupSettingVisibility>
}

/**
 * CreateHushInput is used for create Hush object.
 * Input was generated by ent.
 */
export interface CreateHushInput {
  /** a description of the hush value or purpose, such as github PAT */
  description?: InputMaybe<Scalars['String']['input']>
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  integrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the kind of secret, such as sshkey, certificate, api token, etc. */
  kind?: InputMaybe<Scalars['String']['input']>
  /** the logical name of the corresponding hush secret or it's general grouping */
  name: Scalars['String']['input']
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** the generic name of a secret associated with the organization */
  secretName?: InputMaybe<Scalars['String']['input']>
  /** the secret value */
  secretValue?: InputMaybe<Scalars['String']['input']>
}

/**
 * CreateIntegrationInput is used for create Integration object.
 * Input was generated by ent.
 */
export interface CreateIntegrationInput {
  /** a description of the integration */
  description?: InputMaybe<Scalars['String']['input']>
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  kind?: InputMaybe<Scalars['String']['input']>
  /** the name of the integration - must be unique within the organization */
  name: Scalars['String']['input']
  ownerID?: InputMaybe<Scalars['ID']['input']>
  secretIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * CreateInternalPolicyInput is used for create InternalPolicy object.
 * Input was generated by ent.
 */
export interface CreateInternalPolicyInput {
  /** whether approval is required for edits to the policy */
  approvalRequired?: InputMaybe<Scalars['Boolean']['input']>
  approverID?: InputMaybe<Scalars['ID']['input']>
  blockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  delegateID?: InputMaybe<Scalars['ID']['input']>
  /** details of the policy */
  details?: InputMaybe<Scalars['String']['input']>
  editorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the name of the policy */
  name: Scalars['String']['input']
  narrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** type of the policy, e.g. compliance, operational, health and safety, etc. */
  policyType?: InputMaybe<Scalars['String']['input']>
  procedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the date the policy should be reviewed, calculated based on the review_frequency if not directly set */
  reviewDue?: InputMaybe<Scalars['Time']['input']>
  /** the frequency at which the policy should be reviewed, used to calculate the review_due date */
  reviewFrequency?: InputMaybe<InternalPolicyFrequency>
  /** revision of the object as a semver (e.g. v1.0.0), by default any update will bump the patch version, unless the revision_bump field is set */
  revision?: InputMaybe<Scalars['String']['input']>
  /** status of the policy, e.g. draft, published, archived, etc. */
  status?: InputMaybe<InternalPolicyDocumentStatus>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  taskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
}

/**
 * CreateInviteInput is used for create Invite object.
 * Input was generated by ent.
 */
export interface CreateInviteInput {
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the expiration date of the invitation token which defaults to 14 days in the future from creation */
  expires?: InputMaybe<Scalars['Time']['input']>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** the email used as input to generate the invitation token and is the destination person the invitation is sent to who is required to accept to join the organization */
  recipient: Scalars['String']['input']
  /** the user who initiated the invitation */
  requestorID?: InputMaybe<Scalars['String']['input']>
  role?: InputMaybe<InviteRole>
  /** the number of attempts made to perform email send of the invitation, maximum of 5 */
  sendAttempts?: InputMaybe<Scalars['Int']['input']>
  /** the status of the invitation */
  status?: InputMaybe<InviteInviteStatus>
}

/**
 * CreateMappedControlInput is used for create MappedControl object.
 * Input was generated by ent.
 */
export interface CreateMappedControlInput {
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the type of mapping between the two controls, e.g. subset, intersect, equal, superset */
  mappingType?: InputMaybe<Scalars['String']['input']>
  /** description of how the two controls are related */
  relation?: InputMaybe<Scalars['String']['input']>
  subcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

export interface CreateMemberWithProgramInput {
  role?: InputMaybe<ProgramMembershipRole>
  userID: Scalars['ID']['input']
}

/**
 * CreateNarrativeInput is used for create Narrative object.
 * Input was generated by ent.
 */
export interface CreateNarrativeInput {
  blockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the description of the narrative */
  description?: InputMaybe<Scalars['String']['input']>
  /** text data for the narrative document */
  details?: InputMaybe<Scalars['String']['input']>
  editorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the name of the narrative */
  name: Scalars['String']['input']
  ownerID?: InputMaybe<Scalars['ID']['input']>
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  satisfyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  viewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
}

/**
 * CreateNoteInput is used for create Note object.
 * Input was generated by ent.
 */
export interface CreateNoteInput {
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  taskID?: InputMaybe<Scalars['ID']['input']>
  /** the text of the note */
  text: Scalars['String']['input']
}

/**
 * CreateOnboardingInput is used for create Onboarding object.
 * Input was generated by ent.
 */
export interface CreateOnboardingInput {
  /** details given about the company during the onboarding process, including things such as company size, sector, etc */
  companyDetails?: InputMaybe<Scalars['Map']['input']>
  /** name of the company */
  companyName: Scalars['String']['input']
  /** details given about the compliance requirements during the onboarding process, such as coming with existing policies, controls, risk assessments, etc */
  compliance?: InputMaybe<Scalars['Map']['input']>
  /** domains associated with the company */
  domains?: InputMaybe<Array<Scalars['String']['input']>>
  organizationID?: InputMaybe<Scalars['ID']['input']>
  /** details given about the user during the onboarding process, including things such as name, job title, department, etc */
  userDetails?: InputMaybe<Scalars['Map']['input']>
}

/**
 * CreateOrgMembershipInput is used for create OrgMembership object.
 * Input was generated by ent.
 */
export interface CreateOrgMembershipInput {
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  organizationID: Scalars['ID']['input']
  role?: InputMaybe<OrgMembershipRole>
  userID: Scalars['ID']['input']
}

/**
 * CreateOrganizationInput is used for create Organization object.
 * Input was generated by ent.
 */
export interface CreateOrganizationInput {
  actionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  apiTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  avatarFileID?: InputMaybe<Scalars['ID']['input']>
  /** URL of the user's remote avatar */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>
  /** The time the user's (local) avatar was last updated */
  avatarUpdatedAt?: InputMaybe<Scalars['Time']['input']>
  contactIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlImplementationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlObjectiveCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  createOrgSettings?: InputMaybe<CreateOrganizationSettingInput>
  /** Whether the organization has a dedicated database */
  dedicatedDb?: InputMaybe<Scalars['Boolean']['input']>
  /** An optional description of the organization */
  description?: InputMaybe<Scalars['String']['input']>
  /** The organization's displayed 'friendly' name */
  displayName?: InputMaybe<Scalars['String']['input']>
  documentIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  entityIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  entityTypeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  evidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  groupCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  groupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  integrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  internalPolicyCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  internalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  inviteIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the name of the organization */
  name: Scalars['String']['input']
  narrativeCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  narrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  noteIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  orgSubscriptionIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  parentID?: InputMaybe<Scalars['ID']['input']>
  personalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** orgs directly associated with a user */
  personalOrg?: InputMaybe<Scalars['Boolean']['input']>
  procedureCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  procedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  programCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  riskCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  riskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  secretIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  settingID?: InputMaybe<Scalars['ID']['input']>
  standardIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  subcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  subscriberIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  taskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  templateCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  templateIDs?: InputMaybe<Array<Scalars['ID']['input']>>
}

/**
 * CreateOrganizationSettingInput is used for create OrganizationSetting object.
 * Input was generated by ent.
 */
export interface CreateOrganizationSettingInput {
  /** domains allowed to access the organization, if empty all domains are allowed */
  allowedEmailDomains?: InputMaybe<Array<Scalars['String']['input']>>
  /** the billing address to send billing information to */
  billingAddress?: InputMaybe<Scalars['Address']['input']>
  /** Name of the person to contact for billing */
  billingContact?: InputMaybe<Scalars['String']['input']>
  /** Email address of the person to contact for billing */
  billingEmail?: InputMaybe<Scalars['String']['input']>
  /** should we send email notifications related to billing */
  billingNotificationsEnabled?: InputMaybe<Scalars['Boolean']['input']>
  /** Phone number to contact for billing */
  billingPhone?: InputMaybe<Scalars['String']['input']>
  /** domains associated with the organization */
  domains?: InputMaybe<Array<Scalars['String']['input']>>
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** geographical location of the organization */
  geoLocation?: InputMaybe<OrganizationSettingRegion>
  organizationID?: InputMaybe<Scalars['ID']['input']>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  /** Usually government-issued tax ID or business ID such as ABN in Australia */
  taxIdentifier?: InputMaybe<Scalars['String']['input']>
}

/**
 * CreatePersonalAccessTokenInput is used for create PersonalAccessToken object.
 * Input was generated by ent.
 */
export interface CreatePersonalAccessTokenInput {
  /** a description of the token's purpose */
  description?: InputMaybe<Scalars['String']['input']>
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** when the token expires */
  expiresAt?: InputMaybe<Scalars['Time']['input']>
  /** whether the token is active */
  isActive?: InputMaybe<Scalars['Boolean']['input']>
  lastUsedAt?: InputMaybe<Scalars['Time']['input']>
  /** the name associated with the token */
  name: Scalars['String']['input']
  organizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  scopes?: InputMaybe<Array<Scalars['String']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * CreateProcedureInput is used for create Procedure object.
 * Input was generated by ent.
 */
export interface CreateProcedureInput {
  /** whether approval is required for edits to the procedure */
  approvalRequired?: InputMaybe<Scalars['Boolean']['input']>
  approverID?: InputMaybe<Scalars['ID']['input']>
  blockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  delegateID?: InputMaybe<Scalars['ID']['input']>
  /** details of the procedure */
  details?: InputMaybe<Scalars['String']['input']>
  editorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  internalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the name of the procedure */
  name: Scalars['String']['input']
  narrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** type of the procedure, e.g. compliance, operational, health and safety, etc. */
  procedureType?: InputMaybe<Scalars['String']['input']>
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the date the procedure should be reviewed, calculated based on the review_frequency if not directly set */
  reviewDue?: InputMaybe<Scalars['Time']['input']>
  /** the frequency at which the procedure should be reviewed, used to calculate the review_due date */
  reviewFrequency?: InputMaybe<ProcedureFrequency>
  /** revision of the object as a semver (e.g. v1.0.0), by default any update will bump the patch version, unless the revision_bump field is set */
  revision?: InputMaybe<Scalars['String']['input']>
  riskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** status of the procedure, e.g. draft, published, archived, etc. */
  status?: InputMaybe<ProcedureDocumentStatus>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  taskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
}

/**
 * CreateProgramInput is used for create Program object.
 * Input was generated by ent.
 */
export interface CreateProgramInput {
  actionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** can the auditor read comments */
  auditorReadComments?: InputMaybe<Scalars['Boolean']['input']>
  /** is the program ready for the auditor */
  auditorReady?: InputMaybe<Scalars['Boolean']['input']>
  /** can the auditor write comments */
  auditorWriteComments?: InputMaybe<Scalars['Boolean']['input']>
  blockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the description of the program */
  description?: InputMaybe<Scalars['String']['input']>
  editorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the end date of the period */
  endDate?: InputMaybe<Scalars['Time']['input']>
  evidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  internalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the name of the program */
  name: Scalars['String']['input']
  narrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  noteIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  procedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  riskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the start date of the period */
  startDate?: InputMaybe<Scalars['Time']['input']>
  /** the status of the program */
  status?: InputMaybe<ProgramProgramStatus>
  subcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  taskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  viewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
}

/**
 * CreateProgramMembershipInput is used for create ProgramMembership object.
 * Input was generated by ent.
 */
export interface CreateProgramMembershipInput {
  programID: Scalars['ID']['input']
  role?: InputMaybe<ProgramMembershipRole>
  userID: Scalars['ID']['input']
}

export interface CreateProgramWithMembersInput {
  members?: InputMaybe<Array<CreateMemberWithProgramInput>>
  program: CreateProgramInput
}

/**
 * CreateRiskInput is used for create Risk object.
 * Input was generated by ent.
 */
export interface CreateRiskInput {
  actionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  blockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** business costs associated with the risk */
  businessCosts?: InputMaybe<Scalars['String']['input']>
  /** category of the risk, e.g. human resources, operations, IT, etc. */
  category?: InputMaybe<Scalars['String']['input']>
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  delegateID?: InputMaybe<Scalars['ID']['input']>
  /** details of the risk */
  details?: InputMaybe<Scalars['String']['input']>
  editorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** impact of the risk -critical, high, medium, low */
  impact?: InputMaybe<RiskRiskImpact>
  /** likelihood of the risk occurring; unlikely, likely, highly likely */
  likelihood?: InputMaybe<RiskRiskLikelihood>
  /** mitigation for the risk */
  mitigation?: InputMaybe<Scalars['String']['input']>
  /** the name of the risk */
  name: Scalars['String']['input']
  ownerID?: InputMaybe<Scalars['ID']['input']>
  procedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** type of the risk, e.g. strategic, operational, financial, external, etc. */
  riskType?: InputMaybe<Scalars['String']['input']>
  /** score of the risk based on impact and likelihood (1-4 unlikely, 5-9 likely, 10-16 highly likely, 17-20 critical) */
  score?: InputMaybe<Scalars['Int']['input']>
  stakeholderID?: InputMaybe<Scalars['ID']['input']>
  /** status of the risk - open, mitigated, ongoing, in-progress, and archived. */
  status?: InputMaybe<RiskRiskStatus>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  viewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
}

/**
 * CreateStandardInput is used for create Standard object.
 * Input was generated by ent.
 */
export interface CreateStandardInput {
  /** long description of the standard with details of what is covered */
  description?: InputMaybe<Scalars['String']['input']>
  /** domains the standard covers, e.g. availability, confidentiality, etc. */
  domains?: InputMaybe<Array<Scalars['String']['input']>>
  /** unique identifier of the standard with version */
  framework?: InputMaybe<Scalars['String']['input']>
  /** indicates if the standard is freely distributable under a trial license, only for system owned standards */
  freeToUse?: InputMaybe<Scalars['Boolean']['input']>
  /** governing body of the standard, e.g. AICPA, etc. */
  governingBody?: InputMaybe<Scalars['String']['input']>
  /** URL to the logo of the governing body */
  governingBodyLogoURL?: InputMaybe<Scalars['String']['input']>
  /** indicates if the standard should be made available to all users, only for system owned standards */
  isPublic?: InputMaybe<Scalars['Boolean']['input']>
  /** link to the official standard documentation */
  link?: InputMaybe<Scalars['String']['input']>
  /** the long name of the standard body */
  name: Scalars['String']['input']
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** revision of the object as a semver (e.g. v1.0.0), by default any update will bump the patch version, unless the revision_bump field is set */
  revision?: InputMaybe<Scalars['String']['input']>
  /** short name of the standard, e.g. SOC 2, ISO 27001, etc. */
  shortName?: InputMaybe<Scalars['String']['input']>
  /** type of the standard - cybersecurity, healthcare , financial, etc. */
  standardType?: InputMaybe<Scalars['String']['input']>
  /** status of the standard - active, draft, and archived */
  status?: InputMaybe<StandardStandardStatus>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  /** version of the standard */
  version?: InputMaybe<Scalars['String']['input']>
}

/**
 * CreateSubcontrolInput is used for create Subcontrol object.
 * Input was generated by ent.
 */
export interface CreateSubcontrolInput {
  actionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** methods used to verify the control implementation during an audit */
  assessmentMethods?: InputMaybe<Array<Scalars['AssessmentMethod']['input']>>
  /** objectives of the audit assessment for the control */
  assessmentObjectives?: InputMaybe<Array<Scalars['AssessmentObjective']['input']>>
  /** external auditor id of the control, can be used to map to external audit partner mappings */
  auditorReferenceID?: InputMaybe<Scalars['String']['input']>
  /** category of the control */
  category?: InputMaybe<Scalars['String']['input']>
  /** category id of the control */
  categoryID?: InputMaybe<Scalars['String']['input']>
  controlID: Scalars['ID']['input']
  controlImplementationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlOwnerID?: InputMaybe<Scalars['ID']['input']>
  /** questions to ask to verify the control */
  controlQuestions?: InputMaybe<Array<Scalars['String']['input']>>
  /** type of the control e.g. preventive, detective, corrective, or deterrent. */
  controlType?: InputMaybe<SubcontrolControlType>
  delegateID?: InputMaybe<Scalars['ID']['input']>
  /** description of what the control is supposed to accomplish */
  description?: InputMaybe<Scalars['String']['input']>
  evidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** examples of evidence for the control */
  exampleEvidence?: InputMaybe<Array<Scalars['ExampleEvidence']['input']>>
  /** implementation guidance for the control */
  implementationGuidance?: InputMaybe<Array<Scalars['ImplementationGuidance']['input']>>
  internalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** mapped categories of the control to other standards */
  mappedCategories?: InputMaybe<Array<Scalars['String']['input']>>
  mappedControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  narrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  procedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the unique reference code for the control */
  refCode: Scalars['String']['input']
  /** internal reference id of the control, can be used for internal tracking */
  referenceID?: InputMaybe<Scalars['String']['input']>
  /** references for the control */
  references?: InputMaybe<Array<Scalars['Reference']['input']>>
  riskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** source of the control, e.g. framework, template, custom, etc. */
  source?: InputMaybe<SubcontrolControlSource>
  /** status of the control */
  status?: InputMaybe<SubcontrolControlStatus>
  /** subcategory of the control */
  subcategory?: InputMaybe<Scalars['String']['input']>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  taskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
}

/**
 * CreateSubscriberInput is used for create Subscriber object.
 * Input was generated by ent.
 */
export interface CreateSubscriberInput {
  /** email address of the subscriber */
  email: Scalars['String']['input']
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** phone number of the subscriber */
  phoneNumber?: InputMaybe<Scalars['String']['input']>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * CreateTFASettingInput is used for create TFASetting object.
 * Input was generated by ent.
 */
export interface CreateTfaSettingInput {
  /** specifies a user may complete authentication by verifying a TOTP code delivered through an authenticator app */
  totpAllowed?: InputMaybe<Scalars['Boolean']['input']>
}

/**
 * CreateTaskInput is used for create Task object.
 * Input was generated by ent.
 */
export interface CreateTaskInput {
  assigneeID?: InputMaybe<Scalars['ID']['input']>
  assignerID?: InputMaybe<Scalars['ID']['input']>
  /** the category of the task, e.g. evidence upload, risk review, policy review, etc. */
  category?: InputMaybe<Scalars['String']['input']>
  commentIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the completion date of the task */
  completed?: InputMaybe<Scalars['Time']['input']>
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  controlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the description of the task */
  description?: InputMaybe<Scalars['String']['input']>
  /** the details of the task */
  details?: InputMaybe<Scalars['String']['input']>
  /** the due date of the task */
  due?: InputMaybe<Scalars['Time']['input']>
  evidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  groupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  internalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  procedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the status of the task */
  status?: InputMaybe<TaskTaskStatus>
  subcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  /** the title of the task */
  title: Scalars['String']['input']
}

/**
 * CreateTemplateInput is used for create Template object.
 * Input was generated by ent.
 */
export interface CreateTemplateInput {
  /** the description of the template */
  description?: InputMaybe<Scalars['String']['input']>
  documentIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the jsonschema object of the template */
  jsonconfig: Scalars['Map']['input']
  /** the name of the template */
  name: Scalars['String']['input']
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  /** the type of the template, either a provided template or an implementation (document) */
  templateType?: InputMaybe<TemplateDocumentType>
  /** the uischema for the template to render in the UI */
  uischema?: InputMaybe<Scalars['Map']['input']>
}

/**
 * CreateUserInput is used for create User object.
 * Input was generated by ent.
 */
export interface CreateUserInput {
  actionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  assigneeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  assignerTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** auth provider used to register the account */
  authProvider?: InputMaybe<UserAuthProvider>
  avatarFileID?: InputMaybe<Scalars['ID']['input']>
  /** URL of the user's remote avatar */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>
  /** The time the user's (local) avatar was last updated */
  avatarUpdatedAt?: InputMaybe<Scalars['Time']['input']>
  /** The user's displayed 'friendly' name */
  displayName: Scalars['String']['input']
  email: Scalars['String']['input']
  emailVerificationTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  firstName?: InputMaybe<Scalars['String']['input']>
  groupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  lastName?: InputMaybe<Scalars['String']['input']>
  /** the time the user was last seen */
  lastSeen?: InputMaybe<Scalars['Time']['input']>
  organizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** user password hash */
  password?: InputMaybe<Scalars['String']['input']>
  passwordResetTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  personalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the user's role */
  role?: InputMaybe<UserRole>
  settingID: Scalars['ID']['input']
  /** the Subject of the user JWT */
  sub?: InputMaybe<Scalars['String']['input']>
  subcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  tfaSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  webauthnIDs?: InputMaybe<Array<Scalars['ID']['input']>>
}

/**
 * CreateUserSettingInput is used for create UserSetting object.
 * Input was generated by ent.
 */
export interface CreateUserSettingInput {
  defaultOrgID?: InputMaybe<Scalars['ID']['input']>
  /** whether the user has confirmed their email address */
  emailConfirmed?: InputMaybe<Scalars['Boolean']['input']>
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** whether the user has two factor authentication enabled */
  isTfaEnabled?: InputMaybe<Scalars['Boolean']['input']>
  /** specifies a user may complete authentication by verifying a WebAuthn capable device */
  isWebauthnAllowed?: InputMaybe<Scalars['Boolean']['input']>
  /** user account is locked if unconfirmed or explicitly locked */
  locked?: InputMaybe<Scalars['Boolean']['input']>
  /** The time notifications regarding the user were silenced */
  silencedAt?: InputMaybe<Scalars['Time']['input']>
  /** status of the user account */
  status?: InputMaybe<UserSettingUserStatus>
  /** The time the user was suspended */
  suspendedAt?: InputMaybe<Scalars['Time']['input']>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  userID?: InputMaybe<Scalars['ID']['input']>
}

export interface DocumentData extends Node {
  __typename?: 'DocumentData'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** the json data of the document */
  data: Scalars['Map']['output']
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  entities: EntityConnection
  files: FileConnection
  id: Scalars['ID']['output']
  owner?: Maybe<Organization>
  /** the ID of the organization owner of the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  template: Template
  /** the template id of the document */
  templateID: Scalars['ID']['output']
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

export interface DocumentDataEntitiesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EntityOrder>>
  where?: InputMaybe<EntityWhereInput>
}

export interface DocumentDataFilesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<FileOrder>>
  where?: InputMaybe<FileWhereInput>
}

/** Return response for createBulkDocumentData mutation */
export interface DocumentDataBulkCreatePayload {
  __typename?: 'DocumentDataBulkCreatePayload'
  /** Created documentData */
  documentData?: Maybe<Array<DocumentData>>
}

/** A connection to a list of items. */
export interface DocumentDataConnection {
  __typename?: 'DocumentDataConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<DocumentDataEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createDocumentData mutation */
export interface DocumentDataCreatePayload {
  __typename?: 'DocumentDataCreatePayload'
  /** Created documentData */
  documentData: DocumentData
}

/** Return response for deleteDocumentData mutation */
export interface DocumentDataDeletePayload {
  __typename?: 'DocumentDataDeletePayload'
  /** Deleted documentData ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface DocumentDataEdge {
  __typename?: 'DocumentDataEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<DocumentData>
}

export interface DocumentDataHistory extends Node {
  __typename?: 'DocumentDataHistory'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** the json data of the document */
  data: Scalars['Map']['output']
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  operation: DocumentDataHistoryOpType
  /** the ID of the organization owner of the object */
  ownerID?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  /** the template id of the document */
  templateID: Scalars['String']['output']
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface DocumentDataHistoryConnection {
  __typename?: 'DocumentDataHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<DocumentDataHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface DocumentDataHistoryEdge {
  __typename?: 'DocumentDataHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<DocumentDataHistory>
}

/** DocumentDataHistoryOpType is enum for the field operation */
export enum DocumentDataHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for DocumentDataHistory connections */
export interface DocumentDataHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order DocumentDataHistories. */
  field: DocumentDataHistoryOrderField
}

/** Properties by which DocumentDataHistory connections can be ordered. */
export enum DocumentDataHistoryOrderField {
  created_at = 'created_at',
  updated_at = 'updated_at',
}

/**
 * DocumentDataHistoryWhereInput is used for filtering DocumentDataHistory objects.
 * Input was generated by ent.
 */
export interface DocumentDataHistoryWhereInput {
  and?: InputMaybe<Array<DocumentDataHistoryWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<DocumentDataHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<DocumentDataHistoryOpType>
  operationIn?: InputMaybe<Array<DocumentDataHistoryOpType>>
  operationNEQ?: InputMaybe<DocumentDataHistoryOpType>
  operationNotIn?: InputMaybe<Array<DocumentDataHistoryOpType>>
  or?: InputMaybe<Array<DocumentDataHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** template_id field predicates */
  templateID?: InputMaybe<Scalars['String']['input']>
  templateIDContains?: InputMaybe<Scalars['String']['input']>
  templateIDContainsFold?: InputMaybe<Scalars['String']['input']>
  templateIDEqualFold?: InputMaybe<Scalars['String']['input']>
  templateIDGT?: InputMaybe<Scalars['String']['input']>
  templateIDGTE?: InputMaybe<Scalars['String']['input']>
  templateIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  templateIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  templateIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  templateIDLT?: InputMaybe<Scalars['String']['input']>
  templateIDLTE?: InputMaybe<Scalars['String']['input']>
  templateIDNEQ?: InputMaybe<Scalars['String']['input']>
  templateIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for DocumentData connections */
export interface DocumentDataOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order DocumentDataSlice. */
  field: DocumentDataOrderField
}

/** Properties by which DocumentData connections can be ordered. */
export enum DocumentDataOrderField {
  created_at = 'created_at',
  updated_at = 'updated_at',
}

export interface DocumentDataSearchResult {
  __typename?: 'DocumentDataSearchResult'
  documentData?: Maybe<Array<DocumentData>>
}

/** Return response for updateDocumentData mutation */
export interface DocumentDataUpdatePayload {
  __typename?: 'DocumentDataUpdatePayload'
  /** Updated documentData */
  documentData: DocumentData
}

/**
 * DocumentDataWhereInput is used for filtering DocumentData objects.
 * Input was generated by ent.
 */
export interface DocumentDataWhereInput {
  and?: InputMaybe<Array<DocumentDataWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** entities edge predicates */
  hasEntities?: InputMaybe<Scalars['Boolean']['input']>
  hasEntitiesWith?: InputMaybe<Array<EntityWhereInput>>
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** template edge predicates */
  hasTemplate?: InputMaybe<Scalars['Boolean']['input']>
  hasTemplateWith?: InputMaybe<Array<TemplateWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<DocumentDataWhereInput>
  or?: InputMaybe<Array<DocumentDataWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** template_id field predicates */
  templateID?: InputMaybe<Scalars['ID']['input']>
  templateIDContains?: InputMaybe<Scalars['ID']['input']>
  templateIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  templateIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  templateIDGT?: InputMaybe<Scalars['ID']['input']>
  templateIDGTE?: InputMaybe<Scalars['ID']['input']>
  templateIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  templateIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  templateIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  templateIDLT?: InputMaybe<Scalars['ID']['input']>
  templateIDLTE?: InputMaybe<Scalars['ID']['input']>
  templateIDNEQ?: InputMaybe<Scalars['ID']['input']>
  templateIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface Entity extends Node {
  __typename?: 'Entity'
  contacts: ContactConnection
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** An optional description of the entity */
  description?: Maybe<Scalars['String']['output']>
  /** The entity's displayed 'friendly' name */
  displayName?: Maybe<Scalars['String']['output']>
  documents: DocumentDataConnection
  /** domains associated with the entity */
  domains?: Maybe<Array<Scalars['String']['output']>>
  entityType?: Maybe<EntityType>
  /** The type of the entity */
  entityTypeID?: Maybe<Scalars['ID']['output']>
  files: FileConnection
  id: Scalars['ID']['output']
  /** the name of the entity */
  name?: Maybe<Scalars['String']['output']>
  notes: NoteConnection
  owner?: Maybe<Organization>
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  /** status of the entity */
  status?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

export interface EntityContactsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ContactOrder>>
  where?: InputMaybe<ContactWhereInput>
}

export interface EntityDocumentsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<DocumentDataOrder>>
  where?: InputMaybe<DocumentDataWhereInput>
}

export interface EntityFilesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<FileOrder>>
  where?: InputMaybe<FileWhereInput>
}

export interface EntityNotesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<NoteOrder>>
  where?: InputMaybe<NoteWhereInput>
}

/** Return response for createBulkEntity mutation */
export interface EntityBulkCreatePayload {
  __typename?: 'EntityBulkCreatePayload'
  /** Created entities */
  entities?: Maybe<Array<Entity>>
}

/** A connection to a list of items. */
export interface EntityConnection {
  __typename?: 'EntityConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<EntityEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createEntity mutation */
export interface EntityCreatePayload {
  __typename?: 'EntityCreatePayload'
  /** Created entity */
  entity: Entity
}

/** Return response for deleteEntity mutation */
export interface EntityDeletePayload {
  __typename?: 'EntityDeletePayload'
  /** Deleted entity ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface EntityEdge {
  __typename?: 'EntityEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<Entity>
}

export interface EntityHistory extends Node {
  __typename?: 'EntityHistory'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** An optional description of the entity */
  description?: Maybe<Scalars['String']['output']>
  /** The entity's displayed 'friendly' name */
  displayName?: Maybe<Scalars['String']['output']>
  /** domains associated with the entity */
  domains?: Maybe<Array<Scalars['String']['output']>>
  /** The type of the entity */
  entityTypeID?: Maybe<Scalars['String']['output']>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** the name of the entity */
  name?: Maybe<Scalars['String']['output']>
  operation: EntityHistoryOpType
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** status of the entity */
  status?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface EntityHistoryConnection {
  __typename?: 'EntityHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<EntityHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface EntityHistoryEdge {
  __typename?: 'EntityHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<EntityHistory>
}

/** EntityHistoryOpType is enum for the field operation */
export enum EntityHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for EntityHistory connections */
export interface EntityHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order EntityHistories. */
  field: EntityHistoryOrderField
}

/** Properties by which EntityHistory connections can be ordered. */
export enum EntityHistoryOrderField {
  created_at = 'created_at',
  display_name = 'display_name',
  name = 'name',
  status = 'status',
  updated_at = 'updated_at',
}

/**
 * EntityHistoryWhereInput is used for filtering EntityHistory objects.
 * Input was generated by ent.
 */
export interface EntityHistoryWhereInput {
  and?: InputMaybe<Array<EntityHistoryWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>
  displayNameContains?: InputMaybe<Scalars['String']['input']>
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>
  displayNameGT?: InputMaybe<Scalars['String']['input']>
  displayNameGTE?: InputMaybe<Scalars['String']['input']>
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayNameIsNil?: InputMaybe<Scalars['Boolean']['input']>
  displayNameLT?: InputMaybe<Scalars['String']['input']>
  displayNameLTE?: InputMaybe<Scalars['String']['input']>
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayNameNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** entity_type_id field predicates */
  entityTypeID?: InputMaybe<Scalars['String']['input']>
  entityTypeIDContains?: InputMaybe<Scalars['String']['input']>
  entityTypeIDContainsFold?: InputMaybe<Scalars['String']['input']>
  entityTypeIDEqualFold?: InputMaybe<Scalars['String']['input']>
  entityTypeIDGT?: InputMaybe<Scalars['String']['input']>
  entityTypeIDGTE?: InputMaybe<Scalars['String']['input']>
  entityTypeIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  entityTypeIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  entityTypeIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  entityTypeIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  entityTypeIDLT?: InputMaybe<Scalars['String']['input']>
  entityTypeIDLTE?: InputMaybe<Scalars['String']['input']>
  entityTypeIDNEQ?: InputMaybe<Scalars['String']['input']>
  entityTypeIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  entityTypeIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameIsNil?: InputMaybe<Scalars['Boolean']['input']>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameNotNil?: InputMaybe<Scalars['Boolean']['input']>
  not?: InputMaybe<EntityHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<EntityHistoryOpType>
  operationIn?: InputMaybe<Array<EntityHistoryOpType>>
  operationNEQ?: InputMaybe<EntityHistoryOpType>
  operationNotIn?: InputMaybe<Array<EntityHistoryOpType>>
  or?: InputMaybe<Array<EntityHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>
  statusContains?: InputMaybe<Scalars['String']['input']>
  statusContainsFold?: InputMaybe<Scalars['String']['input']>
  statusEqualFold?: InputMaybe<Scalars['String']['input']>
  statusGT?: InputMaybe<Scalars['String']['input']>
  statusGTE?: InputMaybe<Scalars['String']['input']>
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusLT?: InputMaybe<Scalars['String']['input']>
  statusLTE?: InputMaybe<Scalars['String']['input']>
  statusNEQ?: InputMaybe<Scalars['String']['input']>
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for Entity connections */
export interface EntityOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Entities. */
  field: EntityOrderField
}

/** Properties by which Entity connections can be ordered. */
export enum EntityOrderField {
  created_at = 'created_at',
  display_name = 'display_name',
  name = 'name',
  status = 'status',
  updated_at = 'updated_at',
}

export interface EntitySearchResult {
  __typename?: 'EntitySearchResult'
  entities?: Maybe<Array<Entity>>
}

export interface EntityType extends Node {
  __typename?: 'EntityType'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  entities: EntityConnection
  id: Scalars['ID']['output']
  /** the name of the entity */
  name: Scalars['String']['output']
  owner?: Maybe<Organization>
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

export interface EntityTypeEntitiesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EntityOrder>>
  where?: InputMaybe<EntityWhereInput>
}

/** Return response for createBulkEntityType mutation */
export interface EntityTypeBulkCreatePayload {
  __typename?: 'EntityTypeBulkCreatePayload'
  /** Created entityTypes */
  entityTypes?: Maybe<Array<EntityType>>
}

/** A connection to a list of items. */
export interface EntityTypeConnection {
  __typename?: 'EntityTypeConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<EntityTypeEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createEntityType mutation */
export interface EntityTypeCreatePayload {
  __typename?: 'EntityTypeCreatePayload'
  /** Created entityType */
  entityType: EntityType
}

/** Return response for deleteEntityType mutation */
export interface EntityTypeDeletePayload {
  __typename?: 'EntityTypeDeletePayload'
  /** Deleted entityType ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface EntityTypeEdge {
  __typename?: 'EntityTypeEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<EntityType>
}

export interface EntityTypeHistory extends Node {
  __typename?: 'EntityTypeHistory'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** the name of the entity */
  name: Scalars['String']['output']
  operation: EntityTypeHistoryOpType
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface EntityTypeHistoryConnection {
  __typename?: 'EntityTypeHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<EntityTypeHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface EntityTypeHistoryEdge {
  __typename?: 'EntityTypeHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<EntityTypeHistory>
}

/** EntityTypeHistoryOpType is enum for the field operation */
export enum EntityTypeHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for EntityTypeHistory connections */
export interface EntityTypeHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order EntityTypeHistories. */
  field: EntityTypeHistoryOrderField
}

/** Properties by which EntityTypeHistory connections can be ordered. */
export enum EntityTypeHistoryOrderField {
  created_at = 'created_at',
  name = 'name',
  updated_at = 'updated_at',
}

/**
 * EntityTypeHistoryWhereInput is used for filtering EntityTypeHistory objects.
 * Input was generated by ent.
 */
export interface EntityTypeHistoryWhereInput {
  and?: InputMaybe<Array<EntityTypeHistoryWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<EntityTypeHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<EntityTypeHistoryOpType>
  operationIn?: InputMaybe<Array<EntityTypeHistoryOpType>>
  operationNEQ?: InputMaybe<EntityTypeHistoryOpType>
  operationNotIn?: InputMaybe<Array<EntityTypeHistoryOpType>>
  or?: InputMaybe<Array<EntityTypeHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for EntityType connections */
export interface EntityTypeOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order EntityTypes. */
  field: EntityTypeOrderField
}

/** Properties by which EntityType connections can be ordered. */
export enum EntityTypeOrderField {
  created_at = 'created_at',
  name = 'name',
  updated_at = 'updated_at',
}

export interface EntityTypeSearchResult {
  __typename?: 'EntityTypeSearchResult'
  entityTypes?: Maybe<Array<EntityType>>
}

/** Return response for updateEntityType mutation */
export interface EntityTypeUpdatePayload {
  __typename?: 'EntityTypeUpdatePayload'
  /** Updated entityType */
  entityType: EntityType
}

/**
 * EntityTypeWhereInput is used for filtering EntityType objects.
 * Input was generated by ent.
 */
export interface EntityTypeWhereInput {
  and?: InputMaybe<Array<EntityTypeWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** entities edge predicates */
  hasEntities?: InputMaybe<Scalars['Boolean']['input']>
  hasEntitiesWith?: InputMaybe<Array<EntityWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<EntityTypeWhereInput>
  or?: InputMaybe<Array<EntityTypeWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Return response for updateEntity mutation */
export interface EntityUpdatePayload {
  __typename?: 'EntityUpdatePayload'
  /** Updated entity */
  entity: Entity
}

/**
 * EntityWhereInput is used for filtering Entity objects.
 * Input was generated by ent.
 */
export interface EntityWhereInput {
  and?: InputMaybe<Array<EntityWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>
  displayNameContains?: InputMaybe<Scalars['String']['input']>
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>
  displayNameGT?: InputMaybe<Scalars['String']['input']>
  displayNameGTE?: InputMaybe<Scalars['String']['input']>
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayNameIsNil?: InputMaybe<Scalars['Boolean']['input']>
  displayNameLT?: InputMaybe<Scalars['String']['input']>
  displayNameLTE?: InputMaybe<Scalars['String']['input']>
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayNameNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** entity_type_id field predicates */
  entityTypeID?: InputMaybe<Scalars['ID']['input']>
  entityTypeIDContains?: InputMaybe<Scalars['ID']['input']>
  entityTypeIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  entityTypeIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  entityTypeIDGT?: InputMaybe<Scalars['ID']['input']>
  entityTypeIDGTE?: InputMaybe<Scalars['ID']['input']>
  entityTypeIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  entityTypeIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  entityTypeIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  entityTypeIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  entityTypeIDLT?: InputMaybe<Scalars['ID']['input']>
  entityTypeIDLTE?: InputMaybe<Scalars['ID']['input']>
  entityTypeIDNEQ?: InputMaybe<Scalars['ID']['input']>
  entityTypeIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  entityTypeIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** contacts edge predicates */
  hasContacts?: InputMaybe<Scalars['Boolean']['input']>
  hasContactsWith?: InputMaybe<Array<ContactWhereInput>>
  /** documents edge predicates */
  hasDocuments?: InputMaybe<Scalars['Boolean']['input']>
  hasDocumentsWith?: InputMaybe<Array<DocumentDataWhereInput>>
  /** entity_type edge predicates */
  hasEntityType?: InputMaybe<Scalars['Boolean']['input']>
  hasEntityTypeWith?: InputMaybe<Array<EntityTypeWhereInput>>
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>
  /** notes edge predicates */
  hasNotes?: InputMaybe<Scalars['Boolean']['input']>
  hasNotesWith?: InputMaybe<Array<NoteWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameIsNil?: InputMaybe<Scalars['Boolean']['input']>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameNotNil?: InputMaybe<Scalars['Boolean']['input']>
  not?: InputMaybe<EntityWhereInput>
  or?: InputMaybe<Array<EntityWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>
  statusContains?: InputMaybe<Scalars['String']['input']>
  statusContainsFold?: InputMaybe<Scalars['String']['input']>
  statusEqualFold?: InputMaybe<Scalars['String']['input']>
  statusGT?: InputMaybe<Scalars['String']['input']>
  statusGTE?: InputMaybe<Scalars['String']['input']>
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusLT?: InputMaybe<Scalars['String']['input']>
  statusLTE?: InputMaybe<Scalars['String']['input']>
  statusNEQ?: InputMaybe<Scalars['String']['input']>
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface Event extends Node {
  __typename?: 'Event'
  correlationID?: Maybe<Scalars['String']['output']>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  eventID?: Maybe<Scalars['String']['output']>
  eventType: Scalars['String']['output']
  files: FileConnection
  groupmemberships: GroupMembershipConnection
  groups: GroupConnection
  id: Scalars['ID']['output']
  integrations: IntegrationConnection
  invites: InviteConnection
  metadata?: Maybe<Scalars['Map']['output']>
  orgSubscriptions: OrgSubscriptionConnection
  organizations: OrganizationConnection
  orgmemberships: OrgMembershipConnection
  personalAccessTokens: PersonalAccessTokenConnection
  secrets: HushConnection
  subscribers: SubscriberConnection
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  users: UserConnection
}

export interface EventFilesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<FileOrder>>
  where?: InputMaybe<FileWhereInput>
}

export interface EventGroupmembershipsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<GroupMembershipOrder>>
  where?: InputMaybe<GroupMembershipWhereInput>
}

export interface EventGroupsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<GroupOrder>>
  where?: InputMaybe<GroupWhereInput>
}

export interface EventIntegrationsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<IntegrationOrder>>
  where?: InputMaybe<IntegrationWhereInput>
}

export interface EventInvitesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<InviteOrder>>
  where?: InputMaybe<InviteWhereInput>
}

export interface EventOrgSubscriptionsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<OrgSubscriptionOrder>
  where?: InputMaybe<OrgSubscriptionWhereInput>
}

export interface EventOrganizationsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<OrganizationOrder>>
  where?: InputMaybe<OrganizationWhereInput>
}

export interface EventOrgmembershipsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<OrgMembershipOrder>>
  where?: InputMaybe<OrgMembershipWhereInput>
}

export interface EventPersonalAccessTokensArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<PersonalAccessTokenOrder>>
  where?: InputMaybe<PersonalAccessTokenWhereInput>
}

export interface EventSecretsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<HushOrder>>
  where?: InputMaybe<HushWhereInput>
}

export interface EventSubscribersArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<SubscriberOrder>>
  where?: InputMaybe<SubscriberWhereInput>
}

export interface EventUsersArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<UserOrder>>
  where?: InputMaybe<UserWhereInput>
}

/** Return response for createBulkEvent mutation */
export interface EventBulkCreatePayload {
  __typename?: 'EventBulkCreatePayload'
  /** Created events */
  events?: Maybe<Array<Event>>
}

/** A connection to a list of items. */
export interface EventConnection {
  __typename?: 'EventConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<EventEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createEvent mutation */
export interface EventCreatePayload {
  __typename?: 'EventCreatePayload'
  /** Created event */
  event: Event
}

/** Return response for deleteEvent mutation */
export interface EventDeletePayload {
  __typename?: 'EventDeletePayload'
  /** Deleted event ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface EventEdge {
  __typename?: 'EventEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<Event>
}

export interface EventHistory extends Node {
  __typename?: 'EventHistory'
  correlationID?: Maybe<Scalars['String']['output']>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  eventID?: Maybe<Scalars['String']['output']>
  eventType: Scalars['String']['output']
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  metadata?: Maybe<Scalars['Map']['output']>
  operation: EventHistoryOpType
  ref?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface EventHistoryConnection {
  __typename?: 'EventHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<EventHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface EventHistoryEdge {
  __typename?: 'EventHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<EventHistory>
}

/** EventHistoryOpType is enum for the field operation */
export enum EventHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for EventHistory connections */
export interface EventHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order EventHistories. */
  field: EventHistoryOrderField
}

/** Properties by which EventHistory connections can be ordered. */
export enum EventHistoryOrderField {
  created_at = 'created_at',
  updated_at = 'updated_at',
}

/**
 * EventHistoryWhereInput is used for filtering EventHistory objects.
 * Input was generated by ent.
 */
export interface EventHistoryWhereInput {
  and?: InputMaybe<Array<EventHistoryWhereInput>>
  /** correlation_id field predicates */
  correlationID?: InputMaybe<Scalars['String']['input']>
  correlationIDContains?: InputMaybe<Scalars['String']['input']>
  correlationIDContainsFold?: InputMaybe<Scalars['String']['input']>
  correlationIDEqualFold?: InputMaybe<Scalars['String']['input']>
  correlationIDGT?: InputMaybe<Scalars['String']['input']>
  correlationIDGTE?: InputMaybe<Scalars['String']['input']>
  correlationIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  correlationIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  correlationIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  correlationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  correlationIDLT?: InputMaybe<Scalars['String']['input']>
  correlationIDLTE?: InputMaybe<Scalars['String']['input']>
  correlationIDNEQ?: InputMaybe<Scalars['String']['input']>
  correlationIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  correlationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** event_id field predicates */
  eventID?: InputMaybe<Scalars['String']['input']>
  eventIDContains?: InputMaybe<Scalars['String']['input']>
  eventIDContainsFold?: InputMaybe<Scalars['String']['input']>
  eventIDEqualFold?: InputMaybe<Scalars['String']['input']>
  eventIDGT?: InputMaybe<Scalars['String']['input']>
  eventIDGTE?: InputMaybe<Scalars['String']['input']>
  eventIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  eventIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  eventIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  eventIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  eventIDLT?: InputMaybe<Scalars['String']['input']>
  eventIDLTE?: InputMaybe<Scalars['String']['input']>
  eventIDNEQ?: InputMaybe<Scalars['String']['input']>
  eventIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  eventIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** event_type field predicates */
  eventType?: InputMaybe<Scalars['String']['input']>
  eventTypeContains?: InputMaybe<Scalars['String']['input']>
  eventTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  eventTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  eventTypeGT?: InputMaybe<Scalars['String']['input']>
  eventTypeGTE?: InputMaybe<Scalars['String']['input']>
  eventTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  eventTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  eventTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  eventTypeLT?: InputMaybe<Scalars['String']['input']>
  eventTypeLTE?: InputMaybe<Scalars['String']['input']>
  eventTypeNEQ?: InputMaybe<Scalars['String']['input']>
  eventTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<EventHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<EventHistoryOpType>
  operationIn?: InputMaybe<Array<EventHistoryOpType>>
  operationNEQ?: InputMaybe<EventHistoryOpType>
  operationNotIn?: InputMaybe<Array<EventHistoryOpType>>
  or?: InputMaybe<Array<EventHistoryWhereInput>>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for Event connections */
export interface EventOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Events. */
  field: EventOrderField
}

/** Properties by which Event connections can be ordered. */
export enum EventOrderField {
  created_at = 'created_at',
  updated_at = 'updated_at',
}

export interface EventSearchResult {
  __typename?: 'EventSearchResult'
  events?: Maybe<Array<Event>>
}

/** Return response for updateEvent mutation */
export interface EventUpdatePayload {
  __typename?: 'EventUpdatePayload'
  /** Updated event */
  event: Event
}

/**
 * EventWhereInput is used for filtering Event objects.
 * Input was generated by ent.
 */
export interface EventWhereInput {
  and?: InputMaybe<Array<EventWhereInput>>
  /** correlation_id field predicates */
  correlationID?: InputMaybe<Scalars['String']['input']>
  correlationIDContains?: InputMaybe<Scalars['String']['input']>
  correlationIDContainsFold?: InputMaybe<Scalars['String']['input']>
  correlationIDEqualFold?: InputMaybe<Scalars['String']['input']>
  correlationIDGT?: InputMaybe<Scalars['String']['input']>
  correlationIDGTE?: InputMaybe<Scalars['String']['input']>
  correlationIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  correlationIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  correlationIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  correlationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  correlationIDLT?: InputMaybe<Scalars['String']['input']>
  correlationIDLTE?: InputMaybe<Scalars['String']['input']>
  correlationIDNEQ?: InputMaybe<Scalars['String']['input']>
  correlationIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  correlationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** event_id field predicates */
  eventID?: InputMaybe<Scalars['String']['input']>
  eventIDContains?: InputMaybe<Scalars['String']['input']>
  eventIDContainsFold?: InputMaybe<Scalars['String']['input']>
  eventIDEqualFold?: InputMaybe<Scalars['String']['input']>
  eventIDGT?: InputMaybe<Scalars['String']['input']>
  eventIDGTE?: InputMaybe<Scalars['String']['input']>
  eventIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  eventIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  eventIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  eventIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  eventIDLT?: InputMaybe<Scalars['String']['input']>
  eventIDLTE?: InputMaybe<Scalars['String']['input']>
  eventIDNEQ?: InputMaybe<Scalars['String']['input']>
  eventIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  eventIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** event_type field predicates */
  eventType?: InputMaybe<Scalars['String']['input']>
  eventTypeContains?: InputMaybe<Scalars['String']['input']>
  eventTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  eventTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  eventTypeGT?: InputMaybe<Scalars['String']['input']>
  eventTypeGTE?: InputMaybe<Scalars['String']['input']>
  eventTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  eventTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  eventTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  eventTypeLT?: InputMaybe<Scalars['String']['input']>
  eventTypeLTE?: InputMaybe<Scalars['String']['input']>
  eventTypeNEQ?: InputMaybe<Scalars['String']['input']>
  eventTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>
  /** groupmemberships edge predicates */
  hasGroupmemberships?: InputMaybe<Scalars['Boolean']['input']>
  hasGroupmembershipsWith?: InputMaybe<Array<GroupMembershipWhereInput>>
  /** groups edge predicates */
  hasGroups?: InputMaybe<Scalars['Boolean']['input']>
  hasGroupsWith?: InputMaybe<Array<GroupWhereInput>>
  /** integrations edge predicates */
  hasIntegrations?: InputMaybe<Scalars['Boolean']['input']>
  hasIntegrationsWith?: InputMaybe<Array<IntegrationWhereInput>>
  /** invites edge predicates */
  hasInvites?: InputMaybe<Scalars['Boolean']['input']>
  hasInvitesWith?: InputMaybe<Array<InviteWhereInput>>
  /** org_subscriptions edge predicates */
  hasOrgSubscriptions?: InputMaybe<Scalars['Boolean']['input']>
  hasOrgSubscriptionsWith?: InputMaybe<Array<OrgSubscriptionWhereInput>>
  /** organizations edge predicates */
  hasOrganizations?: InputMaybe<Scalars['Boolean']['input']>
  hasOrganizationsWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** orgmemberships edge predicates */
  hasOrgmemberships?: InputMaybe<Scalars['Boolean']['input']>
  hasOrgmembershipsWith?: InputMaybe<Array<OrgMembershipWhereInput>>
  /** personal_access_tokens edge predicates */
  hasPersonalAccessTokens?: InputMaybe<Scalars['Boolean']['input']>
  hasPersonalAccessTokensWith?: InputMaybe<Array<PersonalAccessTokenWhereInput>>
  /** secrets edge predicates */
  hasSecrets?: InputMaybe<Scalars['Boolean']['input']>
  hasSecretsWith?: InputMaybe<Array<HushWhereInput>>
  /** subscribers edge predicates */
  hasSubscribers?: InputMaybe<Scalars['Boolean']['input']>
  hasSubscribersWith?: InputMaybe<Array<SubscriberWhereInput>>
  /** users edge predicates */
  hasUsers?: InputMaybe<Scalars['Boolean']['input']>
  hasUsersWith?: InputMaybe<Array<UserWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<EventWhereInput>
  or?: InputMaybe<Array<EventWhereInput>>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface Evidence extends Node {
  __typename?: 'Evidence'
  /** description of how the evidence was collected */
  collectionProcedure?: Maybe<Scalars['String']['output']>
  controlObjectives: ControlObjectiveConnection
  controls: ControlConnection
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** the date the evidence was retrieved */
  creationDate: Scalars['Time']['output']
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** the description of the evidence, what is contained in the uploaded file(s) or url(s) */
  description?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  files: FileConnection
  id: Scalars['ID']['output']
  /** whether the evidence was automatically generated */
  isAutomated?: Maybe<Scalars['Boolean']['output']>
  /** the name of the evidence */
  name: Scalars['String']['output']
  owner?: Maybe<Organization>
  /** the ID of the organization owner of the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  programs: ProgramConnection
  /** the date the evidence should be renewed, defaults to a year from entry date */
  renewalDate?: Maybe<Scalars['Time']['output']>
  /** the source of the evidence, e.g. system the evidence was retrieved from (splunk, github, etc) */
  source?: Maybe<Scalars['String']['output']>
  /** the status of the evidence, ready, approved, needs renewal, missing artifact, rejected */
  status?: Maybe<EvidenceEvidenceStatus>
  subcontrols: SubcontrolConnection
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  tasks: TaskConnection
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  /** the url of the evidence if not uploaded directly to the system */
  url?: Maybe<Scalars['String']['output']>
}

export interface EvidenceControlObjectivesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlObjectiveOrder>>
  where?: InputMaybe<ControlObjectiveWhereInput>
}

export interface EvidenceControlsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlOrder>>
  where?: InputMaybe<ControlWhereInput>
}

export interface EvidenceFilesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<FileOrder>>
  where?: InputMaybe<FileWhereInput>
}

export interface EvidenceProgramsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProgramOrder>>
  where?: InputMaybe<ProgramWhereInput>
}

export interface EvidenceSubcontrolsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<SubcontrolOrder>>
  where?: InputMaybe<SubcontrolWhereInput>
}

export interface EvidenceTasksArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<TaskOrder>>
  where?: InputMaybe<TaskWhereInput>
}

/** Return response for createBulkEvidence mutation */
export interface EvidenceBulkCreatePayload {
  __typename?: 'EvidenceBulkCreatePayload'
  /** Created evidences */
  evidences?: Maybe<Array<Evidence>>
}

/** A connection to a list of items. */
export interface EvidenceConnection {
  __typename?: 'EvidenceConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<EvidenceEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createEvidence mutation */
export interface EvidenceCreatePayload {
  __typename?: 'EvidenceCreatePayload'
  /** Created evidence */
  evidence: Evidence
}

/** Return response for deleteEvidence mutation */
export interface EvidenceDeletePayload {
  __typename?: 'EvidenceDeletePayload'
  /** Deleted evidence ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface EvidenceEdge {
  __typename?: 'EvidenceEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<Evidence>
}

/** EvidenceEvidenceStatus is enum for the field status */
export enum EvidenceEvidenceStatus {
  APPROVED = 'APPROVED',
  MISSING_ARTIFACT = 'MISSING_ARTIFACT',
  NEEDS_RENEWAL = 'NEEDS_RENEWAL',
  READY = 'READY',
  REJECTED = 'REJECTED',
}

export interface EvidenceHistory extends Node {
  __typename?: 'EvidenceHistory'
  /** description of how the evidence was collected */
  collectionProcedure?: Maybe<Scalars['String']['output']>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** the date the evidence was retrieved */
  creationDate: Scalars['Time']['output']
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** the description of the evidence, what is contained in the uploaded file(s) or url(s) */
  description?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** whether the evidence was automatically generated */
  isAutomated?: Maybe<Scalars['Boolean']['output']>
  /** the name of the evidence */
  name: Scalars['String']['output']
  operation: EvidenceHistoryOpType
  /** the ID of the organization owner of the object */
  ownerID?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** the date the evidence should be renewed, defaults to a year from entry date */
  renewalDate?: Maybe<Scalars['Time']['output']>
  /** the source of the evidence, e.g. system the evidence was retrieved from (splunk, github, etc) */
  source?: Maybe<Scalars['String']['output']>
  /** the status of the evidence, ready, approved, needs renewal, missing artifact, rejected */
  status?: Maybe<EvidenceHistoryEvidenceStatus>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  /** the url of the evidence if not uploaded directly to the system */
  url?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface EvidenceHistoryConnection {
  __typename?: 'EvidenceHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<EvidenceHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface EvidenceHistoryEdge {
  __typename?: 'EvidenceHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<EvidenceHistory>
}

/** EvidenceHistoryEvidenceStatus is enum for the field status */
export enum EvidenceHistoryEvidenceStatus {
  APPROVED = 'APPROVED',
  MISSING_ARTIFACT = 'MISSING_ARTIFACT',
  NEEDS_RENEWAL = 'NEEDS_RENEWAL',
  READY = 'READY',
  REJECTED = 'REJECTED',
}

/** EvidenceHistoryOpType is enum for the field operation */
export enum EvidenceHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for EvidenceHistory connections */
export interface EvidenceHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order EvidenceHistories. */
  field: EvidenceHistoryOrderField
}

/** Properties by which EvidenceHistory connections can be ordered. */
export enum EvidenceHistoryOrderField {
  STATUS = 'STATUS',
  created_at = 'created_at',
  creation_date = 'creation_date',
  name = 'name',
  renewal_date = 'renewal_date',
  updated_at = 'updated_at',
}

/**
 * EvidenceHistoryWhereInput is used for filtering EvidenceHistory objects.
 * Input was generated by ent.
 */
export interface EvidenceHistoryWhereInput {
  and?: InputMaybe<Array<EvidenceHistoryWhereInput>>
  /** collection_procedure field predicates */
  collectionProcedure?: InputMaybe<Scalars['String']['input']>
  collectionProcedureContains?: InputMaybe<Scalars['String']['input']>
  collectionProcedureContainsFold?: InputMaybe<Scalars['String']['input']>
  collectionProcedureEqualFold?: InputMaybe<Scalars['String']['input']>
  collectionProcedureGT?: InputMaybe<Scalars['String']['input']>
  collectionProcedureGTE?: InputMaybe<Scalars['String']['input']>
  collectionProcedureHasPrefix?: InputMaybe<Scalars['String']['input']>
  collectionProcedureHasSuffix?: InputMaybe<Scalars['String']['input']>
  collectionProcedureIn?: InputMaybe<Array<Scalars['String']['input']>>
  collectionProcedureIsNil?: InputMaybe<Scalars['Boolean']['input']>
  collectionProcedureLT?: InputMaybe<Scalars['String']['input']>
  collectionProcedureLTE?: InputMaybe<Scalars['String']['input']>
  collectionProcedureNEQ?: InputMaybe<Scalars['String']['input']>
  collectionProcedureNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  collectionProcedureNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** creation_date field predicates */
  creationDate?: InputMaybe<Scalars['Time']['input']>
  creationDateGT?: InputMaybe<Scalars['Time']['input']>
  creationDateGTE?: InputMaybe<Scalars['Time']['input']>
  creationDateIn?: InputMaybe<Array<Scalars['Time']['input']>>
  creationDateLT?: InputMaybe<Scalars['Time']['input']>
  creationDateLTE?: InputMaybe<Scalars['Time']['input']>
  creationDateNEQ?: InputMaybe<Scalars['Time']['input']>
  creationDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>
  descriptionContains?: InputMaybe<Scalars['String']['input']>
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>
  descriptionGT?: InputMaybe<Scalars['String']['input']>
  descriptionGTE?: InputMaybe<Scalars['String']['input']>
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  descriptionLT?: InputMaybe<Scalars['String']['input']>
  descriptionLTE?: InputMaybe<Scalars['String']['input']>
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** is_automated field predicates */
  isAutomated?: InputMaybe<Scalars['Boolean']['input']>
  isAutomatedIsNil?: InputMaybe<Scalars['Boolean']['input']>
  isAutomatedNEQ?: InputMaybe<Scalars['Boolean']['input']>
  isAutomatedNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<EvidenceHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<EvidenceHistoryOpType>
  operationIn?: InputMaybe<Array<EvidenceHistoryOpType>>
  operationNEQ?: InputMaybe<EvidenceHistoryOpType>
  operationNotIn?: InputMaybe<Array<EvidenceHistoryOpType>>
  or?: InputMaybe<Array<EvidenceHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** renewal_date field predicates */
  renewalDate?: InputMaybe<Scalars['Time']['input']>
  renewalDateGT?: InputMaybe<Scalars['Time']['input']>
  renewalDateGTE?: InputMaybe<Scalars['Time']['input']>
  renewalDateIn?: InputMaybe<Array<Scalars['Time']['input']>>
  renewalDateIsNil?: InputMaybe<Scalars['Boolean']['input']>
  renewalDateLT?: InputMaybe<Scalars['Time']['input']>
  renewalDateLTE?: InputMaybe<Scalars['Time']['input']>
  renewalDateNEQ?: InputMaybe<Scalars['Time']['input']>
  renewalDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  renewalDateNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** source field predicates */
  source?: InputMaybe<Scalars['String']['input']>
  sourceContains?: InputMaybe<Scalars['String']['input']>
  sourceContainsFold?: InputMaybe<Scalars['String']['input']>
  sourceEqualFold?: InputMaybe<Scalars['String']['input']>
  sourceGT?: InputMaybe<Scalars['String']['input']>
  sourceGTE?: InputMaybe<Scalars['String']['input']>
  sourceHasPrefix?: InputMaybe<Scalars['String']['input']>
  sourceHasSuffix?: InputMaybe<Scalars['String']['input']>
  sourceIn?: InputMaybe<Array<Scalars['String']['input']>>
  sourceIsNil?: InputMaybe<Scalars['Boolean']['input']>
  sourceLT?: InputMaybe<Scalars['String']['input']>
  sourceLTE?: InputMaybe<Scalars['String']['input']>
  sourceNEQ?: InputMaybe<Scalars['String']['input']>
  sourceNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  sourceNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<EvidenceHistoryEvidenceStatus>
  statusIn?: InputMaybe<Array<EvidenceHistoryEvidenceStatus>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusNEQ?: InputMaybe<EvidenceHistoryEvidenceStatus>
  statusNotIn?: InputMaybe<Array<EvidenceHistoryEvidenceStatus>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** url field predicates */
  url?: InputMaybe<Scalars['String']['input']>
  urlContains?: InputMaybe<Scalars['String']['input']>
  urlContainsFold?: InputMaybe<Scalars['String']['input']>
  urlEqualFold?: InputMaybe<Scalars['String']['input']>
  urlGT?: InputMaybe<Scalars['String']['input']>
  urlGTE?: InputMaybe<Scalars['String']['input']>
  urlHasPrefix?: InputMaybe<Scalars['String']['input']>
  urlHasSuffix?: InputMaybe<Scalars['String']['input']>
  urlIn?: InputMaybe<Array<Scalars['String']['input']>>
  urlIsNil?: InputMaybe<Scalars['Boolean']['input']>
  urlLT?: InputMaybe<Scalars['String']['input']>
  urlLTE?: InputMaybe<Scalars['String']['input']>
  urlNEQ?: InputMaybe<Scalars['String']['input']>
  urlNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  urlNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for Evidence connections */
export interface EvidenceOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Evidences. */
  field: EvidenceOrderField
}

/** Properties by which Evidence connections can be ordered. */
export enum EvidenceOrderField {
  STATUS = 'STATUS',
  created_at = 'created_at',
  creation_date = 'creation_date',
  name = 'name',
  renewal_date = 'renewal_date',
  updated_at = 'updated_at',
}

export interface EvidenceSearchResult {
  __typename?: 'EvidenceSearchResult'
  evidences?: Maybe<Array<Evidence>>
}

/** Return response for updateEvidence mutation */
export interface EvidenceUpdatePayload {
  __typename?: 'EvidenceUpdatePayload'
  /** Updated evidence */
  evidence: Evidence
}

/**
 * EvidenceWhereInput is used for filtering Evidence objects.
 * Input was generated by ent.
 */
export interface EvidenceWhereInput {
  and?: InputMaybe<Array<EvidenceWhereInput>>
  /** collection_procedure field predicates */
  collectionProcedure?: InputMaybe<Scalars['String']['input']>
  collectionProcedureContains?: InputMaybe<Scalars['String']['input']>
  collectionProcedureContainsFold?: InputMaybe<Scalars['String']['input']>
  collectionProcedureEqualFold?: InputMaybe<Scalars['String']['input']>
  collectionProcedureGT?: InputMaybe<Scalars['String']['input']>
  collectionProcedureGTE?: InputMaybe<Scalars['String']['input']>
  collectionProcedureHasPrefix?: InputMaybe<Scalars['String']['input']>
  collectionProcedureHasSuffix?: InputMaybe<Scalars['String']['input']>
  collectionProcedureIn?: InputMaybe<Array<Scalars['String']['input']>>
  collectionProcedureIsNil?: InputMaybe<Scalars['Boolean']['input']>
  collectionProcedureLT?: InputMaybe<Scalars['String']['input']>
  collectionProcedureLTE?: InputMaybe<Scalars['String']['input']>
  collectionProcedureNEQ?: InputMaybe<Scalars['String']['input']>
  collectionProcedureNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  collectionProcedureNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** creation_date field predicates */
  creationDate?: InputMaybe<Scalars['Time']['input']>
  creationDateGT?: InputMaybe<Scalars['Time']['input']>
  creationDateGTE?: InputMaybe<Scalars['Time']['input']>
  creationDateIn?: InputMaybe<Array<Scalars['Time']['input']>>
  creationDateLT?: InputMaybe<Scalars['Time']['input']>
  creationDateLTE?: InputMaybe<Scalars['Time']['input']>
  creationDateNEQ?: InputMaybe<Scalars['Time']['input']>
  creationDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>
  descriptionContains?: InputMaybe<Scalars['String']['input']>
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>
  descriptionGT?: InputMaybe<Scalars['String']['input']>
  descriptionGTE?: InputMaybe<Scalars['String']['input']>
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  descriptionLT?: InputMaybe<Scalars['String']['input']>
  descriptionLTE?: InputMaybe<Scalars['String']['input']>
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** control_objectives edge predicates */
  hasControlObjectives?: InputMaybe<Scalars['Boolean']['input']>
  hasControlObjectivesWith?: InputMaybe<Array<ControlObjectiveWhereInput>>
  /** controls edge predicates */
  hasControls?: InputMaybe<Scalars['Boolean']['input']>
  hasControlsWith?: InputMaybe<Array<ControlWhereInput>>
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>
  /** subcontrols edge predicates */
  hasSubcontrols?: InputMaybe<Scalars['Boolean']['input']>
  hasSubcontrolsWith?: InputMaybe<Array<SubcontrolWhereInput>>
  /** tasks edge predicates */
  hasTasks?: InputMaybe<Scalars['Boolean']['input']>
  hasTasksWith?: InputMaybe<Array<TaskWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** is_automated field predicates */
  isAutomated?: InputMaybe<Scalars['Boolean']['input']>
  isAutomatedIsNil?: InputMaybe<Scalars['Boolean']['input']>
  isAutomatedNEQ?: InputMaybe<Scalars['Boolean']['input']>
  isAutomatedNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<EvidenceWhereInput>
  or?: InputMaybe<Array<EvidenceWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** renewal_date field predicates */
  renewalDate?: InputMaybe<Scalars['Time']['input']>
  renewalDateGT?: InputMaybe<Scalars['Time']['input']>
  renewalDateGTE?: InputMaybe<Scalars['Time']['input']>
  renewalDateIn?: InputMaybe<Array<Scalars['Time']['input']>>
  renewalDateIsNil?: InputMaybe<Scalars['Boolean']['input']>
  renewalDateLT?: InputMaybe<Scalars['Time']['input']>
  renewalDateLTE?: InputMaybe<Scalars['Time']['input']>
  renewalDateNEQ?: InputMaybe<Scalars['Time']['input']>
  renewalDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  renewalDateNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** source field predicates */
  source?: InputMaybe<Scalars['String']['input']>
  sourceContains?: InputMaybe<Scalars['String']['input']>
  sourceContainsFold?: InputMaybe<Scalars['String']['input']>
  sourceEqualFold?: InputMaybe<Scalars['String']['input']>
  sourceGT?: InputMaybe<Scalars['String']['input']>
  sourceGTE?: InputMaybe<Scalars['String']['input']>
  sourceHasPrefix?: InputMaybe<Scalars['String']['input']>
  sourceHasSuffix?: InputMaybe<Scalars['String']['input']>
  sourceIn?: InputMaybe<Array<Scalars['String']['input']>>
  sourceIsNil?: InputMaybe<Scalars['Boolean']['input']>
  sourceLT?: InputMaybe<Scalars['String']['input']>
  sourceLTE?: InputMaybe<Scalars['String']['input']>
  sourceNEQ?: InputMaybe<Scalars['String']['input']>
  sourceNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  sourceNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<EvidenceEvidenceStatus>
  statusIn?: InputMaybe<Array<EvidenceEvidenceStatus>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusNEQ?: InputMaybe<EvidenceEvidenceStatus>
  statusNotIn?: InputMaybe<Array<EvidenceEvidenceStatus>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** url field predicates */
  url?: InputMaybe<Scalars['String']['input']>
  urlContains?: InputMaybe<Scalars['String']['input']>
  urlContainsFold?: InputMaybe<Scalars['String']['input']>
  urlEqualFold?: InputMaybe<Scalars['String']['input']>
  urlGT?: InputMaybe<Scalars['String']['input']>
  urlGTE?: InputMaybe<Scalars['String']['input']>
  urlHasPrefix?: InputMaybe<Scalars['String']['input']>
  urlHasSuffix?: InputMaybe<Scalars['String']['input']>
  urlIn?: InputMaybe<Array<Scalars['String']['input']>>
  urlIsNil?: InputMaybe<Scalars['Boolean']['input']>
  urlLT?: InputMaybe<Scalars['String']['input']>
  urlLTE?: InputMaybe<Scalars['String']['input']>
  urlNEQ?: InputMaybe<Scalars['String']['input']>
  urlNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  urlNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface File extends Node {
  __typename?: 'File'
  /** the category type of the file, if any (e.g. evidence, invoice, etc.) */
  categoryType?: Maybe<Scalars['String']['output']>
  contact?: Maybe<Array<Contact>>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** the content type of the HTTP request - may be different than MIME type as multipart-form can transmit multiple files and different types */
  detectedContentType: Scalars['String']['output']
  /** the mime type detected by the system */
  detectedMimeType?: Maybe<Scalars['String']['output']>
  document?: Maybe<Array<DocumentData>>
  entity?: Maybe<Array<Entity>>
  events: EventConnection
  evidence?: Maybe<Array<Evidence>>
  groups: GroupConnection
  id: Scalars['ID']['output']
  /** the computed md5 hash of the file calculated after we received the contents of the file, but before the file was written to permanent storage */
  md5Hash?: Maybe<Scalars['String']['output']>
  organization?: Maybe<Array<Organization>>
  organizationSetting?: Maybe<Array<OrganizationSetting>>
  persistedFileSize?: Maybe<Scalars['Int']['output']>
  presignedURL?: Maybe<Scalars['String']['output']>
  program?: Maybe<Array<Program>>
  /** the extension of the file provided */
  providedFileExtension: Scalars['String']['output']
  /** the name of the file provided in the payload key without the extension */
  providedFileName: Scalars['String']['output']
  /** the computed size of the file in the original http request */
  providedFileSize?: Maybe<Scalars['Int']['output']>
  /** the storage path is the second-level directory of the file path, typically the correlating logical object ID the file is associated with; files can be stand alone objects and not always correlated to a logical one, so this path of the tree may be empty */
  storagePath?: Maybe<Scalars['String']['output']>
  /** the storage scheme of the file, e.g. file://, s3://, etc. */
  storageScheme?: Maybe<Scalars['String']['output']>
  /** the storage volume of the file which typically will be the organization ID the file belongs to - this is not a literal volume but the overlay file system mapping */
  storageVolume?: Maybe<Scalars['String']['output']>
  /** the key parsed out of a multipart-form request; if we allow multiple files to be uploaded we may want our API specifications to require the use of different keys allowing us to perform easier conditional evaluation on the key and what to do with the file based on key */
  storeKey?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  template?: Maybe<Array<Template>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  /** the full URI of the file */
  uri?: Maybe<Scalars['String']['output']>
  user?: Maybe<Array<User>>
  userSetting?: Maybe<Array<UserSetting>>
}

export interface FileEventsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EventOrder>>
  where?: InputMaybe<EventWhereInput>
}

export interface FileGroupsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<GroupOrder>>
  where?: InputMaybe<GroupWhereInput>
}

/** A connection to a list of items. */
export interface FileConnection {
  __typename?: 'FileConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<FileEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for deleteFile mutation */
export interface FileDeletePayload {
  __typename?: 'FileDeletePayload'
  /** Deleted file ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface FileEdge {
  __typename?: 'FileEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<File>
}

export interface FileHistory extends Node {
  __typename?: 'FileHistory'
  /** the category type of the file, if any (e.g. evidence, invoice, etc.) */
  categoryType?: Maybe<Scalars['String']['output']>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** the content type of the HTTP request - may be different than MIME type as multipart-form can transmit multiple files and different types */
  detectedContentType: Scalars['String']['output']
  /** the mime type detected by the system */
  detectedMimeType?: Maybe<Scalars['String']['output']>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** the computed md5 hash of the file calculated after we received the contents of the file, but before the file was written to permanent storage */
  md5Hash?: Maybe<Scalars['String']['output']>
  operation: FileHistoryOpType
  persistedFileSize?: Maybe<Scalars['Int']['output']>
  /** the extension of the file provided */
  providedFileExtension: Scalars['String']['output']
  /** the name of the file provided in the payload key without the extension */
  providedFileName: Scalars['String']['output']
  /** the computed size of the file in the original http request */
  providedFileSize?: Maybe<Scalars['Int']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** the storage path is the second-level directory of the file path, typically the correlating logical object ID the file is associated with; files can be stand alone objects and not always correlated to a logical one, so this path of the tree may be empty */
  storagePath?: Maybe<Scalars['String']['output']>
  /** the storage scheme of the file, e.g. file://, s3://, etc. */
  storageScheme?: Maybe<Scalars['String']['output']>
  /** the storage volume of the file which typically will be the organization ID the file belongs to - this is not a literal volume but the overlay file system mapping */
  storageVolume?: Maybe<Scalars['String']['output']>
  /** the key parsed out of a multipart-form request; if we allow multiple files to be uploaded we may want our API specifications to require the use of different keys allowing us to perform easier conditional evaluation on the key and what to do with the file based on key */
  storeKey?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  /** the full URI of the file */
  uri?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface FileHistoryConnection {
  __typename?: 'FileHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<FileHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface FileHistoryEdge {
  __typename?: 'FileHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<FileHistory>
}

/** FileHistoryOpType is enum for the field operation */
export enum FileHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for FileHistory connections */
export interface FileHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order FileHistories. */
  field: FileHistoryOrderField
}

/** Properties by which FileHistory connections can be ordered. */
export enum FileHistoryOrderField {
  created_at = 'created_at',
  updated_at = 'updated_at',
}

/**
 * FileHistoryWhereInput is used for filtering FileHistory objects.
 * Input was generated by ent.
 */
export interface FileHistoryWhereInput {
  and?: InputMaybe<Array<FileHistoryWhereInput>>
  /** category_type field predicates */
  categoryType?: InputMaybe<Scalars['String']['input']>
  categoryTypeContains?: InputMaybe<Scalars['String']['input']>
  categoryTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  categoryTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  categoryTypeGT?: InputMaybe<Scalars['String']['input']>
  categoryTypeGTE?: InputMaybe<Scalars['String']['input']>
  categoryTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  categoryTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  categoryTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  categoryTypeLT?: InputMaybe<Scalars['String']['input']>
  categoryTypeLTE?: InputMaybe<Scalars['String']['input']>
  categoryTypeNEQ?: InputMaybe<Scalars['String']['input']>
  categoryTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** detected_content_type field predicates */
  detectedContentType?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeContains?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeGT?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeGTE?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  detectedContentTypeLT?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeLTE?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeNEQ?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** detected_mime_type field predicates */
  detectedMimeType?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeContains?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeGT?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeGTE?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  detectedMimeTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  detectedMimeTypeLT?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeLTE?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeNEQ?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  detectedMimeTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** md5_hash field predicates */
  md5Hash?: InputMaybe<Scalars['String']['input']>
  md5HashContains?: InputMaybe<Scalars['String']['input']>
  md5HashContainsFold?: InputMaybe<Scalars['String']['input']>
  md5HashEqualFold?: InputMaybe<Scalars['String']['input']>
  md5HashGT?: InputMaybe<Scalars['String']['input']>
  md5HashGTE?: InputMaybe<Scalars['String']['input']>
  md5HashHasPrefix?: InputMaybe<Scalars['String']['input']>
  md5HashHasSuffix?: InputMaybe<Scalars['String']['input']>
  md5HashIn?: InputMaybe<Array<Scalars['String']['input']>>
  md5HashIsNil?: InputMaybe<Scalars['Boolean']['input']>
  md5HashLT?: InputMaybe<Scalars['String']['input']>
  md5HashLTE?: InputMaybe<Scalars['String']['input']>
  md5HashNEQ?: InputMaybe<Scalars['String']['input']>
  md5HashNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  md5HashNotNil?: InputMaybe<Scalars['Boolean']['input']>
  not?: InputMaybe<FileHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<FileHistoryOpType>
  operationIn?: InputMaybe<Array<FileHistoryOpType>>
  operationNEQ?: InputMaybe<FileHistoryOpType>
  operationNotIn?: InputMaybe<Array<FileHistoryOpType>>
  or?: InputMaybe<Array<FileHistoryWhereInput>>
  /** persisted_file_size field predicates */
  persistedFileSize?: InputMaybe<Scalars['Int']['input']>
  persistedFileSizeGT?: InputMaybe<Scalars['Int']['input']>
  persistedFileSizeGTE?: InputMaybe<Scalars['Int']['input']>
  persistedFileSizeIn?: InputMaybe<Array<Scalars['Int']['input']>>
  persistedFileSizeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  persistedFileSizeLT?: InputMaybe<Scalars['Int']['input']>
  persistedFileSizeLTE?: InputMaybe<Scalars['Int']['input']>
  persistedFileSizeNEQ?: InputMaybe<Scalars['Int']['input']>
  persistedFileSizeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>
  persistedFileSizeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** provided_file_extension field predicates */
  providedFileExtension?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionContains?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionContainsFold?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionEqualFold?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionGT?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionGTE?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionHasPrefix?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionHasSuffix?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionIn?: InputMaybe<Array<Scalars['String']['input']>>
  providedFileExtensionLT?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionLTE?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionNEQ?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** provided_file_name field predicates */
  providedFileName?: InputMaybe<Scalars['String']['input']>
  providedFileNameContains?: InputMaybe<Scalars['String']['input']>
  providedFileNameContainsFold?: InputMaybe<Scalars['String']['input']>
  providedFileNameEqualFold?: InputMaybe<Scalars['String']['input']>
  providedFileNameGT?: InputMaybe<Scalars['String']['input']>
  providedFileNameGTE?: InputMaybe<Scalars['String']['input']>
  providedFileNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  providedFileNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  providedFileNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  providedFileNameLT?: InputMaybe<Scalars['String']['input']>
  providedFileNameLTE?: InputMaybe<Scalars['String']['input']>
  providedFileNameNEQ?: InputMaybe<Scalars['String']['input']>
  providedFileNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** provided_file_size field predicates */
  providedFileSize?: InputMaybe<Scalars['Int']['input']>
  providedFileSizeGT?: InputMaybe<Scalars['Int']['input']>
  providedFileSizeGTE?: InputMaybe<Scalars['Int']['input']>
  providedFileSizeIn?: InputMaybe<Array<Scalars['Int']['input']>>
  providedFileSizeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  providedFileSizeLT?: InputMaybe<Scalars['Int']['input']>
  providedFileSizeLTE?: InputMaybe<Scalars['Int']['input']>
  providedFileSizeNEQ?: InputMaybe<Scalars['Int']['input']>
  providedFileSizeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>
  providedFileSizeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** storage_path field predicates */
  storagePath?: InputMaybe<Scalars['String']['input']>
  storagePathContains?: InputMaybe<Scalars['String']['input']>
  storagePathContainsFold?: InputMaybe<Scalars['String']['input']>
  storagePathEqualFold?: InputMaybe<Scalars['String']['input']>
  storagePathGT?: InputMaybe<Scalars['String']['input']>
  storagePathGTE?: InputMaybe<Scalars['String']['input']>
  storagePathHasPrefix?: InputMaybe<Scalars['String']['input']>
  storagePathHasSuffix?: InputMaybe<Scalars['String']['input']>
  storagePathIn?: InputMaybe<Array<Scalars['String']['input']>>
  storagePathIsNil?: InputMaybe<Scalars['Boolean']['input']>
  storagePathLT?: InputMaybe<Scalars['String']['input']>
  storagePathLTE?: InputMaybe<Scalars['String']['input']>
  storagePathNEQ?: InputMaybe<Scalars['String']['input']>
  storagePathNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  storagePathNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** storage_scheme field predicates */
  storageScheme?: InputMaybe<Scalars['String']['input']>
  storageSchemeContains?: InputMaybe<Scalars['String']['input']>
  storageSchemeContainsFold?: InputMaybe<Scalars['String']['input']>
  storageSchemeEqualFold?: InputMaybe<Scalars['String']['input']>
  storageSchemeGT?: InputMaybe<Scalars['String']['input']>
  storageSchemeGTE?: InputMaybe<Scalars['String']['input']>
  storageSchemeHasPrefix?: InputMaybe<Scalars['String']['input']>
  storageSchemeHasSuffix?: InputMaybe<Scalars['String']['input']>
  storageSchemeIn?: InputMaybe<Array<Scalars['String']['input']>>
  storageSchemeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  storageSchemeLT?: InputMaybe<Scalars['String']['input']>
  storageSchemeLTE?: InputMaybe<Scalars['String']['input']>
  storageSchemeNEQ?: InputMaybe<Scalars['String']['input']>
  storageSchemeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  storageSchemeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** storage_volume field predicates */
  storageVolume?: InputMaybe<Scalars['String']['input']>
  storageVolumeContains?: InputMaybe<Scalars['String']['input']>
  storageVolumeContainsFold?: InputMaybe<Scalars['String']['input']>
  storageVolumeEqualFold?: InputMaybe<Scalars['String']['input']>
  storageVolumeGT?: InputMaybe<Scalars['String']['input']>
  storageVolumeGTE?: InputMaybe<Scalars['String']['input']>
  storageVolumeHasPrefix?: InputMaybe<Scalars['String']['input']>
  storageVolumeHasSuffix?: InputMaybe<Scalars['String']['input']>
  storageVolumeIn?: InputMaybe<Array<Scalars['String']['input']>>
  storageVolumeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  storageVolumeLT?: InputMaybe<Scalars['String']['input']>
  storageVolumeLTE?: InputMaybe<Scalars['String']['input']>
  storageVolumeNEQ?: InputMaybe<Scalars['String']['input']>
  storageVolumeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  storageVolumeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** store_key field predicates */
  storeKey?: InputMaybe<Scalars['String']['input']>
  storeKeyContains?: InputMaybe<Scalars['String']['input']>
  storeKeyContainsFold?: InputMaybe<Scalars['String']['input']>
  storeKeyEqualFold?: InputMaybe<Scalars['String']['input']>
  storeKeyGT?: InputMaybe<Scalars['String']['input']>
  storeKeyGTE?: InputMaybe<Scalars['String']['input']>
  storeKeyHasPrefix?: InputMaybe<Scalars['String']['input']>
  storeKeyHasSuffix?: InputMaybe<Scalars['String']['input']>
  storeKeyIn?: InputMaybe<Array<Scalars['String']['input']>>
  storeKeyIsNil?: InputMaybe<Scalars['Boolean']['input']>
  storeKeyLT?: InputMaybe<Scalars['String']['input']>
  storeKeyLTE?: InputMaybe<Scalars['String']['input']>
  storeKeyNEQ?: InputMaybe<Scalars['String']['input']>
  storeKeyNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  storeKeyNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** uri field predicates */
  uri?: InputMaybe<Scalars['String']['input']>
  uriContains?: InputMaybe<Scalars['String']['input']>
  uriContainsFold?: InputMaybe<Scalars['String']['input']>
  uriEqualFold?: InputMaybe<Scalars['String']['input']>
  uriGT?: InputMaybe<Scalars['String']['input']>
  uriGTE?: InputMaybe<Scalars['String']['input']>
  uriHasPrefix?: InputMaybe<Scalars['String']['input']>
  uriHasSuffix?: InputMaybe<Scalars['String']['input']>
  uriIn?: InputMaybe<Array<Scalars['String']['input']>>
  uriIsNil?: InputMaybe<Scalars['Boolean']['input']>
  uriLT?: InputMaybe<Scalars['String']['input']>
  uriLTE?: InputMaybe<Scalars['String']['input']>
  uriNEQ?: InputMaybe<Scalars['String']['input']>
  uriNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  uriNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for File connections */
export interface FileOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Files. */
  field: FileOrderField
}

/** Properties by which File connections can be ordered. */
export enum FileOrderField {
  created_at = 'created_at',
  updated_at = 'updated_at',
}

export interface FileSearchResult {
  __typename?: 'FileSearchResult'
  files?: Maybe<Array<File>>
}

/**
 * FileWhereInput is used for filtering File objects.
 * Input was generated by ent.
 */
export interface FileWhereInput {
  and?: InputMaybe<Array<FileWhereInput>>
  /** category_type field predicates */
  categoryType?: InputMaybe<Scalars['String']['input']>
  categoryTypeContains?: InputMaybe<Scalars['String']['input']>
  categoryTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  categoryTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  categoryTypeGT?: InputMaybe<Scalars['String']['input']>
  categoryTypeGTE?: InputMaybe<Scalars['String']['input']>
  categoryTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  categoryTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  categoryTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  categoryTypeLT?: InputMaybe<Scalars['String']['input']>
  categoryTypeLTE?: InputMaybe<Scalars['String']['input']>
  categoryTypeNEQ?: InputMaybe<Scalars['String']['input']>
  categoryTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** detected_content_type field predicates */
  detectedContentType?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeContains?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeGT?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeGTE?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  detectedContentTypeLT?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeLTE?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeNEQ?: InputMaybe<Scalars['String']['input']>
  detectedContentTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** detected_mime_type field predicates */
  detectedMimeType?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeContains?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeGT?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeGTE?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  detectedMimeTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  detectedMimeTypeLT?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeLTE?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeNEQ?: InputMaybe<Scalars['String']['input']>
  detectedMimeTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  detectedMimeTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** contact edge predicates */
  hasContact?: InputMaybe<Scalars['Boolean']['input']>
  hasContactWith?: InputMaybe<Array<ContactWhereInput>>
  /** document edge predicates */
  hasDocument?: InputMaybe<Scalars['Boolean']['input']>
  hasDocumentWith?: InputMaybe<Array<DocumentDataWhereInput>>
  /** entity edge predicates */
  hasEntity?: InputMaybe<Scalars['Boolean']['input']>
  hasEntityWith?: InputMaybe<Array<EntityWhereInput>>
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>
  /** evidence edge predicates */
  hasEvidence?: InputMaybe<Scalars['Boolean']['input']>
  hasEvidenceWith?: InputMaybe<Array<EvidenceWhereInput>>
  /** groups edge predicates */
  hasGroups?: InputMaybe<Scalars['Boolean']['input']>
  hasGroupsWith?: InputMaybe<Array<GroupWhereInput>>
  /** organization edge predicates */
  hasOrganization?: InputMaybe<Scalars['Boolean']['input']>
  /** organization_setting edge predicates */
  hasOrganizationSetting?: InputMaybe<Scalars['Boolean']['input']>
  hasOrganizationSettingWith?: InputMaybe<Array<OrganizationSettingWhereInput>>
  hasOrganizationWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** program edge predicates */
  hasProgram?: InputMaybe<Scalars['Boolean']['input']>
  hasProgramWith?: InputMaybe<Array<ProgramWhereInput>>
  /** template edge predicates */
  hasTemplate?: InputMaybe<Scalars['Boolean']['input']>
  hasTemplateWith?: InputMaybe<Array<TemplateWhereInput>>
  /** user edge predicates */
  hasUser?: InputMaybe<Scalars['Boolean']['input']>
  /** user_setting edge predicates */
  hasUserSetting?: InputMaybe<Scalars['Boolean']['input']>
  hasUserSettingWith?: InputMaybe<Array<UserSettingWhereInput>>
  hasUserWith?: InputMaybe<Array<UserWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** md5_hash field predicates */
  md5Hash?: InputMaybe<Scalars['String']['input']>
  md5HashContains?: InputMaybe<Scalars['String']['input']>
  md5HashContainsFold?: InputMaybe<Scalars['String']['input']>
  md5HashEqualFold?: InputMaybe<Scalars['String']['input']>
  md5HashGT?: InputMaybe<Scalars['String']['input']>
  md5HashGTE?: InputMaybe<Scalars['String']['input']>
  md5HashHasPrefix?: InputMaybe<Scalars['String']['input']>
  md5HashHasSuffix?: InputMaybe<Scalars['String']['input']>
  md5HashIn?: InputMaybe<Array<Scalars['String']['input']>>
  md5HashIsNil?: InputMaybe<Scalars['Boolean']['input']>
  md5HashLT?: InputMaybe<Scalars['String']['input']>
  md5HashLTE?: InputMaybe<Scalars['String']['input']>
  md5HashNEQ?: InputMaybe<Scalars['String']['input']>
  md5HashNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  md5HashNotNil?: InputMaybe<Scalars['Boolean']['input']>
  not?: InputMaybe<FileWhereInput>
  or?: InputMaybe<Array<FileWhereInput>>
  /** persisted_file_size field predicates */
  persistedFileSize?: InputMaybe<Scalars['Int']['input']>
  persistedFileSizeGT?: InputMaybe<Scalars['Int']['input']>
  persistedFileSizeGTE?: InputMaybe<Scalars['Int']['input']>
  persistedFileSizeIn?: InputMaybe<Array<Scalars['Int']['input']>>
  persistedFileSizeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  persistedFileSizeLT?: InputMaybe<Scalars['Int']['input']>
  persistedFileSizeLTE?: InputMaybe<Scalars['Int']['input']>
  persistedFileSizeNEQ?: InputMaybe<Scalars['Int']['input']>
  persistedFileSizeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>
  persistedFileSizeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** provided_file_extension field predicates */
  providedFileExtension?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionContains?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionContainsFold?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionEqualFold?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionGT?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionGTE?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionHasPrefix?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionHasSuffix?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionIn?: InputMaybe<Array<Scalars['String']['input']>>
  providedFileExtensionLT?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionLTE?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionNEQ?: InputMaybe<Scalars['String']['input']>
  providedFileExtensionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** provided_file_name field predicates */
  providedFileName?: InputMaybe<Scalars['String']['input']>
  providedFileNameContains?: InputMaybe<Scalars['String']['input']>
  providedFileNameContainsFold?: InputMaybe<Scalars['String']['input']>
  providedFileNameEqualFold?: InputMaybe<Scalars['String']['input']>
  providedFileNameGT?: InputMaybe<Scalars['String']['input']>
  providedFileNameGTE?: InputMaybe<Scalars['String']['input']>
  providedFileNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  providedFileNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  providedFileNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  providedFileNameLT?: InputMaybe<Scalars['String']['input']>
  providedFileNameLTE?: InputMaybe<Scalars['String']['input']>
  providedFileNameNEQ?: InputMaybe<Scalars['String']['input']>
  providedFileNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** provided_file_size field predicates */
  providedFileSize?: InputMaybe<Scalars['Int']['input']>
  providedFileSizeGT?: InputMaybe<Scalars['Int']['input']>
  providedFileSizeGTE?: InputMaybe<Scalars['Int']['input']>
  providedFileSizeIn?: InputMaybe<Array<Scalars['Int']['input']>>
  providedFileSizeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  providedFileSizeLT?: InputMaybe<Scalars['Int']['input']>
  providedFileSizeLTE?: InputMaybe<Scalars['Int']['input']>
  providedFileSizeNEQ?: InputMaybe<Scalars['Int']['input']>
  providedFileSizeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>
  providedFileSizeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** storage_path field predicates */
  storagePath?: InputMaybe<Scalars['String']['input']>
  storagePathContains?: InputMaybe<Scalars['String']['input']>
  storagePathContainsFold?: InputMaybe<Scalars['String']['input']>
  storagePathEqualFold?: InputMaybe<Scalars['String']['input']>
  storagePathGT?: InputMaybe<Scalars['String']['input']>
  storagePathGTE?: InputMaybe<Scalars['String']['input']>
  storagePathHasPrefix?: InputMaybe<Scalars['String']['input']>
  storagePathHasSuffix?: InputMaybe<Scalars['String']['input']>
  storagePathIn?: InputMaybe<Array<Scalars['String']['input']>>
  storagePathIsNil?: InputMaybe<Scalars['Boolean']['input']>
  storagePathLT?: InputMaybe<Scalars['String']['input']>
  storagePathLTE?: InputMaybe<Scalars['String']['input']>
  storagePathNEQ?: InputMaybe<Scalars['String']['input']>
  storagePathNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  storagePathNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** storage_scheme field predicates */
  storageScheme?: InputMaybe<Scalars['String']['input']>
  storageSchemeContains?: InputMaybe<Scalars['String']['input']>
  storageSchemeContainsFold?: InputMaybe<Scalars['String']['input']>
  storageSchemeEqualFold?: InputMaybe<Scalars['String']['input']>
  storageSchemeGT?: InputMaybe<Scalars['String']['input']>
  storageSchemeGTE?: InputMaybe<Scalars['String']['input']>
  storageSchemeHasPrefix?: InputMaybe<Scalars['String']['input']>
  storageSchemeHasSuffix?: InputMaybe<Scalars['String']['input']>
  storageSchemeIn?: InputMaybe<Array<Scalars['String']['input']>>
  storageSchemeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  storageSchemeLT?: InputMaybe<Scalars['String']['input']>
  storageSchemeLTE?: InputMaybe<Scalars['String']['input']>
  storageSchemeNEQ?: InputMaybe<Scalars['String']['input']>
  storageSchemeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  storageSchemeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** storage_volume field predicates */
  storageVolume?: InputMaybe<Scalars['String']['input']>
  storageVolumeContains?: InputMaybe<Scalars['String']['input']>
  storageVolumeContainsFold?: InputMaybe<Scalars['String']['input']>
  storageVolumeEqualFold?: InputMaybe<Scalars['String']['input']>
  storageVolumeGT?: InputMaybe<Scalars['String']['input']>
  storageVolumeGTE?: InputMaybe<Scalars['String']['input']>
  storageVolumeHasPrefix?: InputMaybe<Scalars['String']['input']>
  storageVolumeHasSuffix?: InputMaybe<Scalars['String']['input']>
  storageVolumeIn?: InputMaybe<Array<Scalars['String']['input']>>
  storageVolumeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  storageVolumeLT?: InputMaybe<Scalars['String']['input']>
  storageVolumeLTE?: InputMaybe<Scalars['String']['input']>
  storageVolumeNEQ?: InputMaybe<Scalars['String']['input']>
  storageVolumeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  storageVolumeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** store_key field predicates */
  storeKey?: InputMaybe<Scalars['String']['input']>
  storeKeyContains?: InputMaybe<Scalars['String']['input']>
  storeKeyContainsFold?: InputMaybe<Scalars['String']['input']>
  storeKeyEqualFold?: InputMaybe<Scalars['String']['input']>
  storeKeyGT?: InputMaybe<Scalars['String']['input']>
  storeKeyGTE?: InputMaybe<Scalars['String']['input']>
  storeKeyHasPrefix?: InputMaybe<Scalars['String']['input']>
  storeKeyHasSuffix?: InputMaybe<Scalars['String']['input']>
  storeKeyIn?: InputMaybe<Array<Scalars['String']['input']>>
  storeKeyIsNil?: InputMaybe<Scalars['Boolean']['input']>
  storeKeyLT?: InputMaybe<Scalars['String']['input']>
  storeKeyLTE?: InputMaybe<Scalars['String']['input']>
  storeKeyNEQ?: InputMaybe<Scalars['String']['input']>
  storeKeyNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  storeKeyNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** uri field predicates */
  uri?: InputMaybe<Scalars['String']['input']>
  uriContains?: InputMaybe<Scalars['String']['input']>
  uriContainsFold?: InputMaybe<Scalars['String']['input']>
  uriEqualFold?: InputMaybe<Scalars['String']['input']>
  uriGT?: InputMaybe<Scalars['String']['input']>
  uriGTE?: InputMaybe<Scalars['String']['input']>
  uriHasPrefix?: InputMaybe<Scalars['String']['input']>
  uriHasSuffix?: InputMaybe<Scalars['String']['input']>
  uriIn?: InputMaybe<Array<Scalars['String']['input']>>
  uriIsNil?: InputMaybe<Scalars['Boolean']['input']>
  uriLT?: InputMaybe<Scalars['String']['input']>
  uriLTE?: InputMaybe<Scalars['String']['input']>
  uriNEQ?: InputMaybe<Scalars['String']['input']>
  uriNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  uriNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface Group extends Node {
  __typename?: 'Group'
  controlBlockedGroups?: Maybe<Array<Control>>
  controlEditors?: Maybe<Array<Control>>
  controlObjectiveBlockedGroups?: Maybe<Array<ControlObjective>>
  controlObjectiveEditors?: Maybe<Array<ControlObjective>>
  controlObjectiveViewers?: Maybe<Array<ControlObjective>>
  controlViewers?: Maybe<Array<Control>>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** the groups description */
  description?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  /** The group's displayed 'friendly' name */
  displayName: Scalars['String']['output']
  events: EventConnection
  files: FileConnection
  /** the URL to an auto generated gravatar image for the group */
  gravatarLogoURL?: Maybe<Scalars['String']['output']>
  id: Scalars['ID']['output']
  integrations: IntegrationConnection
  internalPolicyBlockedGroups?: Maybe<Array<InternalPolicy>>
  internalPolicyEditors?: Maybe<Array<InternalPolicy>>
  /** whether the group is managed by the system */
  isManaged?: Maybe<Scalars['Boolean']['output']>
  /** the URL to an image uploaded by the customer for the groups avatar image */
  logoURL?: Maybe<Scalars['String']['output']>
  members?: Maybe<Array<GroupMembership>>
  /** the name of the group - must be unique within the organization */
  name: Scalars['String']['output']
  narrativeBlockedGroups?: Maybe<Array<Narrative>>
  narrativeEditors?: Maybe<Array<Narrative>>
  narrativeViewers?: Maybe<Array<Narrative>>
  owner?: Maybe<Organization>
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  /** permissions the group provides */
  permissions?: Maybe<Array<GroupPermissions>>
  procedureBlockedGroups?: Maybe<Array<Procedure>>
  procedureEditors?: Maybe<Array<Procedure>>
  programBlockedGroups?: Maybe<Array<Program>>
  programEditors?: Maybe<Array<Program>>
  programViewers?: Maybe<Array<Program>>
  riskBlockedGroups?: Maybe<Array<Risk>>
  riskEditors?: Maybe<Array<Risk>>
  riskViewers?: Maybe<Array<Risk>>
  setting?: Maybe<GroupSetting>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  tasks: TaskConnection
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  users?: Maybe<Array<User>>
}

export interface GroupEventsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EventOrder>>
  where?: InputMaybe<EventWhereInput>
}

export interface GroupFilesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<FileOrder>>
  where?: InputMaybe<FileWhereInput>
}

export interface GroupIntegrationsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<IntegrationOrder>>
  where?: InputMaybe<IntegrationWhereInput>
}

export interface GroupTasksArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<TaskOrder>>
  where?: InputMaybe<TaskWhereInput>
}

/** Return response for createBulkGroup mutation */
export interface GroupBulkCreatePayload {
  __typename?: 'GroupBulkCreatePayload'
  /** Created groups */
  groups?: Maybe<Array<Group>>
}

/** A connection to a list of items. */
export interface GroupConnection {
  __typename?: 'GroupConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<GroupEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createGroup mutation */
export interface GroupCreatePayload {
  __typename?: 'GroupCreatePayload'
  /** Created group */
  group: Group
}

/** Return response for deleteGroup mutation */
export interface GroupDeletePayload {
  __typename?: 'GroupDeletePayload'
  /** Deleted group ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface GroupEdge {
  __typename?: 'GroupEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<Group>
}

export interface GroupHistory extends Node {
  __typename?: 'GroupHistory'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** the groups description */
  description?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  /** The group's displayed 'friendly' name */
  displayName: Scalars['String']['output']
  /** the URL to an auto generated gravatar image for the group */
  gravatarLogoURL?: Maybe<Scalars['String']['output']>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** whether the group is managed by the system */
  isManaged?: Maybe<Scalars['Boolean']['output']>
  /** the URL to an image uploaded by the customer for the groups avatar image */
  logoURL?: Maybe<Scalars['String']['output']>
  /** the name of the group - must be unique within the organization */
  name: Scalars['String']['output']
  operation: GroupHistoryOpType
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface GroupHistoryConnection {
  __typename?: 'GroupHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<GroupHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface GroupHistoryEdge {
  __typename?: 'GroupHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<GroupHistory>
}

/** GroupHistoryOpType is enum for the field operation */
export enum GroupHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for GroupHistory connections */
export interface GroupHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order GroupHistories. */
  field: GroupHistoryOrderField
}

/** Properties by which GroupHistory connections can be ordered. */
export enum GroupHistoryOrderField {
  created_at = 'created_at',
  display_name = 'display_name',
  name = 'name',
  updated_at = 'updated_at',
}

/**
 * GroupHistoryWhereInput is used for filtering GroupHistory objects.
 * Input was generated by ent.
 */
export interface GroupHistoryWhereInput {
  and?: InputMaybe<Array<GroupHistoryWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>
  displayNameContains?: InputMaybe<Scalars['String']['input']>
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>
  displayNameGT?: InputMaybe<Scalars['String']['input']>
  displayNameGTE?: InputMaybe<Scalars['String']['input']>
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayNameLT?: InputMaybe<Scalars['String']['input']>
  displayNameLTE?: InputMaybe<Scalars['String']['input']>
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** is_managed field predicates */
  isManaged?: InputMaybe<Scalars['Boolean']['input']>
  isManagedIsNil?: InputMaybe<Scalars['Boolean']['input']>
  isManagedNEQ?: InputMaybe<Scalars['Boolean']['input']>
  isManagedNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<GroupHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<GroupHistoryOpType>
  operationIn?: InputMaybe<Array<GroupHistoryOpType>>
  operationNEQ?: InputMaybe<GroupHistoryOpType>
  operationNotIn?: InputMaybe<Array<GroupHistoryOpType>>
  or?: InputMaybe<Array<GroupHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/**
 * GroupMembersInput is used to create members for a group
 * along with the group creation
 */
export interface GroupMembersInput {
  role?: InputMaybe<GroupMembershipRole>
  userID: Scalars['ID']['input']
}

export interface GroupMembership extends Node {
  __typename?: 'GroupMembership'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  events: EventConnection
  group: Group
  groupID: Scalars['ID']['output']
  id: Scalars['ID']['output']
  role: GroupMembershipRole
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  user: User
  userID: Scalars['ID']['output']
}

export interface GroupMembershipEventsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EventOrder>>
  where?: InputMaybe<EventWhereInput>
}

/** Return response for createBulkGroupMembership mutation */
export interface GroupMembershipBulkCreatePayload {
  __typename?: 'GroupMembershipBulkCreatePayload'
  /** Created groupMemberships */
  groupMemberships?: Maybe<Array<GroupMembership>>
}

/** A connection to a list of items. */
export interface GroupMembershipConnection {
  __typename?: 'GroupMembershipConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<GroupMembershipEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createGroupMembership mutation */
export interface GroupMembershipCreatePayload {
  __typename?: 'GroupMembershipCreatePayload'
  /** Created groupMembership */
  groupMembership: GroupMembership
}

/** Return response for deleteGroupMembership mutation */
export interface GroupMembershipDeletePayload {
  __typename?: 'GroupMembershipDeletePayload'
  /** Deleted groupMembership ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface GroupMembershipEdge {
  __typename?: 'GroupMembershipEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<GroupMembership>
}

export interface GroupMembershipHistory extends Node {
  __typename?: 'GroupMembershipHistory'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  groupID: Scalars['String']['output']
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  operation: GroupMembershipHistoryOpType
  ref?: Maybe<Scalars['String']['output']>
  role: GroupMembershipHistoryRole
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  userID: Scalars['String']['output']
}

/** A connection to a list of items. */
export interface GroupMembershipHistoryConnection {
  __typename?: 'GroupMembershipHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<GroupMembershipHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface GroupMembershipHistoryEdge {
  __typename?: 'GroupMembershipHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<GroupMembershipHistory>
}

/** GroupMembershipHistoryOpType is enum for the field operation */
export enum GroupMembershipHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for GroupMembershipHistory connections */
export interface GroupMembershipHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order GroupMembershipHistories. */
  field: GroupMembershipHistoryOrderField
}

/** Properties by which GroupMembershipHistory connections can be ordered. */
export enum GroupMembershipHistoryOrderField {
  ROLE = 'ROLE',
  created_at = 'created_at',
  updated_at = 'updated_at',
}

/** GroupMembershipHistoryRole is enum for the field role */
export enum GroupMembershipHistoryRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER',
}

/**
 * GroupMembershipHistoryWhereInput is used for filtering GroupMembershipHistory objects.
 * Input was generated by ent.
 */
export interface GroupMembershipHistoryWhereInput {
  and?: InputMaybe<Array<GroupMembershipHistoryWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** group_id field predicates */
  groupID?: InputMaybe<Scalars['String']['input']>
  groupIDContains?: InputMaybe<Scalars['String']['input']>
  groupIDContainsFold?: InputMaybe<Scalars['String']['input']>
  groupIDEqualFold?: InputMaybe<Scalars['String']['input']>
  groupIDGT?: InputMaybe<Scalars['String']['input']>
  groupIDGTE?: InputMaybe<Scalars['String']['input']>
  groupIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  groupIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  groupIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  groupIDLT?: InputMaybe<Scalars['String']['input']>
  groupIDLTE?: InputMaybe<Scalars['String']['input']>
  groupIDNEQ?: InputMaybe<Scalars['String']['input']>
  groupIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<GroupMembershipHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<GroupMembershipHistoryOpType>
  operationIn?: InputMaybe<Array<GroupMembershipHistoryOpType>>
  operationNEQ?: InputMaybe<GroupMembershipHistoryOpType>
  operationNotIn?: InputMaybe<Array<GroupMembershipHistoryOpType>>
  or?: InputMaybe<Array<GroupMembershipHistoryWhereInput>>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** role field predicates */
  role?: InputMaybe<GroupMembershipHistoryRole>
  roleIn?: InputMaybe<Array<GroupMembershipHistoryRole>>
  roleNEQ?: InputMaybe<GroupMembershipHistoryRole>
  roleNotIn?: InputMaybe<Array<GroupMembershipHistoryRole>>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** user_id field predicates */
  userID?: InputMaybe<Scalars['String']['input']>
  userIDContains?: InputMaybe<Scalars['String']['input']>
  userIDContainsFold?: InputMaybe<Scalars['String']['input']>
  userIDEqualFold?: InputMaybe<Scalars['String']['input']>
  userIDGT?: InputMaybe<Scalars['String']['input']>
  userIDGTE?: InputMaybe<Scalars['String']['input']>
  userIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  userIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  userIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  userIDLT?: InputMaybe<Scalars['String']['input']>
  userIDLTE?: InputMaybe<Scalars['String']['input']>
  userIDNEQ?: InputMaybe<Scalars['String']['input']>
  userIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
}

/** Ordering options for GroupMembership connections */
export interface GroupMembershipOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order GroupMemberships. */
  field: GroupMembershipOrderField
}

/** Properties by which GroupMembership connections can be ordered. */
export enum GroupMembershipOrderField {
  ROLE = 'ROLE',
  created_at = 'created_at',
  updated_at = 'updated_at',
}

/** GroupMembershipRole is enum for the field role */
export enum GroupMembershipRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER',
}

/** Return response for updateGroupMembership mutation */
export interface GroupMembershipUpdatePayload {
  __typename?: 'GroupMembershipUpdatePayload'
  /** Updated groupMembership */
  groupMembership: GroupMembership
}

/**
 * GroupMembershipWhereInput is used for filtering GroupMembership objects.
 * Input was generated by ent.
 */
export interface GroupMembershipWhereInput {
  and?: InputMaybe<Array<GroupMembershipWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  groupID?: InputMaybe<Scalars['String']['input']>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<GroupMembershipWhereInput>
  or?: InputMaybe<Array<GroupMembershipWhereInput>>
  /** role field predicates */
  role?: InputMaybe<GroupMembershipRole>
  roleIn?: InputMaybe<Array<GroupMembershipRole>>
  roleNEQ?: InputMaybe<GroupMembershipRole>
  roleNotIn?: InputMaybe<Array<GroupMembershipRole>>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  userID?: InputMaybe<Scalars['String']['input']>
}

/** Ordering options for Group connections */
export interface GroupOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Groups. */
  field: GroupOrderField
}

/** Properties by which Group connections can be ordered. */
export enum GroupOrderField {
  created_at = 'created_at',
  display_name = 'display_name',
  name = 'name',
  updated_at = 'updated_at',
}

/**
 * GroupPermissions contains details for the related object and the permissions
 * the group provides (or removes in the case of blocked) to the object within the
 * organization
 */
export interface GroupPermissions {
  __typename?: 'GroupPermissions'
  displayID?: Maybe<Scalars['String']['output']>
  id?: Maybe<Scalars['ID']['output']>
  name?: Maybe<Scalars['String']['output']>
  objectType: Scalars['String']['output']
  permissions: Permission
}

export interface GroupSearchResult {
  __typename?: 'GroupSearchResult'
  groups?: Maybe<Array<Group>>
}

export interface GroupSetting extends Node {
  __typename?: 'GroupSetting'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  group?: Maybe<Group>
  /** the group id associated with the settings */
  groupID?: Maybe<Scalars['ID']['output']>
  id: Scalars['ID']['output']
  /** the policy governing ability to freely join a group, whether it requires an invitation, application, or either */
  joinPolicy: GroupSettingJoinPolicy
  /** whether to sync group members to github groups */
  syncToGithub?: Maybe<Scalars['Boolean']['output']>
  /** whether to sync group members to slack groups */
  syncToSlack?: Maybe<Scalars['Boolean']['output']>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  /** whether the group is visible to it's members / owners only or if it's searchable by anyone within the organization */
  visibility: GroupSettingVisibility
}

/** Return response for createBulkGroupSetting mutation */
export interface GroupSettingBulkCreatePayload {
  __typename?: 'GroupSettingBulkCreatePayload'
  /** Created groupSettings */
  groupSettings?: Maybe<Array<GroupSetting>>
}

/** A connection to a list of items. */
export interface GroupSettingConnection {
  __typename?: 'GroupSettingConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<GroupSettingEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createGroupSetting mutation */
export interface GroupSettingCreatePayload {
  __typename?: 'GroupSettingCreatePayload'
  /** Created groupSetting */
  groupSetting: GroupSetting
}

/** Return response for deleteGroupSetting mutation */
export interface GroupSettingDeletePayload {
  __typename?: 'GroupSettingDeletePayload'
  /** Deleted groupSetting ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface GroupSettingEdge {
  __typename?: 'GroupSettingEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<GroupSetting>
}

export interface GroupSettingHistory extends Node {
  __typename?: 'GroupSettingHistory'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** the group id associated with the settings */
  groupID?: Maybe<Scalars['String']['output']>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** the policy governing ability to freely join a group, whether it requires an invitation, application, or either */
  joinPolicy: GroupSettingHistoryJoinPolicy
  operation: GroupSettingHistoryOpType
  ref?: Maybe<Scalars['String']['output']>
  /** whether to sync group members to github groups */
  syncToGithub?: Maybe<Scalars['Boolean']['output']>
  /** whether to sync group members to slack groups */
  syncToSlack?: Maybe<Scalars['Boolean']['output']>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  /** whether the group is visible to it's members / owners only or if it's searchable by anyone within the organization */
  visibility: GroupSettingHistoryVisibility
}

/** A connection to a list of items. */
export interface GroupSettingHistoryConnection {
  __typename?: 'GroupSettingHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<GroupSettingHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface GroupSettingHistoryEdge {
  __typename?: 'GroupSettingHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<GroupSettingHistory>
}

/** GroupSettingHistoryJoinPolicy is enum for the field join_policy */
export enum GroupSettingHistoryJoinPolicy {
  APPLICATION_ONLY = 'APPLICATION_ONLY',
  INVITE_ONLY = 'INVITE_ONLY',
  INVITE_OR_APPLICATION = 'INVITE_OR_APPLICATION',
  OPEN = 'OPEN',
}

/** GroupSettingHistoryOpType is enum for the field operation */
export enum GroupSettingHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for GroupSettingHistory connections */
export interface GroupSettingHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order GroupSettingHistories. */
  field: GroupSettingHistoryOrderField
}

/** Properties by which GroupSettingHistory connections can be ordered. */
export enum GroupSettingHistoryOrderField {
  created_at = 'created_at',
  updated_at = 'updated_at',
}

/** GroupSettingHistoryVisibility is enum for the field visibility */
export enum GroupSettingHistoryVisibility {
  PRIVATE = 'PRIVATE',
  PUBLIC = 'PUBLIC',
}

/**
 * GroupSettingHistoryWhereInput is used for filtering GroupSettingHistory objects.
 * Input was generated by ent.
 */
export interface GroupSettingHistoryWhereInput {
  and?: InputMaybe<Array<GroupSettingHistoryWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** group_id field predicates */
  groupID?: InputMaybe<Scalars['String']['input']>
  groupIDContains?: InputMaybe<Scalars['String']['input']>
  groupIDContainsFold?: InputMaybe<Scalars['String']['input']>
  groupIDEqualFold?: InputMaybe<Scalars['String']['input']>
  groupIDGT?: InputMaybe<Scalars['String']['input']>
  groupIDGTE?: InputMaybe<Scalars['String']['input']>
  groupIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  groupIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  groupIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  groupIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  groupIDLT?: InputMaybe<Scalars['String']['input']>
  groupIDLTE?: InputMaybe<Scalars['String']['input']>
  groupIDNEQ?: InputMaybe<Scalars['String']['input']>
  groupIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  groupIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** join_policy field predicates */
  joinPolicy?: InputMaybe<GroupSettingHistoryJoinPolicy>
  joinPolicyIn?: InputMaybe<Array<GroupSettingHistoryJoinPolicy>>
  joinPolicyNEQ?: InputMaybe<GroupSettingHistoryJoinPolicy>
  joinPolicyNotIn?: InputMaybe<Array<GroupSettingHistoryJoinPolicy>>
  not?: InputMaybe<GroupSettingHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<GroupSettingHistoryOpType>
  operationIn?: InputMaybe<Array<GroupSettingHistoryOpType>>
  operationNEQ?: InputMaybe<GroupSettingHistoryOpType>
  operationNotIn?: InputMaybe<Array<GroupSettingHistoryOpType>>
  or?: InputMaybe<Array<GroupSettingHistoryWhereInput>>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** sync_to_github field predicates */
  syncToGithub?: InputMaybe<Scalars['Boolean']['input']>
  syncToGithubIsNil?: InputMaybe<Scalars['Boolean']['input']>
  syncToGithubNEQ?: InputMaybe<Scalars['Boolean']['input']>
  syncToGithubNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** sync_to_slack field predicates */
  syncToSlack?: InputMaybe<Scalars['Boolean']['input']>
  syncToSlackIsNil?: InputMaybe<Scalars['Boolean']['input']>
  syncToSlackNEQ?: InputMaybe<Scalars['Boolean']['input']>
  syncToSlackNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** visibility field predicates */
  visibility?: InputMaybe<GroupSettingHistoryVisibility>
  visibilityIn?: InputMaybe<Array<GroupSettingHistoryVisibility>>
  visibilityNEQ?: InputMaybe<GroupSettingHistoryVisibility>
  visibilityNotIn?: InputMaybe<Array<GroupSettingHistoryVisibility>>
}

/** GroupSettingJoinPolicy is enum for the field join_policy */
export enum GroupSettingJoinPolicy {
  APPLICATION_ONLY = 'APPLICATION_ONLY',
  INVITE_ONLY = 'INVITE_ONLY',
  INVITE_OR_APPLICATION = 'INVITE_OR_APPLICATION',
  OPEN = 'OPEN',
}

/** Ordering options for GroupSetting connections */
export interface GroupSettingOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order GroupSettings. */
  field: GroupSettingOrderField
}

/** Properties by which GroupSetting connections can be ordered. */
export enum GroupSettingOrderField {
  created_at = 'created_at',
  updated_at = 'updated_at',
}

/** Return response for updateGroupSetting mutation */
export interface GroupSettingUpdatePayload {
  __typename?: 'GroupSettingUpdatePayload'
  /** Updated groupSetting */
  groupSetting: GroupSetting
}

/** GroupSettingVisibility is enum for the field visibility */
export enum GroupSettingVisibility {
  PRIVATE = 'PRIVATE',
  PUBLIC = 'PUBLIC',
}

/**
 * GroupSettingWhereInput is used for filtering GroupSetting objects.
 * Input was generated by ent.
 */
export interface GroupSettingWhereInput {
  and?: InputMaybe<Array<GroupSettingWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** group_id field predicates */
  groupID?: InputMaybe<Scalars['ID']['input']>
  groupIDContains?: InputMaybe<Scalars['ID']['input']>
  groupIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  groupIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  groupIDGT?: InputMaybe<Scalars['ID']['input']>
  groupIDGTE?: InputMaybe<Scalars['ID']['input']>
  groupIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  groupIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  groupIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  groupIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  groupIDLT?: InputMaybe<Scalars['ID']['input']>
  groupIDLTE?: InputMaybe<Scalars['ID']['input']>
  groupIDNEQ?: InputMaybe<Scalars['ID']['input']>
  groupIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  groupIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** group edge predicates */
  hasGroup?: InputMaybe<Scalars['Boolean']['input']>
  hasGroupWith?: InputMaybe<Array<GroupWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** join_policy field predicates */
  joinPolicy?: InputMaybe<GroupSettingJoinPolicy>
  joinPolicyIn?: InputMaybe<Array<GroupSettingJoinPolicy>>
  joinPolicyNEQ?: InputMaybe<GroupSettingJoinPolicy>
  joinPolicyNotIn?: InputMaybe<Array<GroupSettingJoinPolicy>>
  not?: InputMaybe<GroupSettingWhereInput>
  or?: InputMaybe<Array<GroupSettingWhereInput>>
  /** sync_to_github field predicates */
  syncToGithub?: InputMaybe<Scalars['Boolean']['input']>
  syncToGithubIsNil?: InputMaybe<Scalars['Boolean']['input']>
  syncToGithubNEQ?: InputMaybe<Scalars['Boolean']['input']>
  syncToGithubNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** sync_to_slack field predicates */
  syncToSlack?: InputMaybe<Scalars['Boolean']['input']>
  syncToSlackIsNil?: InputMaybe<Scalars['Boolean']['input']>
  syncToSlackNEQ?: InputMaybe<Scalars['Boolean']['input']>
  syncToSlackNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** visibility field predicates */
  visibility?: InputMaybe<GroupSettingVisibility>
  visibilityIn?: InputMaybe<Array<GroupSettingVisibility>>
  visibilityNEQ?: InputMaybe<GroupSettingVisibility>
  visibilityNotIn?: InputMaybe<Array<GroupSettingVisibility>>
}

/** Return response for updateGroup mutation */
export interface GroupUpdatePayload {
  __typename?: 'GroupUpdatePayload'
  /** Updated group */
  group: Group
}

/**
 * GroupWhereInput is used for filtering Group objects.
 * Input was generated by ent.
 */
export interface GroupWhereInput {
  and?: InputMaybe<Array<GroupWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>
  displayNameContains?: InputMaybe<Scalars['String']['input']>
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>
  displayNameGT?: InputMaybe<Scalars['String']['input']>
  displayNameGTE?: InputMaybe<Scalars['String']['input']>
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayNameLT?: InputMaybe<Scalars['String']['input']>
  displayNameLTE?: InputMaybe<Scalars['String']['input']>
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** control_blocked_groups edge predicates */
  hasControlBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  hasControlBlockedGroupsWith?: InputMaybe<Array<ControlWhereInput>>
  /** control_editors edge predicates */
  hasControlEditors?: InputMaybe<Scalars['Boolean']['input']>
  hasControlEditorsWith?: InputMaybe<Array<ControlWhereInput>>
  /** control_objective_blocked_groups edge predicates */
  hasControlObjectiveBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  hasControlObjectiveBlockedGroupsWith?: InputMaybe<Array<ControlObjectiveWhereInput>>
  /** control_objective_editors edge predicates */
  hasControlObjectiveEditors?: InputMaybe<Scalars['Boolean']['input']>
  hasControlObjectiveEditorsWith?: InputMaybe<Array<ControlObjectiveWhereInput>>
  /** control_objective_viewers edge predicates */
  hasControlObjectiveViewers?: InputMaybe<Scalars['Boolean']['input']>
  hasControlObjectiveViewersWith?: InputMaybe<Array<ControlObjectiveWhereInput>>
  /** control_viewers edge predicates */
  hasControlViewers?: InputMaybe<Scalars['Boolean']['input']>
  hasControlViewersWith?: InputMaybe<Array<ControlWhereInput>>
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>
  /** integrations edge predicates */
  hasIntegrations?: InputMaybe<Scalars['Boolean']['input']>
  hasIntegrationsWith?: InputMaybe<Array<IntegrationWhereInput>>
  /** internal_policy_blocked_groups edge predicates */
  hasInternalPolicyBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  hasInternalPolicyBlockedGroupsWith?: InputMaybe<Array<InternalPolicyWhereInput>>
  /** internal_policy_editors edge predicates */
  hasInternalPolicyEditors?: InputMaybe<Scalars['Boolean']['input']>
  hasInternalPolicyEditorsWith?: InputMaybe<Array<InternalPolicyWhereInput>>
  /** members edge predicates */
  hasMembers?: InputMaybe<Scalars['Boolean']['input']>
  hasMembersWith?: InputMaybe<Array<GroupMembershipWhereInput>>
  /** narrative_blocked_groups edge predicates */
  hasNarrativeBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  hasNarrativeBlockedGroupsWith?: InputMaybe<Array<NarrativeWhereInput>>
  /** narrative_editors edge predicates */
  hasNarrativeEditors?: InputMaybe<Scalars['Boolean']['input']>
  hasNarrativeEditorsWith?: InputMaybe<Array<NarrativeWhereInput>>
  /** narrative_viewers edge predicates */
  hasNarrativeViewers?: InputMaybe<Scalars['Boolean']['input']>
  hasNarrativeViewersWith?: InputMaybe<Array<NarrativeWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** procedure_blocked_groups edge predicates */
  hasProcedureBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  hasProcedureBlockedGroupsWith?: InputMaybe<Array<ProcedureWhereInput>>
  /** procedure_editors edge predicates */
  hasProcedureEditors?: InputMaybe<Scalars['Boolean']['input']>
  hasProcedureEditorsWith?: InputMaybe<Array<ProcedureWhereInput>>
  /** program_blocked_groups edge predicates */
  hasProgramBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  hasProgramBlockedGroupsWith?: InputMaybe<Array<ProgramWhereInput>>
  /** program_editors edge predicates */
  hasProgramEditors?: InputMaybe<Scalars['Boolean']['input']>
  hasProgramEditorsWith?: InputMaybe<Array<ProgramWhereInput>>
  /** program_viewers edge predicates */
  hasProgramViewers?: InputMaybe<Scalars['Boolean']['input']>
  hasProgramViewersWith?: InputMaybe<Array<ProgramWhereInput>>
  /** risk_blocked_groups edge predicates */
  hasRiskBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  hasRiskBlockedGroupsWith?: InputMaybe<Array<RiskWhereInput>>
  /** risk_editors edge predicates */
  hasRiskEditors?: InputMaybe<Scalars['Boolean']['input']>
  hasRiskEditorsWith?: InputMaybe<Array<RiskWhereInput>>
  /** risk_viewers edge predicates */
  hasRiskViewers?: InputMaybe<Scalars['Boolean']['input']>
  hasRiskViewersWith?: InputMaybe<Array<RiskWhereInput>>
  /** setting edge predicates */
  hasSetting?: InputMaybe<Scalars['Boolean']['input']>
  hasSettingWith?: InputMaybe<Array<GroupSettingWhereInput>>
  /** tasks edge predicates */
  hasTasks?: InputMaybe<Scalars['Boolean']['input']>
  hasTasksWith?: InputMaybe<Array<TaskWhereInput>>
  /** users edge predicates */
  hasUsers?: InputMaybe<Scalars['Boolean']['input']>
  hasUsersWith?: InputMaybe<Array<UserWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** is_managed field predicates */
  isManaged?: InputMaybe<Scalars['Boolean']['input']>
  isManagedIsNil?: InputMaybe<Scalars['Boolean']['input']>
  isManagedNEQ?: InputMaybe<Scalars['Boolean']['input']>
  isManagedNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<GroupWhereInput>
  or?: InputMaybe<Array<GroupWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface Hush extends Node {
  __typename?: 'Hush'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** a description of the hush value or purpose, such as github PAT */
  description?: Maybe<Scalars['String']['output']>
  events: EventConnection
  id: Scalars['ID']['output']
  integrations: IntegrationConnection
  /** the kind of secret, such as sshkey, certificate, api token, etc. */
  kind?: Maybe<Scalars['String']['output']>
  /** the logical name of the corresponding hush secret or it's general grouping */
  name: Scalars['String']['output']
  owner?: Maybe<Organization>
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  /** the generic name of a secret associated with the organization */
  secretName?: Maybe<Scalars['String']['output']>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

export interface HushEventsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EventOrder>>
  where?: InputMaybe<EventWhereInput>
}

export interface HushIntegrationsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<IntegrationOrder>>
  where?: InputMaybe<IntegrationWhereInput>
}

/** Return response for createBulkHush mutation */
export interface HushBulkCreatePayload {
  __typename?: 'HushBulkCreatePayload'
  /** Created hushs */
  hushes?: Maybe<Array<Hush>>
}

/** A connection to a list of items. */
export interface HushConnection {
  __typename?: 'HushConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<HushEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createHush mutation */
export interface HushCreatePayload {
  __typename?: 'HushCreatePayload'
  /** Created hush */
  hush: Hush
}

/** Return response for deleteHush mutation */
export interface HushDeletePayload {
  __typename?: 'HushDeletePayload'
  /** Deleted hush ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface HushEdge {
  __typename?: 'HushEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<Hush>
}

export interface HushHistory extends Node {
  __typename?: 'HushHistory'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** a description of the hush value or purpose, such as github PAT */
  description?: Maybe<Scalars['String']['output']>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** the kind of secret, such as sshkey, certificate, api token, etc. */
  kind?: Maybe<Scalars['String']['output']>
  /** the logical name of the corresponding hush secret or it's general grouping */
  name: Scalars['String']['output']
  operation: HushHistoryOpType
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** the generic name of a secret associated with the organization */
  secretName?: Maybe<Scalars['String']['output']>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface HushHistoryConnection {
  __typename?: 'HushHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<HushHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface HushHistoryEdge {
  __typename?: 'HushHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<HushHistory>
}

/** HushHistoryOpType is enum for the field operation */
export enum HushHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for HushHistory connections */
export interface HushHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order HushHistories. */
  field: HushHistoryOrderField
}

/** Properties by which HushHistory connections can be ordered. */
export enum HushHistoryOrderField {
  created_at = 'created_at',
  kind = 'kind',
  name = 'name',
  updated_at = 'updated_at',
}

/**
 * HushHistoryWhereInput is used for filtering HushHistory objects.
 * Input was generated by ent.
 */
export interface HushHistoryWhereInput {
  and?: InputMaybe<Array<HushHistoryWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** kind field predicates */
  kind?: InputMaybe<Scalars['String']['input']>
  kindContains?: InputMaybe<Scalars['String']['input']>
  kindContainsFold?: InputMaybe<Scalars['String']['input']>
  kindEqualFold?: InputMaybe<Scalars['String']['input']>
  kindGT?: InputMaybe<Scalars['String']['input']>
  kindGTE?: InputMaybe<Scalars['String']['input']>
  kindHasPrefix?: InputMaybe<Scalars['String']['input']>
  kindHasSuffix?: InputMaybe<Scalars['String']['input']>
  kindIn?: InputMaybe<Array<Scalars['String']['input']>>
  kindIsNil?: InputMaybe<Scalars['Boolean']['input']>
  kindLT?: InputMaybe<Scalars['String']['input']>
  kindLTE?: InputMaybe<Scalars['String']['input']>
  kindNEQ?: InputMaybe<Scalars['String']['input']>
  kindNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  kindNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<HushHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<HushHistoryOpType>
  operationIn?: InputMaybe<Array<HushHistoryOpType>>
  operationNEQ?: InputMaybe<HushHistoryOpType>
  operationNotIn?: InputMaybe<Array<HushHistoryOpType>>
  or?: InputMaybe<Array<HushHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** secret_name field predicates */
  secretName?: InputMaybe<Scalars['String']['input']>
  secretNameContains?: InputMaybe<Scalars['String']['input']>
  secretNameContainsFold?: InputMaybe<Scalars['String']['input']>
  secretNameEqualFold?: InputMaybe<Scalars['String']['input']>
  secretNameGT?: InputMaybe<Scalars['String']['input']>
  secretNameGTE?: InputMaybe<Scalars['String']['input']>
  secretNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  secretNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  secretNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  secretNameIsNil?: InputMaybe<Scalars['Boolean']['input']>
  secretNameLT?: InputMaybe<Scalars['String']['input']>
  secretNameLTE?: InputMaybe<Scalars['String']['input']>
  secretNameNEQ?: InputMaybe<Scalars['String']['input']>
  secretNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  secretNameNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for Hush connections */
export interface HushOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Hushes. */
  field: HushOrderField
}

/** Properties by which Hush connections can be ordered. */
export enum HushOrderField {
  created_at = 'created_at',
  kind = 'kind',
  name = 'name',
  updated_at = 'updated_at',
}

/** Return response for updateHush mutation */
export interface HushUpdatePayload {
  __typename?: 'HushUpdatePayload'
  /** Updated hush */
  hush: Hush
}

/**
 * HushWhereInput is used for filtering Hush objects.
 * Input was generated by ent.
 */
export interface HushWhereInput {
  and?: InputMaybe<Array<HushWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>
  /** integrations edge predicates */
  hasIntegrations?: InputMaybe<Scalars['Boolean']['input']>
  hasIntegrationsWith?: InputMaybe<Array<IntegrationWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** kind field predicates */
  kind?: InputMaybe<Scalars['String']['input']>
  kindContains?: InputMaybe<Scalars['String']['input']>
  kindContainsFold?: InputMaybe<Scalars['String']['input']>
  kindEqualFold?: InputMaybe<Scalars['String']['input']>
  kindGT?: InputMaybe<Scalars['String']['input']>
  kindGTE?: InputMaybe<Scalars['String']['input']>
  kindHasPrefix?: InputMaybe<Scalars['String']['input']>
  kindHasSuffix?: InputMaybe<Scalars['String']['input']>
  kindIn?: InputMaybe<Array<Scalars['String']['input']>>
  kindIsNil?: InputMaybe<Scalars['Boolean']['input']>
  kindLT?: InputMaybe<Scalars['String']['input']>
  kindLTE?: InputMaybe<Scalars['String']['input']>
  kindNEQ?: InputMaybe<Scalars['String']['input']>
  kindNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  kindNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<HushWhereInput>
  or?: InputMaybe<Array<HushWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** secret_name field predicates */
  secretName?: InputMaybe<Scalars['String']['input']>
  secretNameContains?: InputMaybe<Scalars['String']['input']>
  secretNameContainsFold?: InputMaybe<Scalars['String']['input']>
  secretNameEqualFold?: InputMaybe<Scalars['String']['input']>
  secretNameGT?: InputMaybe<Scalars['String']['input']>
  secretNameGTE?: InputMaybe<Scalars['String']['input']>
  secretNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  secretNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  secretNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  secretNameIsNil?: InputMaybe<Scalars['Boolean']['input']>
  secretNameLT?: InputMaybe<Scalars['String']['input']>
  secretNameLTE?: InputMaybe<Scalars['String']['input']>
  secretNameNEQ?: InputMaybe<Scalars['String']['input']>
  secretNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  secretNameNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface Integration extends Node {
  __typename?: 'Integration'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** a description of the integration */
  description?: Maybe<Scalars['String']['output']>
  events: EventConnection
  id: Scalars['ID']['output']
  kind?: Maybe<Scalars['String']['output']>
  /** the name of the integration - must be unique within the organization */
  name: Scalars['String']['output']
  owner?: Maybe<Organization>
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  secrets: HushConnection
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

export interface IntegrationEventsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EventOrder>>
  where?: InputMaybe<EventWhereInput>
}

export interface IntegrationSecretsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<HushOrder>>
  where?: InputMaybe<HushWhereInput>
}

/** Return response for createBulkIntegration mutation */
export interface IntegrationBulkCreatePayload {
  __typename?: 'IntegrationBulkCreatePayload'
  /** Created integrations */
  integrations?: Maybe<Array<Integration>>
}

/** A connection to a list of items. */
export interface IntegrationConnection {
  __typename?: 'IntegrationConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<IntegrationEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createIntegration mutation */
export interface IntegrationCreatePayload {
  __typename?: 'IntegrationCreatePayload'
  /** Created integration */
  integration: Integration
}

/** Return response for deleteIntegration mutation */
export interface IntegrationDeletePayload {
  __typename?: 'IntegrationDeletePayload'
  /** Deleted integration ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface IntegrationEdge {
  __typename?: 'IntegrationEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<Integration>
}

export interface IntegrationHistory extends Node {
  __typename?: 'IntegrationHistory'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** a description of the integration */
  description?: Maybe<Scalars['String']['output']>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  kind?: Maybe<Scalars['String']['output']>
  /** the name of the integration - must be unique within the organization */
  name: Scalars['String']['output']
  operation: IntegrationHistoryOpType
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface IntegrationHistoryConnection {
  __typename?: 'IntegrationHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<IntegrationHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface IntegrationHistoryEdge {
  __typename?: 'IntegrationHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<IntegrationHistory>
}

/** IntegrationHistoryOpType is enum for the field operation */
export enum IntegrationHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for IntegrationHistory connections */
export interface IntegrationHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order IntegrationHistories. */
  field: IntegrationHistoryOrderField
}

/** Properties by which IntegrationHistory connections can be ordered. */
export enum IntegrationHistoryOrderField {
  created_at = 'created_at',
  kind = 'kind',
  name = 'name',
  updated_at = 'updated_at',
}

/**
 * IntegrationHistoryWhereInput is used for filtering IntegrationHistory objects.
 * Input was generated by ent.
 */
export interface IntegrationHistoryWhereInput {
  and?: InputMaybe<Array<IntegrationHistoryWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** kind field predicates */
  kind?: InputMaybe<Scalars['String']['input']>
  kindContains?: InputMaybe<Scalars['String']['input']>
  kindContainsFold?: InputMaybe<Scalars['String']['input']>
  kindEqualFold?: InputMaybe<Scalars['String']['input']>
  kindGT?: InputMaybe<Scalars['String']['input']>
  kindGTE?: InputMaybe<Scalars['String']['input']>
  kindHasPrefix?: InputMaybe<Scalars['String']['input']>
  kindHasSuffix?: InputMaybe<Scalars['String']['input']>
  kindIn?: InputMaybe<Array<Scalars['String']['input']>>
  kindIsNil?: InputMaybe<Scalars['Boolean']['input']>
  kindLT?: InputMaybe<Scalars['String']['input']>
  kindLTE?: InputMaybe<Scalars['String']['input']>
  kindNEQ?: InputMaybe<Scalars['String']['input']>
  kindNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  kindNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<IntegrationHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<IntegrationHistoryOpType>
  operationIn?: InputMaybe<Array<IntegrationHistoryOpType>>
  operationNEQ?: InputMaybe<IntegrationHistoryOpType>
  operationNotIn?: InputMaybe<Array<IntegrationHistoryOpType>>
  or?: InputMaybe<Array<IntegrationHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for Integration connections */
export interface IntegrationOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Integrations. */
  field: IntegrationOrderField
}

/** Properties by which Integration connections can be ordered. */
export enum IntegrationOrderField {
  created_at = 'created_at',
  kind = 'kind',
  name = 'name',
  updated_at = 'updated_at',
}

export interface IntegrationSearchResult {
  __typename?: 'IntegrationSearchResult'
  integrations?: Maybe<Array<Integration>>
}

/** Return response for updateIntegration mutation */
export interface IntegrationUpdatePayload {
  __typename?: 'IntegrationUpdatePayload'
  /** Updated integration */
  integration: Integration
}

/**
 * IntegrationWhereInput is used for filtering Integration objects.
 * Input was generated by ent.
 */
export interface IntegrationWhereInput {
  and?: InputMaybe<Array<IntegrationWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** secrets edge predicates */
  hasSecrets?: InputMaybe<Scalars['Boolean']['input']>
  hasSecretsWith?: InputMaybe<Array<HushWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** kind field predicates */
  kind?: InputMaybe<Scalars['String']['input']>
  kindContains?: InputMaybe<Scalars['String']['input']>
  kindContainsFold?: InputMaybe<Scalars['String']['input']>
  kindEqualFold?: InputMaybe<Scalars['String']['input']>
  kindGT?: InputMaybe<Scalars['String']['input']>
  kindGTE?: InputMaybe<Scalars['String']['input']>
  kindHasPrefix?: InputMaybe<Scalars['String']['input']>
  kindHasSuffix?: InputMaybe<Scalars['String']['input']>
  kindIn?: InputMaybe<Array<Scalars['String']['input']>>
  kindIsNil?: InputMaybe<Scalars['Boolean']['input']>
  kindLT?: InputMaybe<Scalars['String']['input']>
  kindLTE?: InputMaybe<Scalars['String']['input']>
  kindNEQ?: InputMaybe<Scalars['String']['input']>
  kindNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  kindNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<IntegrationWhereInput>
  or?: InputMaybe<Array<IntegrationWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface InternalPolicy extends Node {
  __typename?: 'InternalPolicy'
  /** whether approval is required for edits to the policy */
  approvalRequired?: Maybe<Scalars['Boolean']['output']>
  /** the group of users who are responsible for approving the policy */
  approver?: Maybe<Group>
  /** the id of the group responsible for approving the policy */
  approverID?: Maybe<Scalars['ID']['output']>
  /** groups that are blocked from viewing or editing the risk */
  blockedGroups?: Maybe<Array<Group>>
  controlObjectives: ControlObjectiveConnection
  controls: ControlConnection
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** temporary delegates for the policy, used for temporary approval */
  delegate?: Maybe<Group>
  /** the id of the group responsible for approving the policy */
  delegateID?: Maybe<Scalars['ID']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** details of the policy */
  details?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  /** provides edit access to the risk to members of the group */
  editors?: Maybe<Array<Group>>
  id: Scalars['ID']['output']
  /** the name of the policy */
  name: Scalars['String']['output']
  narratives: NarrativeConnection
  owner?: Maybe<Organization>
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  /** type of the policy, e.g. compliance, operational, health and safety, etc. */
  policyType?: Maybe<Scalars['String']['output']>
  procedures: ProcedureConnection
  programs: ProgramConnection
  /** the date the policy should be reviewed, calculated based on the review_frequency if not directly set */
  reviewDue?: Maybe<Scalars['Time']['output']>
  /** the frequency at which the policy should be reviewed, used to calculate the review_due date */
  reviewFrequency?: Maybe<InternalPolicyFrequency>
  /** revision of the object as a semver (e.g. v1.0.0), by default any update will bump the patch version, unless the revision_bump field is set */
  revision?: Maybe<Scalars['String']['output']>
  /** status of the policy, e.g. draft, published, archived, etc. */
  status?: Maybe<InternalPolicyDocumentStatus>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  tasks: TaskConnection
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

export interface InternalPolicyControlObjectivesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlObjectiveOrder>>
  where?: InputMaybe<ControlObjectiveWhereInput>
}

export interface InternalPolicyControlsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlOrder>>
  where?: InputMaybe<ControlWhereInput>
}

export interface InternalPolicyNarrativesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<NarrativeOrder>>
  where?: InputMaybe<NarrativeWhereInput>
}

export interface InternalPolicyProceduresArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProcedureOrder>>
  where?: InputMaybe<ProcedureWhereInput>
}

export interface InternalPolicyProgramsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProgramOrder>>
  where?: InputMaybe<ProgramWhereInput>
}

export interface InternalPolicyTasksArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<TaskOrder>>
  where?: InputMaybe<TaskWhereInput>
}

/** Return response for createBulkInternalPolicy mutation */
export interface InternalPolicyBulkCreatePayload {
  __typename?: 'InternalPolicyBulkCreatePayload'
  /** Created internalPolicys */
  internalPolicies?: Maybe<Array<InternalPolicy>>
}

/** A connection to a list of items. */
export interface InternalPolicyConnection {
  __typename?: 'InternalPolicyConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<InternalPolicyEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createInternalPolicy mutation */
export interface InternalPolicyCreatePayload {
  __typename?: 'InternalPolicyCreatePayload'
  /** Created internalPolicy */
  internalPolicy: InternalPolicy
}

/** Return response for deleteInternalPolicy mutation */
export interface InternalPolicyDeletePayload {
  __typename?: 'InternalPolicyDeletePayload'
  /** Deleted internalPolicy ID */
  deletedID: Scalars['ID']['output']
}

/** InternalPolicyDocumentStatus is enum for the field status */
export enum InternalPolicyDocumentStatus {
  APPROVED = 'APPROVED',
  ARCHIVED = 'ARCHIVED',
  DRAFT = 'DRAFT',
  NEEDS_APPROVAL = 'NEEDS_APPROVAL',
  PUBLISHED = 'PUBLISHED',
}

/** An edge in a connection. */
export interface InternalPolicyEdge {
  __typename?: 'InternalPolicyEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<InternalPolicy>
}

/** InternalPolicyFrequency is enum for the field review_frequency */
export enum InternalPolicyFrequency {
  BIANNUALLY = 'BIANNUALLY',
  MONTHLY = 'MONTHLY',
  QUARTERLY = 'QUARTERLY',
  YEARLY = 'YEARLY',
}

export interface InternalPolicyHistory extends Node {
  __typename?: 'InternalPolicyHistory'
  /** whether approval is required for edits to the policy */
  approvalRequired?: Maybe<Scalars['Boolean']['output']>
  /** the id of the group responsible for approving the policy */
  approverID?: Maybe<Scalars['String']['output']>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** the id of the group responsible for approving the policy */
  delegateID?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** details of the policy */
  details?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** the name of the policy */
  name: Scalars['String']['output']
  operation: InternalPolicyHistoryOpType
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['String']['output']>
  /** type of the policy, e.g. compliance, operational, health and safety, etc. */
  policyType?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** the date the policy should be reviewed, calculated based on the review_frequency if not directly set */
  reviewDue?: Maybe<Scalars['Time']['output']>
  /** the frequency at which the policy should be reviewed, used to calculate the review_due date */
  reviewFrequency?: Maybe<InternalPolicyHistoryFrequency>
  /** revision of the object as a semver (e.g. v1.0.0), by default any update will bump the patch version, unless the revision_bump field is set */
  revision?: Maybe<Scalars['String']['output']>
  /** status of the policy, e.g. draft, published, archived, etc. */
  status?: Maybe<InternalPolicyHistoryDocumentStatus>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface InternalPolicyHistoryConnection {
  __typename?: 'InternalPolicyHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<InternalPolicyHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** InternalPolicyHistoryDocumentStatus is enum for the field status */
export enum InternalPolicyHistoryDocumentStatus {
  APPROVED = 'APPROVED',
  ARCHIVED = 'ARCHIVED',
  DRAFT = 'DRAFT',
  NEEDS_APPROVAL = 'NEEDS_APPROVAL',
  PUBLISHED = 'PUBLISHED',
}

/** An edge in a connection. */
export interface InternalPolicyHistoryEdge {
  __typename?: 'InternalPolicyHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<InternalPolicyHistory>
}

/** InternalPolicyHistoryFrequency is enum for the field review_frequency */
export enum InternalPolicyHistoryFrequency {
  BIANNUALLY = 'BIANNUALLY',
  MONTHLY = 'MONTHLY',
  QUARTERLY = 'QUARTERLY',
  YEARLY = 'YEARLY',
}

/** InternalPolicyHistoryOpType is enum for the field operation */
export enum InternalPolicyHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for InternalPolicyHistory connections */
export interface InternalPolicyHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order InternalPolicyHistories. */
  field: InternalPolicyHistoryOrderField
}

/** Properties by which InternalPolicyHistory connections can be ordered. */
export enum InternalPolicyHistoryOrderField {
  REVIEW_FREQUENCY = 'REVIEW_FREQUENCY',
  STATUS = 'STATUS',
  created_at = 'created_at',
  name = 'name',
  review_due = 'review_due',
  revision = 'revision',
  updated_at = 'updated_at',
}

/**
 * InternalPolicyHistoryWhereInput is used for filtering InternalPolicyHistory objects.
 * Input was generated by ent.
 */
export interface InternalPolicyHistoryWhereInput {
  and?: InputMaybe<Array<InternalPolicyHistoryWhereInput>>
  /** approval_required field predicates */
  approvalRequired?: InputMaybe<Scalars['Boolean']['input']>
  approvalRequiredIsNil?: InputMaybe<Scalars['Boolean']['input']>
  approvalRequiredNEQ?: InputMaybe<Scalars['Boolean']['input']>
  approvalRequiredNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** approver_id field predicates */
  approverID?: InputMaybe<Scalars['String']['input']>
  approverIDContains?: InputMaybe<Scalars['String']['input']>
  approverIDContainsFold?: InputMaybe<Scalars['String']['input']>
  approverIDEqualFold?: InputMaybe<Scalars['String']['input']>
  approverIDGT?: InputMaybe<Scalars['String']['input']>
  approverIDGTE?: InputMaybe<Scalars['String']['input']>
  approverIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  approverIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  approverIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  approverIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  approverIDLT?: InputMaybe<Scalars['String']['input']>
  approverIDLTE?: InputMaybe<Scalars['String']['input']>
  approverIDNEQ?: InputMaybe<Scalars['String']['input']>
  approverIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  approverIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** delegate_id field predicates */
  delegateID?: InputMaybe<Scalars['String']['input']>
  delegateIDContains?: InputMaybe<Scalars['String']['input']>
  delegateIDContainsFold?: InputMaybe<Scalars['String']['input']>
  delegateIDEqualFold?: InputMaybe<Scalars['String']['input']>
  delegateIDGT?: InputMaybe<Scalars['String']['input']>
  delegateIDGTE?: InputMaybe<Scalars['String']['input']>
  delegateIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  delegateIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  delegateIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  delegateIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  delegateIDLT?: InputMaybe<Scalars['String']['input']>
  delegateIDLTE?: InputMaybe<Scalars['String']['input']>
  delegateIDNEQ?: InputMaybe<Scalars['String']['input']>
  delegateIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  delegateIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** details field predicates */
  details?: InputMaybe<Scalars['String']['input']>
  detailsContains?: InputMaybe<Scalars['String']['input']>
  detailsContainsFold?: InputMaybe<Scalars['String']['input']>
  detailsEqualFold?: InputMaybe<Scalars['String']['input']>
  detailsGT?: InputMaybe<Scalars['String']['input']>
  detailsGTE?: InputMaybe<Scalars['String']['input']>
  detailsHasPrefix?: InputMaybe<Scalars['String']['input']>
  detailsHasSuffix?: InputMaybe<Scalars['String']['input']>
  detailsIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsIsNil?: InputMaybe<Scalars['Boolean']['input']>
  detailsLT?: InputMaybe<Scalars['String']['input']>
  detailsLTE?: InputMaybe<Scalars['String']['input']>
  detailsNEQ?: InputMaybe<Scalars['String']['input']>
  detailsNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<InternalPolicyHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<InternalPolicyHistoryOpType>
  operationIn?: InputMaybe<Array<InternalPolicyHistoryOpType>>
  operationNEQ?: InputMaybe<InternalPolicyHistoryOpType>
  operationNotIn?: InputMaybe<Array<InternalPolicyHistoryOpType>>
  or?: InputMaybe<Array<InternalPolicyHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** policy_type field predicates */
  policyType?: InputMaybe<Scalars['String']['input']>
  policyTypeContains?: InputMaybe<Scalars['String']['input']>
  policyTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  policyTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  policyTypeGT?: InputMaybe<Scalars['String']['input']>
  policyTypeGTE?: InputMaybe<Scalars['String']['input']>
  policyTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  policyTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  policyTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  policyTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  policyTypeLT?: InputMaybe<Scalars['String']['input']>
  policyTypeLTE?: InputMaybe<Scalars['String']['input']>
  policyTypeNEQ?: InputMaybe<Scalars['String']['input']>
  policyTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  policyTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** review_due field predicates */
  reviewDue?: InputMaybe<Scalars['Time']['input']>
  reviewDueGT?: InputMaybe<Scalars['Time']['input']>
  reviewDueGTE?: InputMaybe<Scalars['Time']['input']>
  reviewDueIn?: InputMaybe<Array<Scalars['Time']['input']>>
  reviewDueIsNil?: InputMaybe<Scalars['Boolean']['input']>
  reviewDueLT?: InputMaybe<Scalars['Time']['input']>
  reviewDueLTE?: InputMaybe<Scalars['Time']['input']>
  reviewDueNEQ?: InputMaybe<Scalars['Time']['input']>
  reviewDueNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  reviewDueNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** review_frequency field predicates */
  reviewFrequency?: InputMaybe<InternalPolicyHistoryFrequency>
  reviewFrequencyIn?: InputMaybe<Array<InternalPolicyHistoryFrequency>>
  reviewFrequencyIsNil?: InputMaybe<Scalars['Boolean']['input']>
  reviewFrequencyNEQ?: InputMaybe<InternalPolicyHistoryFrequency>
  reviewFrequencyNotIn?: InputMaybe<Array<InternalPolicyHistoryFrequency>>
  reviewFrequencyNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** revision field predicates */
  revision?: InputMaybe<Scalars['String']['input']>
  revisionContains?: InputMaybe<Scalars['String']['input']>
  revisionContainsFold?: InputMaybe<Scalars['String']['input']>
  revisionEqualFold?: InputMaybe<Scalars['String']['input']>
  revisionGT?: InputMaybe<Scalars['String']['input']>
  revisionGTE?: InputMaybe<Scalars['String']['input']>
  revisionHasPrefix?: InputMaybe<Scalars['String']['input']>
  revisionHasSuffix?: InputMaybe<Scalars['String']['input']>
  revisionIn?: InputMaybe<Array<Scalars['String']['input']>>
  revisionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  revisionLT?: InputMaybe<Scalars['String']['input']>
  revisionLTE?: InputMaybe<Scalars['String']['input']>
  revisionNEQ?: InputMaybe<Scalars['String']['input']>
  revisionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  revisionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<InternalPolicyHistoryDocumentStatus>
  statusIn?: InputMaybe<Array<InternalPolicyHistoryDocumentStatus>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusNEQ?: InputMaybe<InternalPolicyHistoryDocumentStatus>
  statusNotIn?: InputMaybe<Array<InternalPolicyHistoryDocumentStatus>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for InternalPolicy connections */
export interface InternalPolicyOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order InternalPolicies. */
  field: InternalPolicyOrderField
}

/** Properties by which InternalPolicy connections can be ordered. */
export enum InternalPolicyOrderField {
  REVIEW_FREQUENCY = 'REVIEW_FREQUENCY',
  STATUS = 'STATUS',
  created_at = 'created_at',
  name = 'name',
  review_due = 'review_due',
  revision = 'revision',
  updated_at = 'updated_at',
}

export interface InternalPolicySearchResult {
  __typename?: 'InternalPolicySearchResult'
  internalPolicies?: Maybe<Array<InternalPolicy>>
}

/** Return response for updateInternalPolicy mutation */
export interface InternalPolicyUpdatePayload {
  __typename?: 'InternalPolicyUpdatePayload'
  /** Updated internalPolicy */
  internalPolicy: InternalPolicy
}

/**
 * InternalPolicyWhereInput is used for filtering InternalPolicy objects.
 * Input was generated by ent.
 */
export interface InternalPolicyWhereInput {
  and?: InputMaybe<Array<InternalPolicyWhereInput>>
  /** approval_required field predicates */
  approvalRequired?: InputMaybe<Scalars['Boolean']['input']>
  approvalRequiredIsNil?: InputMaybe<Scalars['Boolean']['input']>
  approvalRequiredNEQ?: InputMaybe<Scalars['Boolean']['input']>
  approvalRequiredNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** approver_id field predicates */
  approverID?: InputMaybe<Scalars['ID']['input']>
  approverIDContains?: InputMaybe<Scalars['ID']['input']>
  approverIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  approverIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  approverIDGT?: InputMaybe<Scalars['ID']['input']>
  approverIDGTE?: InputMaybe<Scalars['ID']['input']>
  approverIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  approverIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  approverIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  approverIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  approverIDLT?: InputMaybe<Scalars['ID']['input']>
  approverIDLTE?: InputMaybe<Scalars['ID']['input']>
  approverIDNEQ?: InputMaybe<Scalars['ID']['input']>
  approverIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  approverIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** delegate_id field predicates */
  delegateID?: InputMaybe<Scalars['ID']['input']>
  delegateIDContains?: InputMaybe<Scalars['ID']['input']>
  delegateIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  delegateIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  delegateIDGT?: InputMaybe<Scalars['ID']['input']>
  delegateIDGTE?: InputMaybe<Scalars['ID']['input']>
  delegateIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  delegateIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  delegateIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  delegateIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  delegateIDLT?: InputMaybe<Scalars['ID']['input']>
  delegateIDLTE?: InputMaybe<Scalars['ID']['input']>
  delegateIDNEQ?: InputMaybe<Scalars['ID']['input']>
  delegateIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  delegateIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** details field predicates */
  details?: InputMaybe<Scalars['String']['input']>
  detailsContains?: InputMaybe<Scalars['String']['input']>
  detailsContainsFold?: InputMaybe<Scalars['String']['input']>
  detailsEqualFold?: InputMaybe<Scalars['String']['input']>
  detailsGT?: InputMaybe<Scalars['String']['input']>
  detailsGTE?: InputMaybe<Scalars['String']['input']>
  detailsHasPrefix?: InputMaybe<Scalars['String']['input']>
  detailsHasSuffix?: InputMaybe<Scalars['String']['input']>
  detailsIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsIsNil?: InputMaybe<Scalars['Boolean']['input']>
  detailsLT?: InputMaybe<Scalars['String']['input']>
  detailsLTE?: InputMaybe<Scalars['String']['input']>
  detailsNEQ?: InputMaybe<Scalars['String']['input']>
  detailsNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** approver edge predicates */
  hasApprover?: InputMaybe<Scalars['Boolean']['input']>
  hasApproverWith?: InputMaybe<Array<GroupWhereInput>>
  /** blocked_groups edge predicates */
  hasBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  hasBlockedGroupsWith?: InputMaybe<Array<GroupWhereInput>>
  /** control_objectives edge predicates */
  hasControlObjectives?: InputMaybe<Scalars['Boolean']['input']>
  hasControlObjectivesWith?: InputMaybe<Array<ControlObjectiveWhereInput>>
  /** controls edge predicates */
  hasControls?: InputMaybe<Scalars['Boolean']['input']>
  hasControlsWith?: InputMaybe<Array<ControlWhereInput>>
  /** delegate edge predicates */
  hasDelegate?: InputMaybe<Scalars['Boolean']['input']>
  hasDelegateWith?: InputMaybe<Array<GroupWhereInput>>
  /** editors edge predicates */
  hasEditors?: InputMaybe<Scalars['Boolean']['input']>
  hasEditorsWith?: InputMaybe<Array<GroupWhereInput>>
  /** narratives edge predicates */
  hasNarratives?: InputMaybe<Scalars['Boolean']['input']>
  hasNarrativesWith?: InputMaybe<Array<NarrativeWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** procedures edge predicates */
  hasProcedures?: InputMaybe<Scalars['Boolean']['input']>
  hasProceduresWith?: InputMaybe<Array<ProcedureWhereInput>>
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>
  /** tasks edge predicates */
  hasTasks?: InputMaybe<Scalars['Boolean']['input']>
  hasTasksWith?: InputMaybe<Array<TaskWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<InternalPolicyWhereInput>
  or?: InputMaybe<Array<InternalPolicyWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** policy_type field predicates */
  policyType?: InputMaybe<Scalars['String']['input']>
  policyTypeContains?: InputMaybe<Scalars['String']['input']>
  policyTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  policyTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  policyTypeGT?: InputMaybe<Scalars['String']['input']>
  policyTypeGTE?: InputMaybe<Scalars['String']['input']>
  policyTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  policyTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  policyTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  policyTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  policyTypeLT?: InputMaybe<Scalars['String']['input']>
  policyTypeLTE?: InputMaybe<Scalars['String']['input']>
  policyTypeNEQ?: InputMaybe<Scalars['String']['input']>
  policyTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  policyTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** review_due field predicates */
  reviewDue?: InputMaybe<Scalars['Time']['input']>
  reviewDueGT?: InputMaybe<Scalars['Time']['input']>
  reviewDueGTE?: InputMaybe<Scalars['Time']['input']>
  reviewDueIn?: InputMaybe<Array<Scalars['Time']['input']>>
  reviewDueIsNil?: InputMaybe<Scalars['Boolean']['input']>
  reviewDueLT?: InputMaybe<Scalars['Time']['input']>
  reviewDueLTE?: InputMaybe<Scalars['Time']['input']>
  reviewDueNEQ?: InputMaybe<Scalars['Time']['input']>
  reviewDueNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  reviewDueNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** review_frequency field predicates */
  reviewFrequency?: InputMaybe<InternalPolicyFrequency>
  reviewFrequencyIn?: InputMaybe<Array<InternalPolicyFrequency>>
  reviewFrequencyIsNil?: InputMaybe<Scalars['Boolean']['input']>
  reviewFrequencyNEQ?: InputMaybe<InternalPolicyFrequency>
  reviewFrequencyNotIn?: InputMaybe<Array<InternalPolicyFrequency>>
  reviewFrequencyNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** revision field predicates */
  revision?: InputMaybe<Scalars['String']['input']>
  revisionContains?: InputMaybe<Scalars['String']['input']>
  revisionContainsFold?: InputMaybe<Scalars['String']['input']>
  revisionEqualFold?: InputMaybe<Scalars['String']['input']>
  revisionGT?: InputMaybe<Scalars['String']['input']>
  revisionGTE?: InputMaybe<Scalars['String']['input']>
  revisionHasPrefix?: InputMaybe<Scalars['String']['input']>
  revisionHasSuffix?: InputMaybe<Scalars['String']['input']>
  revisionIn?: InputMaybe<Array<Scalars['String']['input']>>
  revisionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  revisionLT?: InputMaybe<Scalars['String']['input']>
  revisionLTE?: InputMaybe<Scalars['String']['input']>
  revisionNEQ?: InputMaybe<Scalars['String']['input']>
  revisionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  revisionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<InternalPolicyDocumentStatus>
  statusIn?: InputMaybe<Array<InternalPolicyDocumentStatus>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusNEQ?: InputMaybe<InternalPolicyDocumentStatus>
  statusNotIn?: InputMaybe<Array<InternalPolicyDocumentStatus>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface Invite extends Node {
  __typename?: 'Invite'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  events: EventConnection
  /** the expiration date of the invitation token which defaults to 14 days in the future from creation */
  expires?: Maybe<Scalars['Time']['output']>
  id: Scalars['ID']['output']
  owner?: Maybe<Organization>
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  /** the email used as input to generate the invitation token and is the destination person the invitation is sent to who is required to accept to join the organization */
  recipient: Scalars['String']['output']
  /** the user who initiated the invitation */
  requestorID?: Maybe<Scalars['String']['output']>
  role: InviteRole
  /** the number of attempts made to perform email send of the invitation, maximum of 5 */
  sendAttempts: Scalars['Int']['output']
  /** the status of the invitation */
  status: InviteInviteStatus
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

export interface InviteEventsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EventOrder>>
  where?: InputMaybe<EventWhereInput>
}

/** Return response for createBulkInvite mutation */
export interface InviteBulkCreatePayload {
  __typename?: 'InviteBulkCreatePayload'
  /** Created invites */
  invites?: Maybe<Array<Invite>>
}

/** A connection to a list of items. */
export interface InviteConnection {
  __typename?: 'InviteConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<InviteEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createInvite mutation */
export interface InviteCreatePayload {
  __typename?: 'InviteCreatePayload'
  /** Created invite */
  invite: Invite
}

/** Return response for deleteInvite mutation */
export interface InviteDeletePayload {
  __typename?: 'InviteDeletePayload'
  /** Deleted invite ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface InviteEdge {
  __typename?: 'InviteEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<Invite>
}

/** InviteInviteStatus is enum for the field status */
export enum InviteInviteStatus {
  APPROVAL_REQUIRED = 'APPROVAL_REQUIRED',
  INVITATION_ACCEPTED = 'INVITATION_ACCEPTED',
  INVITATION_EXPIRED = 'INVITATION_EXPIRED',
  INVITATION_SENT = 'INVITATION_SENT',
}

/** Ordering options for Invite connections */
export interface InviteOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Invites. */
  field: InviteOrderField
}

/** Properties by which Invite connections can be ordered. */
export enum InviteOrderField {
  STATUS = 'STATUS',
  created_at = 'created_at',
  expires = 'expires',
  send_attempts = 'send_attempts',
  updated_at = 'updated_at',
}

/** InviteRole is enum for the field role */
export enum InviteRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER',
}

/** Return response for updateInvite mutation */
export interface InviteUpdatePayload {
  __typename?: 'InviteUpdatePayload'
  /** Updated invite */
  invite: Invite
}

/**
 * InviteWhereInput is used for filtering Invite objects.
 * Input was generated by ent.
 */
export interface InviteWhereInput {
  and?: InputMaybe<Array<InviteWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** expires field predicates */
  expires?: InputMaybe<Scalars['Time']['input']>
  expiresGT?: InputMaybe<Scalars['Time']['input']>
  expiresGTE?: InputMaybe<Scalars['Time']['input']>
  expiresIn?: InputMaybe<Array<Scalars['Time']['input']>>
  expiresIsNil?: InputMaybe<Scalars['Boolean']['input']>
  expiresLT?: InputMaybe<Scalars['Time']['input']>
  expiresLTE?: InputMaybe<Scalars['Time']['input']>
  expiresNEQ?: InputMaybe<Scalars['Time']['input']>
  expiresNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  expiresNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<InviteWhereInput>
  or?: InputMaybe<Array<InviteWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** recipient field predicates */
  recipient?: InputMaybe<Scalars['String']['input']>
  recipientContains?: InputMaybe<Scalars['String']['input']>
  recipientContainsFold?: InputMaybe<Scalars['String']['input']>
  recipientEqualFold?: InputMaybe<Scalars['String']['input']>
  recipientGT?: InputMaybe<Scalars['String']['input']>
  recipientGTE?: InputMaybe<Scalars['String']['input']>
  recipientHasPrefix?: InputMaybe<Scalars['String']['input']>
  recipientHasSuffix?: InputMaybe<Scalars['String']['input']>
  recipientIn?: InputMaybe<Array<Scalars['String']['input']>>
  recipientLT?: InputMaybe<Scalars['String']['input']>
  recipientLTE?: InputMaybe<Scalars['String']['input']>
  recipientNEQ?: InputMaybe<Scalars['String']['input']>
  recipientNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** requestor_id field predicates */
  requestorID?: InputMaybe<Scalars['String']['input']>
  requestorIDContains?: InputMaybe<Scalars['String']['input']>
  requestorIDContainsFold?: InputMaybe<Scalars['String']['input']>
  requestorIDEqualFold?: InputMaybe<Scalars['String']['input']>
  requestorIDGT?: InputMaybe<Scalars['String']['input']>
  requestorIDGTE?: InputMaybe<Scalars['String']['input']>
  requestorIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  requestorIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  requestorIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  requestorIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  requestorIDLT?: InputMaybe<Scalars['String']['input']>
  requestorIDLTE?: InputMaybe<Scalars['String']['input']>
  requestorIDNEQ?: InputMaybe<Scalars['String']['input']>
  requestorIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  requestorIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** role field predicates */
  role?: InputMaybe<InviteRole>
  roleIn?: InputMaybe<Array<InviteRole>>
  roleNEQ?: InputMaybe<InviteRole>
  roleNotIn?: InputMaybe<Array<InviteRole>>
  /** send_attempts field predicates */
  sendAttempts?: InputMaybe<Scalars['Int']['input']>
  sendAttemptsGT?: InputMaybe<Scalars['Int']['input']>
  sendAttemptsGTE?: InputMaybe<Scalars['Int']['input']>
  sendAttemptsIn?: InputMaybe<Array<Scalars['Int']['input']>>
  sendAttemptsLT?: InputMaybe<Scalars['Int']['input']>
  sendAttemptsLTE?: InputMaybe<Scalars['Int']['input']>
  sendAttemptsNEQ?: InputMaybe<Scalars['Int']['input']>
  sendAttemptsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>
  /** status field predicates */
  status?: InputMaybe<InviteInviteStatus>
  statusIn?: InputMaybe<Array<InviteInviteStatus>>
  statusNEQ?: InputMaybe<InviteInviteStatus>
  statusNotIn?: InputMaybe<Array<InviteInviteStatus>>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface MappedControl extends Node {
  __typename?: 'MappedControl'
  controls: ControlConnection
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  id: Scalars['ID']['output']
  /** the type of mapping between the two controls, e.g. subset, intersect, equal, superset */
  mappingType?: Maybe<Scalars['String']['output']>
  /** description of how the two controls are related */
  relation?: Maybe<Scalars['String']['output']>
  subcontrols: SubcontrolConnection
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

export interface MappedControlControlsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlOrder>>
  where?: InputMaybe<ControlWhereInput>
}

export interface MappedControlSubcontrolsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<SubcontrolOrder>>
  where?: InputMaybe<SubcontrolWhereInput>
}

/** Return response for createBulkMappedControl mutation */
export interface MappedControlBulkCreatePayload {
  __typename?: 'MappedControlBulkCreatePayload'
  /** Created mappedControls */
  mappedControls?: Maybe<Array<MappedControl>>
}

/** A connection to a list of items. */
export interface MappedControlConnection {
  __typename?: 'MappedControlConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<MappedControlEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createMappedControl mutation */
export interface MappedControlCreatePayload {
  __typename?: 'MappedControlCreatePayload'
  /** Created mappedControl */
  mappedControl: MappedControl
}

/** Return response for deleteMappedControl mutation */
export interface MappedControlDeletePayload {
  __typename?: 'MappedControlDeletePayload'
  /** Deleted mappedControl ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface MappedControlEdge {
  __typename?: 'MappedControlEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<MappedControl>
}

export interface MappedControlHistory extends Node {
  __typename?: 'MappedControlHistory'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** the type of mapping between the two controls, e.g. subset, intersect, equal, superset */
  mappingType?: Maybe<Scalars['String']['output']>
  operation: MappedControlHistoryOpType
  ref?: Maybe<Scalars['String']['output']>
  /** description of how the two controls are related */
  relation?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface MappedControlHistoryConnection {
  __typename?: 'MappedControlHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<MappedControlHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface MappedControlHistoryEdge {
  __typename?: 'MappedControlHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<MappedControlHistory>
}

/** MappedControlHistoryOpType is enum for the field operation */
export enum MappedControlHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for MappedControlHistory connections */
export interface MappedControlHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order MappedControlHistories. */
  field: MappedControlHistoryOrderField
}

/** Properties by which MappedControlHistory connections can be ordered. */
export enum MappedControlHistoryOrderField {
  created_at = 'created_at',
  mapping_type = 'mapping_type',
  updated_at = 'updated_at',
}

/**
 * MappedControlHistoryWhereInput is used for filtering MappedControlHistory objects.
 * Input was generated by ent.
 */
export interface MappedControlHistoryWhereInput {
  and?: InputMaybe<Array<MappedControlHistoryWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** mapping_type field predicates */
  mappingType?: InputMaybe<Scalars['String']['input']>
  mappingTypeContains?: InputMaybe<Scalars['String']['input']>
  mappingTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  mappingTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  mappingTypeGT?: InputMaybe<Scalars['String']['input']>
  mappingTypeGTE?: InputMaybe<Scalars['String']['input']>
  mappingTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  mappingTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  mappingTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  mappingTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  mappingTypeLT?: InputMaybe<Scalars['String']['input']>
  mappingTypeLTE?: InputMaybe<Scalars['String']['input']>
  mappingTypeNEQ?: InputMaybe<Scalars['String']['input']>
  mappingTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  mappingTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  not?: InputMaybe<MappedControlHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<MappedControlHistoryOpType>
  operationIn?: InputMaybe<Array<MappedControlHistoryOpType>>
  operationNEQ?: InputMaybe<MappedControlHistoryOpType>
  operationNotIn?: InputMaybe<Array<MappedControlHistoryOpType>>
  or?: InputMaybe<Array<MappedControlHistoryWhereInput>>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** relation field predicates */
  relation?: InputMaybe<Scalars['String']['input']>
  relationContains?: InputMaybe<Scalars['String']['input']>
  relationContainsFold?: InputMaybe<Scalars['String']['input']>
  relationEqualFold?: InputMaybe<Scalars['String']['input']>
  relationGT?: InputMaybe<Scalars['String']['input']>
  relationGTE?: InputMaybe<Scalars['String']['input']>
  relationHasPrefix?: InputMaybe<Scalars['String']['input']>
  relationHasSuffix?: InputMaybe<Scalars['String']['input']>
  relationIn?: InputMaybe<Array<Scalars['String']['input']>>
  relationIsNil?: InputMaybe<Scalars['Boolean']['input']>
  relationLT?: InputMaybe<Scalars['String']['input']>
  relationLTE?: InputMaybe<Scalars['String']['input']>
  relationNEQ?: InputMaybe<Scalars['String']['input']>
  relationNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  relationNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for MappedControl connections */
export interface MappedControlOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order MappedControls. */
  field: MappedControlOrderField
}

/** Properties by which MappedControl connections can be ordered. */
export enum MappedControlOrderField {
  created_at = 'created_at',
  mapping_type = 'mapping_type',
  updated_at = 'updated_at',
}

export interface MappedControlSearchResult {
  __typename?: 'MappedControlSearchResult'
  mappedControls?: Maybe<Array<MappedControl>>
}

/** Return response for updateMappedControl mutation */
export interface MappedControlUpdatePayload {
  __typename?: 'MappedControlUpdatePayload'
  /** Updated mappedControl */
  mappedControl: MappedControl
}

/**
 * MappedControlWhereInput is used for filtering MappedControl objects.
 * Input was generated by ent.
 */
export interface MappedControlWhereInput {
  and?: InputMaybe<Array<MappedControlWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** controls edge predicates */
  hasControls?: InputMaybe<Scalars['Boolean']['input']>
  hasControlsWith?: InputMaybe<Array<ControlWhereInput>>
  /** subcontrols edge predicates */
  hasSubcontrols?: InputMaybe<Scalars['Boolean']['input']>
  hasSubcontrolsWith?: InputMaybe<Array<SubcontrolWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** mapping_type field predicates */
  mappingType?: InputMaybe<Scalars['String']['input']>
  mappingTypeContains?: InputMaybe<Scalars['String']['input']>
  mappingTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  mappingTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  mappingTypeGT?: InputMaybe<Scalars['String']['input']>
  mappingTypeGTE?: InputMaybe<Scalars['String']['input']>
  mappingTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  mappingTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  mappingTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  mappingTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  mappingTypeLT?: InputMaybe<Scalars['String']['input']>
  mappingTypeLTE?: InputMaybe<Scalars['String']['input']>
  mappingTypeNEQ?: InputMaybe<Scalars['String']['input']>
  mappingTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  mappingTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  not?: InputMaybe<MappedControlWhereInput>
  or?: InputMaybe<Array<MappedControlWhereInput>>
  /** relation field predicates */
  relation?: InputMaybe<Scalars['String']['input']>
  relationContains?: InputMaybe<Scalars['String']['input']>
  relationContainsFold?: InputMaybe<Scalars['String']['input']>
  relationEqualFold?: InputMaybe<Scalars['String']['input']>
  relationGT?: InputMaybe<Scalars['String']['input']>
  relationGTE?: InputMaybe<Scalars['String']['input']>
  relationHasPrefix?: InputMaybe<Scalars['String']['input']>
  relationHasSuffix?: InputMaybe<Scalars['String']['input']>
  relationIn?: InputMaybe<Array<Scalars['String']['input']>>
  relationIsNil?: InputMaybe<Scalars['Boolean']['input']>
  relationLT?: InputMaybe<Scalars['String']['input']>
  relationLTE?: InputMaybe<Scalars['String']['input']>
  relationNEQ?: InputMaybe<Scalars['String']['input']>
  relationNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  relationNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface Mutation {
  __typename?: 'Mutation'
  /** Create a new apiToken */
  createAPIToken: ApiTokenCreatePayload
  /** Create a new actionPlan */
  createActionPlan: ActionPlanCreatePayload
  /** Create multiple new apiTokens */
  createBulkAPIToken: ApiTokenBulkCreatePayload
  /** Create multiple new actionPlans */
  createBulkActionPlan: ActionPlanBulkCreatePayload
  /** Create multiple new apiTokens via file upload */
  createBulkCSVAPIToken: ApiTokenBulkCreatePayload
  /** Create multiple new actionPlans via file upload */
  createBulkCSVActionPlan: ActionPlanBulkCreatePayload
  /** Create multiple new contacts via file upload */
  createBulkCSVContact: ContactBulkCreatePayload
  /** Create multiple new controls via file upload */
  createBulkCSVControl: ControlBulkCreatePayload
  /** Create multiple new controlImplementations via file upload */
  createBulkCSVControlImplementation: ControlImplementationBulkCreatePayload
  /** Create multiple new controlObjectives via file upload */
  createBulkCSVControlObjective: ControlObjectiveBulkCreatePayload
  /** Create multiple new documentData via file upload */
  createBulkCSVDocumentData: DocumentDataBulkCreatePayload
  /** Create multiple new entities via file upload */
  createBulkCSVEntity: EntityBulkCreatePayload
  /** Create multiple new entityTypes via file upload */
  createBulkCSVEntityType: EntityTypeBulkCreatePayload
  /** Create multiple new events via file upload */
  createBulkCSVEvent: EventBulkCreatePayload
  /** Create multiple new groups via file upload */
  createBulkCSVGroup: GroupBulkCreatePayload
  /** Create multiple new groupMemberships via file upload */
  createBulkCSVGroupMembership: GroupMembershipBulkCreatePayload
  /** Create multiple new groupSettings via file upload */
  createBulkCSVGroupSetting: GroupSettingBulkCreatePayload
  /** Create multiple new hushs via file upload */
  createBulkCSVHush: HushBulkCreatePayload
  /** Create multiple new integrations via file upload */
  createBulkCSVIntegration: IntegrationBulkCreatePayload
  /** Create multiple new internalPolicys via file upload */
  createBulkCSVInternalPolicy: InternalPolicyBulkCreatePayload
  /** Create multiple new invites via file upload */
  createBulkCSVInvite: InviteBulkCreatePayload
  /** Create multiple new mappedControls via file upload */
  createBulkCSVMappedControl: MappedControlBulkCreatePayload
  /** Create multiple new narratives via file upload */
  createBulkCSVNarrative: NarrativeBulkCreatePayload
  /** Create multiple new orgMemberships via file upload */
  createBulkCSVOrgMembership: OrgMembershipBulkCreatePayload
  /** Create multiple new organizationSettings via file upload */
  createBulkCSVOrganizationSetting: OrganizationSettingBulkCreatePayload
  /** Create multiple new procedures via file upload */
  createBulkCSVProcedure: ProcedureBulkCreatePayload
  /** Create multiple new programs via file upload */
  createBulkCSVProgram: ProgramBulkCreatePayload
  /** Create multiple new programMemberships via file upload */
  createBulkCSVProgramMembership: ProgramMembershipBulkCreatePayload
  /** Create multiple new risks via file upload */
  createBulkCSVRisk: RiskBulkCreatePayload
  /** Create multiple new subcontrols via file upload */
  createBulkCSVSubcontrol: SubcontrolBulkCreatePayload
  /** Create new subscribers via CSV file */
  createBulkCSVSubscriber: SubscriberBulkCreatePayload
  /** Create multiple new tasks via file upload */
  createBulkCSVTask: TaskBulkCreatePayload
  /** Create multiple new templates via file upload */
  createBulkCSVTemplate: TemplateBulkCreatePayload
  /** Create multiple new userSettings via file upload */
  createBulkCSVUserSetting: UserSettingBulkCreatePayload
  /** Create multiple new contacts */
  createBulkContact: ContactBulkCreatePayload
  /** Create multiple new controls */
  createBulkControl: ControlBulkCreatePayload
  /** Create multiple new controlImplementations */
  createBulkControlImplementation: ControlImplementationBulkCreatePayload
  /** Create multiple new controlObjectives */
  createBulkControlObjective: ControlObjectiveBulkCreatePayload
  /** Create multiple new documentData */
  createBulkDocumentData: DocumentDataBulkCreatePayload
  /** Create multiple new entities */
  createBulkEntity: EntityBulkCreatePayload
  /** Create multiple new entityTypes */
  createBulkEntityType: EntityTypeBulkCreatePayload
  /** Create multiple new events */
  createBulkEvent: EventBulkCreatePayload
  /** Create multiple new groups */
  createBulkGroup: GroupBulkCreatePayload
  /** Create multiple new groupMemberships */
  createBulkGroupMembership: GroupMembershipBulkCreatePayload
  /** Create multiple new groupSettings */
  createBulkGroupSetting: GroupSettingBulkCreatePayload
  /** Create multiple new hushs */
  createBulkHush: HushBulkCreatePayload
  /** Create multiple new integrations */
  createBulkIntegration: IntegrationBulkCreatePayload
  /** Create multiple new internalPolicys */
  createBulkInternalPolicy: InternalPolicyBulkCreatePayload
  /** Create multiple new invites */
  createBulkInvite: InviteBulkCreatePayload
  /** Create multiple new mappedControls */
  createBulkMappedControl: MappedControlBulkCreatePayload
  /** Create multiple new narratives */
  createBulkNarrative: NarrativeBulkCreatePayload
  /** Create multiple new orgMemberships */
  createBulkOrgMembership: OrgMembershipBulkCreatePayload
  /** Create multiple new organizationSettings */
  createBulkOrganizationSetting: OrganizationSettingBulkCreatePayload
  /** Create multiple new procedures */
  createBulkProcedure: ProcedureBulkCreatePayload
  /** Create multiple new programs */
  createBulkProgram: ProgramBulkCreatePayload
  /** Create multiple new programMemberships */
  createBulkProgramMembership: ProgramMembershipBulkCreatePayload
  /** Create multiple new risks */
  createBulkRisk: RiskBulkCreatePayload
  /** Create multiple new subcontrols */
  createBulkSubcontrol: SubcontrolBulkCreatePayload
  /** Create new subscribers */
  createBulkSubscriber: SubscriberBulkCreatePayload
  /** Create multiple new tasks */
  createBulkTask: TaskBulkCreatePayload
  /** Create multiple new templates */
  createBulkTemplate: TemplateBulkCreatePayload
  /** Create multiple new userSettings */
  createBulkUserSetting: UserSettingBulkCreatePayload
  /** Create a new contact */
  createContact: ContactCreatePayload
  /** Create a new control */
  createControl: ControlCreatePayload
  /** Create a new controlImplementation */
  createControlImplementation: ControlImplementationCreatePayload
  /** Create a new controlObjective */
  createControlObjective: ControlObjectiveCreatePayload
  /** Create a controls with subcontrols */
  createControlWithSubcontrols: ControlCreatePayload
  /** Create a new controls based on existing control ID(s) */
  createControlsByClone: ControlBulkCreatePayload
  /** Create a new documentData */
  createDocumentData: DocumentDataCreatePayload
  /** Create a new entity */
  createEntity: EntityCreatePayload
  /** Create a new entityType */
  createEntityType: EntityTypeCreatePayload
  /** Create a new event */
  createEvent: EventCreatePayload
  /** Create a new evidence */
  createEvidence: EvidenceCreatePayload
  /** Create a new program with options for edges (members, policies, procedures, risks, controls, standard) */
  createFullProgram: ProgramCreatePayload
  /** Create a new group */
  createGroup: GroupCreatePayload
  /** Create a new group with members */
  createGroupByClone: GroupCreatePayload
  /** Create a new groupMembership */
  createGroupMembership: GroupMembershipCreatePayload
  /** Create a new groupSetting */
  createGroupSetting: GroupSettingCreatePayload
  /** Create a new group with members */
  createGroupWithMembers: GroupCreatePayload
  /** Create a new hush */
  createHush: HushCreatePayload
  /** Create a new integration */
  createIntegration: IntegrationCreatePayload
  /** Create a new internalPolicy */
  createInternalPolicy: InternalPolicyCreatePayload
  /** Create a new invite */
  createInvite: InviteCreatePayload
  /** Create a new mappedControl */
  createMappedControl: MappedControlCreatePayload
  /** Create a new narrative */
  createNarrative: NarrativeCreatePayload
  /** Create a new onboarding */
  createOnboarding: OnboardingCreatePayload
  /** Create a new orgMembership */
  createOrgMembership: OrgMembershipCreatePayload
  /** Create a new organization */
  createOrganization: OrganizationCreatePayload
  /** Create a new organizationSetting */
  createOrganizationSetting: OrganizationSettingCreatePayload
  /** Create a new organization with members */
  createOrganizationWithMembers: OrganizationCreatePayload
  /** Create a new personalAccessToken */
  createPersonalAccessToken: PersonalAccessTokenCreatePayload
  /** Create a new procedure */
  createProcedure: ProcedureCreatePayload
  /** Create a new program */
  createProgram: ProgramCreatePayload
  /** Create a new programMembership */
  createProgramMembership: ProgramMembershipCreatePayload
  /** Create a new program with members */
  createProgramWithMembers: ProgramCreatePayload
  /** Create a new risk */
  createRisk: RiskCreatePayload
  /** Create a new standard */
  createStandard: StandardCreatePayload
  /** Create a new subcontrol */
  createSubcontrol: SubcontrolCreatePayload
  /** Create a new subscriber */
  createSubscriber: SubscriberCreatePayload
  /** Create a new tfaSetting */
  createTFASetting: TfaSettingCreatePayload
  /** Create a new task */
  createTask: TaskCreatePayload
  /** Create a new template */
  createTemplate: TemplateCreatePayload
  /** Create a new user */
  createUser: UserCreatePayload
  /** Create a new userSetting */
  createUserSetting: UserSettingCreatePayload
  /** Delete an existing apiToken */
  deleteAPIToken: ApiTokenDeletePayload
  /** Delete an existing actionPlan */
  deleteActionPlan: ActionPlanDeletePayload
  /** Delete an existing contact */
  deleteContact: ContactDeletePayload
  /** Delete an existing control */
  deleteControl: ControlDeletePayload
  /** Delete an existing controlImplementation */
  deleteControlImplementation: ControlImplementationDeletePayload
  /** Delete an existing controlObjective */
  deleteControlObjective: ControlObjectiveDeletePayload
  /** Delete an existing documentData */
  deleteDocumentData: DocumentDataDeletePayload
  /** Delete an existing entity */
  deleteEntity: EntityDeletePayload
  /** Delete an existing entityType */
  deleteEntityType: EntityTypeDeletePayload
  /** Delete an existing event */
  deleteEvent: EventDeletePayload
  /** Delete an existing evidence */
  deleteEvidence: EvidenceDeletePayload
  /** Delete an existing file */
  deleteFile: FileDeletePayload
  /** Delete an existing group */
  deleteGroup: GroupDeletePayload
  /** Delete an existing groupMembership */
  deleteGroupMembership: GroupMembershipDeletePayload
  /** Delete an existing groupSetting */
  deleteGroupSetting: GroupSettingDeletePayload
  /** Delete an existing hush */
  deleteHush: HushDeletePayload
  /** Delete an existing integration */
  deleteIntegration: IntegrationDeletePayload
  /** Delete an existing internalPolicy */
  deleteInternalPolicy: InternalPolicyDeletePayload
  /** Delete an existing invite */
  deleteInvite: InviteDeletePayload
  /** Delete an existing mappedControl */
  deleteMappedControl: MappedControlDeletePayload
  /** Delete an existing narrative */
  deleteNarrative: NarrativeDeletePayload
  /** Delete an existing orgMembership */
  deleteOrgMembership: OrgMembershipDeletePayload
  /** Delete an existing organization */
  deleteOrganization: OrganizationDeletePayload
  /** Delete an existing organizationSetting */
  deleteOrganizationSetting: OrganizationSettingDeletePayload
  /** Delete an existing personalAccessToken */
  deletePersonalAccessToken: PersonalAccessTokenDeletePayload
  /** Delete an existing procedure */
  deleteProcedure: ProcedureDeletePayload
  /** Delete an existing program */
  deleteProgram: ProgramDeletePayload
  /** Delete an existing programMembership */
  deleteProgramMembership: ProgramMembershipDeletePayload
  /** Delete an existing risk */
  deleteRisk: RiskDeletePayload
  /** Delete an existing standard */
  deleteStandard: StandardDeletePayload
  /** Delete an existing subcontrol */
  deleteSubcontrol: SubcontrolDeletePayload
  /** Delete an existing subscriber by Email */
  deleteSubscriber: SubscriberDeletePayload
  /** Delete an existing task */
  deleteTask: TaskDeletePayload
  /** Delete an existing template */
  deleteTemplate: TemplateDeletePayload
  /** Delete an existing user */
  deleteUser: UserDeletePayload
  /** Update an existing apiToken */
  updateAPIToken: ApiTokenUpdatePayload
  /** Update an existing actionPlan */
  updateActionPlan: ActionPlanUpdatePayload
  /** Update an existing contact */
  updateContact: ContactUpdatePayload
  /** Update an existing control */
  updateControl: ControlUpdatePayload
  /** Update an existing controlImplementation */
  updateControlImplementation: ControlImplementationUpdatePayload
  /** Update an existing controlObjective */
  updateControlObjective: ControlObjectiveUpdatePayload
  /** Update an existing documentData */
  updateDocumentData: DocumentDataUpdatePayload
  /** Update an existing entity */
  updateEntity: EntityUpdatePayload
  /** Update an existing entityType */
  updateEntityType: EntityTypeUpdatePayload
  /** Update an existing event */
  updateEvent: EventUpdatePayload
  /** Update an existing evidence */
  updateEvidence: EvidenceUpdatePayload
  /** Update an existing group */
  updateGroup: GroupUpdatePayload
  /** Update an existing groupMembership */
  updateGroupMembership: GroupMembershipUpdatePayload
  /** Update an existing groupSetting */
  updateGroupSetting: GroupSettingUpdatePayload
  /** Update an existing hush */
  updateHush: HushUpdatePayload
  /** Update an existing integration */
  updateIntegration: IntegrationUpdatePayload
  /** Update an existing internalPolicy */
  updateInternalPolicy: InternalPolicyUpdatePayload
  /** Update an existing invite */
  updateInvite: InviteUpdatePayload
  /** Update an existing mappedControl */
  updateMappedControl: MappedControlUpdatePayload
  /** Update an existing narrative */
  updateNarrative: NarrativeUpdatePayload
  /** Update an existing orgMembership */
  updateOrgMembership: OrgMembershipUpdatePayload
  /** Update an existing organization */
  updateOrganization: OrganizationUpdatePayload
  /** Update an existing organizationSetting */
  updateOrganizationSetting: OrganizationSettingUpdatePayload
  /** Update an existing personalAccessToken */
  updatePersonalAccessToken: PersonalAccessTokenUpdatePayload
  /** Update an existing procedure */
  updateProcedure: ProcedureUpdatePayload
  /** Update an existing program */
  updateProgram: ProgramUpdatePayload
  /** Update an existing programMembership */
  updateProgramMembership: ProgramMembershipUpdatePayload
  /** Update an existing risk */
  updateRisk: RiskUpdatePayload
  /** Update an existing standard */
  updateStandard: StandardUpdatePayload
  /** Update an existing subcontrol */
  updateSubcontrol: SubcontrolUpdatePayload
  /** Update an existing subscriber */
  updateSubscriber: SubscriberUpdatePayload
  /** Update an existing tfaSetting */
  updateTFASetting: TfaSettingUpdatePayload
  /** Update an existing task */
  updateTask: TaskUpdatePayload
  /** Update an existing task comment */
  updateTaskComment: TaskUpdatePayload
  /** Update an existing template */
  updateTemplate: TemplateUpdatePayload
  /** Update an existing user */
  updateUser: UserUpdatePayload
  /** Update an existing userSetting */
  updateUserSetting: UserSettingUpdatePayload
}

export interface MutationCreateApiTokenArgs {
  input: CreateApiTokenInput
}

export interface MutationCreateActionPlanArgs {
  input: CreateActionPlanInput
}

export interface MutationCreateBulkApiTokenArgs {
  input?: InputMaybe<Array<CreateApiTokenInput>>
}

export interface MutationCreateBulkActionPlanArgs {
  input?: InputMaybe<Array<CreateActionPlanInput>>
}

export interface MutationCreateBulkCsvapiTokenArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvActionPlanArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvContactArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvControlArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvControlImplementationArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvControlObjectiveArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvDocumentDataArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvEntityArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvEntityTypeArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvEventArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvGroupArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvGroupMembershipArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvGroupSettingArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvHushArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvIntegrationArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvInternalPolicyArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvInviteArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvMappedControlArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvNarrativeArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvOrgMembershipArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvOrganizationSettingArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvProcedureArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvProgramArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvProgramMembershipArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvRiskArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvSubcontrolArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvSubscriberArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvTaskArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvTemplateArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkCsvUserSettingArgs {
  input: Scalars['Upload']['input']
}

export interface MutationCreateBulkContactArgs {
  input?: InputMaybe<Array<CreateContactInput>>
}

export interface MutationCreateBulkControlArgs {
  input?: InputMaybe<Array<CreateControlInput>>
}

export interface MutationCreateBulkControlImplementationArgs {
  input?: InputMaybe<Array<CreateControlImplementationInput>>
}

export interface MutationCreateBulkControlObjectiveArgs {
  input?: InputMaybe<Array<CreateControlObjectiveInput>>
}

export interface MutationCreateBulkDocumentDataArgs {
  input?: InputMaybe<Array<CreateDocumentDataInput>>
}

export interface MutationCreateBulkEntityArgs {
  input?: InputMaybe<Array<CreateEntityInput>>
}

export interface MutationCreateBulkEntityTypeArgs {
  input?: InputMaybe<Array<CreateEntityTypeInput>>
}

export interface MutationCreateBulkEventArgs {
  input?: InputMaybe<Array<CreateEventInput>>
}

export interface MutationCreateBulkGroupArgs {
  input?: InputMaybe<Array<CreateGroupInput>>
}

export interface MutationCreateBulkGroupMembershipArgs {
  input?: InputMaybe<Array<CreateGroupMembershipInput>>
}

export interface MutationCreateBulkGroupSettingArgs {
  input?: InputMaybe<Array<CreateGroupSettingInput>>
}

export interface MutationCreateBulkHushArgs {
  input?: InputMaybe<Array<CreateHushInput>>
}

export interface MutationCreateBulkIntegrationArgs {
  input?: InputMaybe<Array<CreateIntegrationInput>>
}

export interface MutationCreateBulkInternalPolicyArgs {
  input?: InputMaybe<Array<CreateInternalPolicyInput>>
}

export interface MutationCreateBulkInviteArgs {
  input?: InputMaybe<Array<CreateInviteInput>>
}

export interface MutationCreateBulkMappedControlArgs {
  input?: InputMaybe<Array<CreateMappedControlInput>>
}

export interface MutationCreateBulkNarrativeArgs {
  input?: InputMaybe<Array<CreateNarrativeInput>>
}

export interface MutationCreateBulkOrgMembershipArgs {
  input?: InputMaybe<Array<CreateOrgMembershipInput>>
}

export interface MutationCreateBulkOrganizationSettingArgs {
  input?: InputMaybe<Array<CreateOrganizationSettingInput>>
}

export interface MutationCreateBulkProcedureArgs {
  input?: InputMaybe<Array<CreateProcedureInput>>
}

export interface MutationCreateBulkProgramArgs {
  input?: InputMaybe<Array<CreateProgramInput>>
}

export interface MutationCreateBulkProgramMembershipArgs {
  input?: InputMaybe<Array<CreateProgramMembershipInput>>
}

export interface MutationCreateBulkRiskArgs {
  input?: InputMaybe<Array<CreateRiskInput>>
}

export interface MutationCreateBulkSubcontrolArgs {
  input?: InputMaybe<Array<CreateSubcontrolInput>>
}

export interface MutationCreateBulkSubscriberArgs {
  input?: InputMaybe<Array<CreateSubscriberInput>>
}

export interface MutationCreateBulkTaskArgs {
  input?: InputMaybe<Array<CreateTaskInput>>
}

export interface MutationCreateBulkTemplateArgs {
  input?: InputMaybe<Array<CreateTemplateInput>>
}

export interface MutationCreateBulkUserSettingArgs {
  input?: InputMaybe<Array<CreateUserSettingInput>>
}

export interface MutationCreateContactArgs {
  input: CreateContactInput
}

export interface MutationCreateControlArgs {
  input: CreateControlInput
}

export interface MutationCreateControlImplementationArgs {
  input: CreateControlImplementationInput
}

export interface MutationCreateControlObjectiveArgs {
  input: CreateControlObjectiveInput
}

export interface MutationCreateControlWithSubcontrolsArgs {
  input: CreateControlWithSubcontrolsInput
}

export interface MutationCreateControlsByCloneArgs {
  input?: InputMaybe<CloneControlInput>
}

export interface MutationCreateDocumentDataArgs {
  input: CreateDocumentDataInput
}

export interface MutationCreateEntityArgs {
  input: CreateEntityInput
}

export interface MutationCreateEntityTypeArgs {
  input: CreateEntityTypeInput
}

export interface MutationCreateEventArgs {
  input: CreateEventInput
}

export interface MutationCreateEvidenceArgs {
  evidenceFiles?: InputMaybe<Array<Scalars['Upload']['input']>>
  input: CreateEvidenceInput
}

export interface MutationCreateFullProgramArgs {
  input: CreateFullProgramInput
}

export interface MutationCreateGroupArgs {
  input: CreateGroupInput
}

export interface MutationCreateGroupByCloneArgs {
  cloneGroupMembers?: InputMaybe<Scalars['ID']['input']>
  groupInput: CreateGroupInput
  inheritGroupPermissions?: InputMaybe<Scalars['ID']['input']>
  members?: InputMaybe<Array<GroupMembersInput>>
}

export interface MutationCreateGroupMembershipArgs {
  input: CreateGroupMembershipInput
}

export interface MutationCreateGroupSettingArgs {
  input: CreateGroupSettingInput
}

export interface MutationCreateGroupWithMembersArgs {
  groupInput: CreateGroupInput
  members?: InputMaybe<Array<GroupMembersInput>>
}

export interface MutationCreateHushArgs {
  input: CreateHushInput
}

export interface MutationCreateIntegrationArgs {
  input: CreateIntegrationInput
}

export interface MutationCreateInternalPolicyArgs {
  input: CreateInternalPolicyInput
}

export interface MutationCreateInviteArgs {
  input: CreateInviteInput
}

export interface MutationCreateMappedControlArgs {
  input: CreateMappedControlInput
}

export interface MutationCreateNarrativeArgs {
  input: CreateNarrativeInput
}

export interface MutationCreateOnboardingArgs {
  input: CreateOnboardingInput
}

export interface MutationCreateOrgMembershipArgs {
  input: CreateOrgMembershipInput
}

export interface MutationCreateOrganizationArgs {
  avatarFile?: InputMaybe<Scalars['Upload']['input']>
  input: CreateOrganizationInput
}

export interface MutationCreateOrganizationSettingArgs {
  input: CreateOrganizationSettingInput
}

export interface MutationCreateOrganizationWithMembersArgs {
  avatarFile?: InputMaybe<Scalars['Upload']['input']>
  members?: InputMaybe<Array<OrgMembersInput>>
  organizationInput: CreateOrganizationInput
}

export interface MutationCreatePersonalAccessTokenArgs {
  input: CreatePersonalAccessTokenInput
}

export interface MutationCreateProcedureArgs {
  input: CreateProcedureInput
}

export interface MutationCreateProgramArgs {
  input: CreateProgramInput
}

export interface MutationCreateProgramMembershipArgs {
  input: CreateProgramMembershipInput
}

export interface MutationCreateProgramWithMembersArgs {
  input: CreateProgramWithMembersInput
}

export interface MutationCreateRiskArgs {
  input: CreateRiskInput
}

export interface MutationCreateStandardArgs {
  input: CreateStandardInput
}

export interface MutationCreateSubcontrolArgs {
  input: CreateSubcontrolInput
}

export interface MutationCreateSubscriberArgs {
  input: CreateSubscriberInput
}

export interface MutationCreateTfaSettingArgs {
  input: CreateTfaSettingInput
}

export interface MutationCreateTaskArgs {
  input: CreateTaskInput
}

export interface MutationCreateTemplateArgs {
  input: CreateTemplateInput
}

export interface MutationCreateUserArgs {
  avatarFile?: InputMaybe<Scalars['Upload']['input']>
  input: CreateUserInput
}

export interface MutationCreateUserSettingArgs {
  input: CreateUserSettingInput
}

export interface MutationDeleteApiTokenArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteActionPlanArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteContactArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteControlArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteControlImplementationArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteControlObjectiveArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteDocumentDataArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteEntityArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteEntityTypeArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteEventArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteEvidenceArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteFileArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteGroupArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteGroupMembershipArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteGroupSettingArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteHushArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteIntegrationArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteInternalPolicyArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteInviteArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteMappedControlArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteNarrativeArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteOrgMembershipArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteOrganizationArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteOrganizationSettingArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeletePersonalAccessTokenArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteProcedureArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteProgramArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteProgramMembershipArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteRiskArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteStandardArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteSubcontrolArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteSubscriberArgs {
  email: Scalars['String']['input']
  ownerID?: InputMaybe<Scalars['ID']['input']>
}

export interface MutationDeleteTaskArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteTemplateArgs {
  id: Scalars['ID']['input']
}

export interface MutationDeleteUserArgs {
  id: Scalars['ID']['input']
}

export interface MutationUpdateApiTokenArgs {
  id: Scalars['ID']['input']
  input: UpdateApiTokenInput
}

export interface MutationUpdateActionPlanArgs {
  id: Scalars['ID']['input']
  input: UpdateActionPlanInput
}

export interface MutationUpdateContactArgs {
  id: Scalars['ID']['input']
  input: UpdateContactInput
}

export interface MutationUpdateControlArgs {
  id: Scalars['ID']['input']
  input: UpdateControlInput
}

export interface MutationUpdateControlImplementationArgs {
  id: Scalars['ID']['input']
  input: UpdateControlImplementationInput
}

export interface MutationUpdateControlObjectiveArgs {
  id: Scalars['ID']['input']
  input: UpdateControlObjectiveInput
}

export interface MutationUpdateDocumentDataArgs {
  id: Scalars['ID']['input']
  input: UpdateDocumentDataInput
}

export interface MutationUpdateEntityArgs {
  id: Scalars['ID']['input']
  input: UpdateEntityInput
}

export interface MutationUpdateEntityTypeArgs {
  id: Scalars['ID']['input']
  input: UpdateEntityTypeInput
}

export interface MutationUpdateEventArgs {
  id: Scalars['ID']['input']
  input: UpdateEventInput
}

export interface MutationUpdateEvidenceArgs {
  evidenceFiles?: InputMaybe<Array<Scalars['Upload']['input']>>
  id: Scalars['ID']['input']
  input: UpdateEvidenceInput
}

export interface MutationUpdateGroupArgs {
  id: Scalars['ID']['input']
  input: UpdateGroupInput
}

export interface MutationUpdateGroupMembershipArgs {
  id: Scalars['ID']['input']
  input: UpdateGroupMembershipInput
}

export interface MutationUpdateGroupSettingArgs {
  id: Scalars['ID']['input']
  input: UpdateGroupSettingInput
}

export interface MutationUpdateHushArgs {
  id: Scalars['ID']['input']
  input: UpdateHushInput
}

export interface MutationUpdateIntegrationArgs {
  id: Scalars['ID']['input']
  input: UpdateIntegrationInput
}

export interface MutationUpdateInternalPolicyArgs {
  id: Scalars['ID']['input']
  input: UpdateInternalPolicyInput
}

export interface MutationUpdateInviteArgs {
  id: Scalars['ID']['input']
  input: UpdateInviteInput
}

export interface MutationUpdateMappedControlArgs {
  id: Scalars['ID']['input']
  input: UpdateMappedControlInput
}

export interface MutationUpdateNarrativeArgs {
  id: Scalars['ID']['input']
  input: UpdateNarrativeInput
}

export interface MutationUpdateOrgMembershipArgs {
  id: Scalars['ID']['input']
  input: UpdateOrgMembershipInput
}

export interface MutationUpdateOrganizationArgs {
  avatarFile?: InputMaybe<Scalars['Upload']['input']>
  id: Scalars['ID']['input']
  input: UpdateOrganizationInput
}

export interface MutationUpdateOrganizationSettingArgs {
  id: Scalars['ID']['input']
  input: UpdateOrganizationSettingInput
}

export interface MutationUpdatePersonalAccessTokenArgs {
  id: Scalars['ID']['input']
  input: UpdatePersonalAccessTokenInput
}

export interface MutationUpdateProcedureArgs {
  id: Scalars['ID']['input']
  input: UpdateProcedureInput
}

export interface MutationUpdateProgramArgs {
  id: Scalars['ID']['input']
  input: UpdateProgramInput
}

export interface MutationUpdateProgramMembershipArgs {
  id: Scalars['ID']['input']
  input: UpdateProgramMembershipInput
}

export interface MutationUpdateRiskArgs {
  id: Scalars['ID']['input']
  input: UpdateRiskInput
}

export interface MutationUpdateStandardArgs {
  id: Scalars['ID']['input']
  input: UpdateStandardInput
}

export interface MutationUpdateSubcontrolArgs {
  id: Scalars['ID']['input']
  input: UpdateSubcontrolInput
}

export interface MutationUpdateSubscriberArgs {
  email: Scalars['String']['input']
  input: UpdateSubscriberInput
}

export interface MutationUpdateTfaSettingArgs {
  input: UpdateTfaSettingInput
}

export interface MutationUpdateTaskArgs {
  id: Scalars['ID']['input']
  input: UpdateTaskInput
}

export interface MutationUpdateTaskCommentArgs {
  id: Scalars['ID']['input']
  input: UpdateNoteInput
}

export interface MutationUpdateTemplateArgs {
  id: Scalars['ID']['input']
  input: UpdateTemplateInput
}

export interface MutationUpdateUserArgs {
  avatarFile?: InputMaybe<Scalars['Upload']['input']>
  id: Scalars['ID']['input']
  input: UpdateUserInput
}

export interface MutationUpdateUserSettingArgs {
  id: Scalars['ID']['input']
  input: UpdateUserSettingInput
}

export interface Narrative extends Node {
  __typename?: 'Narrative'
  /** groups that are blocked from viewing or editing the risk */
  blockedGroups?: Maybe<Array<Group>>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** the description of the narrative */
  description?: Maybe<Scalars['String']['output']>
  /** text data for the narrative document */
  details?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  /** provides edit access to the risk to members of the group */
  editors?: Maybe<Array<Group>>
  id: Scalars['ID']['output']
  /** the name of the narrative */
  name: Scalars['String']['output']
  owner?: Maybe<Organization>
  /** the ID of the organization owner of the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  programs: ProgramConnection
  satisfies: ControlConnection
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  /** provides view access to the risk to members of the group */
  viewers?: Maybe<Array<Group>>
}

export interface NarrativeProgramsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProgramOrder>>
  where?: InputMaybe<ProgramWhereInput>
}

export interface NarrativeSatisfiesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlOrder>>
  where?: InputMaybe<ControlWhereInput>
}

/** Return response for createBulkNarrative mutation */
export interface NarrativeBulkCreatePayload {
  __typename?: 'NarrativeBulkCreatePayload'
  /** Created narratives */
  narratives?: Maybe<Array<Narrative>>
}

/** A connection to a list of items. */
export interface NarrativeConnection {
  __typename?: 'NarrativeConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<NarrativeEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createNarrative mutation */
export interface NarrativeCreatePayload {
  __typename?: 'NarrativeCreatePayload'
  /** Created narrative */
  narrative: Narrative
}

/** Return response for deleteNarrative mutation */
export interface NarrativeDeletePayload {
  __typename?: 'NarrativeDeletePayload'
  /** Deleted narrative ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface NarrativeEdge {
  __typename?: 'NarrativeEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<Narrative>
}

export interface NarrativeHistory extends Node {
  __typename?: 'NarrativeHistory'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** the description of the narrative */
  description?: Maybe<Scalars['String']['output']>
  /** text data for the narrative document */
  details?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** the name of the narrative */
  name: Scalars['String']['output']
  operation: NarrativeHistoryOpType
  /** the ID of the organization owner of the object */
  ownerID?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface NarrativeHistoryConnection {
  __typename?: 'NarrativeHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<NarrativeHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface NarrativeHistoryEdge {
  __typename?: 'NarrativeHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<NarrativeHistory>
}

/** NarrativeHistoryOpType is enum for the field operation */
export enum NarrativeHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for NarrativeHistory connections */
export interface NarrativeHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order NarrativeHistories. */
  field: NarrativeHistoryOrderField
}

/** Properties by which NarrativeHistory connections can be ordered. */
export enum NarrativeHistoryOrderField {
  created_at = 'created_at',
  name = 'name',
  updated_at = 'updated_at',
}

/**
 * NarrativeHistoryWhereInput is used for filtering NarrativeHistory objects.
 * Input was generated by ent.
 */
export interface NarrativeHistoryWhereInput {
  and?: InputMaybe<Array<NarrativeHistoryWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>
  descriptionContains?: InputMaybe<Scalars['String']['input']>
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>
  descriptionGT?: InputMaybe<Scalars['String']['input']>
  descriptionGTE?: InputMaybe<Scalars['String']['input']>
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  descriptionLT?: InputMaybe<Scalars['String']['input']>
  descriptionLTE?: InputMaybe<Scalars['String']['input']>
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** details field predicates */
  details?: InputMaybe<Scalars['String']['input']>
  detailsContains?: InputMaybe<Scalars['String']['input']>
  detailsContainsFold?: InputMaybe<Scalars['String']['input']>
  detailsEqualFold?: InputMaybe<Scalars['String']['input']>
  detailsGT?: InputMaybe<Scalars['String']['input']>
  detailsGTE?: InputMaybe<Scalars['String']['input']>
  detailsHasPrefix?: InputMaybe<Scalars['String']['input']>
  detailsHasSuffix?: InputMaybe<Scalars['String']['input']>
  detailsIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsIsNil?: InputMaybe<Scalars['Boolean']['input']>
  detailsLT?: InputMaybe<Scalars['String']['input']>
  detailsLTE?: InputMaybe<Scalars['String']['input']>
  detailsNEQ?: InputMaybe<Scalars['String']['input']>
  detailsNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<NarrativeHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<NarrativeHistoryOpType>
  operationIn?: InputMaybe<Array<NarrativeHistoryOpType>>
  operationNEQ?: InputMaybe<NarrativeHistoryOpType>
  operationNotIn?: InputMaybe<Array<NarrativeHistoryOpType>>
  or?: InputMaybe<Array<NarrativeHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for Narrative connections */
export interface NarrativeOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Narratives. */
  field: NarrativeOrderField
}

/** Properties by which Narrative connections can be ordered. */
export enum NarrativeOrderField {
  created_at = 'created_at',
  name = 'name',
  updated_at = 'updated_at',
}

export interface NarrativeSearchResult {
  __typename?: 'NarrativeSearchResult'
  narratives?: Maybe<Array<Narrative>>
}

/** Return response for updateNarrative mutation */
export interface NarrativeUpdatePayload {
  __typename?: 'NarrativeUpdatePayload'
  /** Updated narrative */
  narrative: Narrative
}

/**
 * NarrativeWhereInput is used for filtering Narrative objects.
 * Input was generated by ent.
 */
export interface NarrativeWhereInput {
  and?: InputMaybe<Array<NarrativeWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>
  descriptionContains?: InputMaybe<Scalars['String']['input']>
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>
  descriptionGT?: InputMaybe<Scalars['String']['input']>
  descriptionGTE?: InputMaybe<Scalars['String']['input']>
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  descriptionLT?: InputMaybe<Scalars['String']['input']>
  descriptionLTE?: InputMaybe<Scalars['String']['input']>
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** details field predicates */
  details?: InputMaybe<Scalars['String']['input']>
  detailsContains?: InputMaybe<Scalars['String']['input']>
  detailsContainsFold?: InputMaybe<Scalars['String']['input']>
  detailsEqualFold?: InputMaybe<Scalars['String']['input']>
  detailsGT?: InputMaybe<Scalars['String']['input']>
  detailsGTE?: InputMaybe<Scalars['String']['input']>
  detailsHasPrefix?: InputMaybe<Scalars['String']['input']>
  detailsHasSuffix?: InputMaybe<Scalars['String']['input']>
  detailsIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsIsNil?: InputMaybe<Scalars['Boolean']['input']>
  detailsLT?: InputMaybe<Scalars['String']['input']>
  detailsLTE?: InputMaybe<Scalars['String']['input']>
  detailsNEQ?: InputMaybe<Scalars['String']['input']>
  detailsNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** blocked_groups edge predicates */
  hasBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  hasBlockedGroupsWith?: InputMaybe<Array<GroupWhereInput>>
  /** editors edge predicates */
  hasEditors?: InputMaybe<Scalars['Boolean']['input']>
  hasEditorsWith?: InputMaybe<Array<GroupWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>
  /** satisfies edge predicates */
  hasSatisfies?: InputMaybe<Scalars['Boolean']['input']>
  hasSatisfiesWith?: InputMaybe<Array<ControlWhereInput>>
  /** viewers edge predicates */
  hasViewers?: InputMaybe<Scalars['Boolean']['input']>
  hasViewersWith?: InputMaybe<Array<GroupWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<NarrativeWhereInput>
  or?: InputMaybe<Array<NarrativeWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/**
 * An object with an ID.
 * Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
 */
export interface Node {
  /** The id of the object. */
  id: Scalars['ID']['output']
}

export interface Note extends Node {
  __typename?: 'Note'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  files: FileConnection
  id: Scalars['ID']['output']
  owner?: Maybe<Organization>
  /** the ID of the organization owner of the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  task?: Maybe<Task>
  /** the text of the note */
  text: Scalars['String']['output']
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

export interface NoteFilesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<FileOrder>>
  where?: InputMaybe<FileWhereInput>
}

/** A connection to a list of items. */
export interface NoteConnection {
  __typename?: 'NoteConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<NoteEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface NoteEdge {
  __typename?: 'NoteEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<Note>
}

export interface NoteHistory extends Node {
  __typename?: 'NoteHistory'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  operation: NoteHistoryOpType
  /** the ID of the organization owner of the object */
  ownerID?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** the text of the note */
  text: Scalars['String']['output']
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface NoteHistoryConnection {
  __typename?: 'NoteHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<NoteHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface NoteHistoryEdge {
  __typename?: 'NoteHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<NoteHistory>
}

/** NoteHistoryOpType is enum for the field operation */
export enum NoteHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for NoteHistory connections */
export interface NoteHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order NoteHistories. */
  field: NoteHistoryOrderField
}

/** Properties by which NoteHistory connections can be ordered. */
export enum NoteHistoryOrderField {
  created_at = 'created_at',
  updated_at = 'updated_at',
}

/**
 * NoteHistoryWhereInput is used for filtering NoteHistory objects.
 * Input was generated by ent.
 */
export interface NoteHistoryWhereInput {
  and?: InputMaybe<Array<NoteHistoryWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<NoteHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<NoteHistoryOpType>
  operationIn?: InputMaybe<Array<NoteHistoryOpType>>
  operationNEQ?: InputMaybe<NoteHistoryOpType>
  operationNotIn?: InputMaybe<Array<NoteHistoryOpType>>
  or?: InputMaybe<Array<NoteHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** text field predicates */
  text?: InputMaybe<Scalars['String']['input']>
  textContains?: InputMaybe<Scalars['String']['input']>
  textContainsFold?: InputMaybe<Scalars['String']['input']>
  textEqualFold?: InputMaybe<Scalars['String']['input']>
  textGT?: InputMaybe<Scalars['String']['input']>
  textGTE?: InputMaybe<Scalars['String']['input']>
  textHasPrefix?: InputMaybe<Scalars['String']['input']>
  textHasSuffix?: InputMaybe<Scalars['String']['input']>
  textIn?: InputMaybe<Array<Scalars['String']['input']>>
  textLT?: InputMaybe<Scalars['String']['input']>
  textLTE?: InputMaybe<Scalars['String']['input']>
  textNEQ?: InputMaybe<Scalars['String']['input']>
  textNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for Note connections */
export interface NoteOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Notes. */
  field: NoteOrderField
}

/** Properties by which Note connections can be ordered. */
export enum NoteOrderField {
  created_at = 'created_at',
  updated_at = 'updated_at',
}

/**
 * NoteWhereInput is used for filtering Note objects.
 * Input was generated by ent.
 */
export interface NoteWhereInput {
  and?: InputMaybe<Array<NoteWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** task edge predicates */
  hasTask?: InputMaybe<Scalars['Boolean']['input']>
  hasTaskWith?: InputMaybe<Array<TaskWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<NoteWhereInput>
  or?: InputMaybe<Array<NoteWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** text field predicates */
  text?: InputMaybe<Scalars['String']['input']>
  textContains?: InputMaybe<Scalars['String']['input']>
  textContainsFold?: InputMaybe<Scalars['String']['input']>
  textEqualFold?: InputMaybe<Scalars['String']['input']>
  textGT?: InputMaybe<Scalars['String']['input']>
  textGTE?: InputMaybe<Scalars['String']['input']>
  textHasPrefix?: InputMaybe<Scalars['String']['input']>
  textHasSuffix?: InputMaybe<Scalars['String']['input']>
  textIn?: InputMaybe<Array<Scalars['String']['input']>>
  textLT?: InputMaybe<Scalars['String']['input']>
  textLTE?: InputMaybe<Scalars['String']['input']>
  textNEQ?: InputMaybe<Scalars['String']['input']>
  textNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface Onboarding extends Node {
  __typename?: 'Onboarding'
  /** details given about the company during the onboarding process, including things such as company size, sector, etc */
  companyDetails?: Maybe<Scalars['Map']['output']>
  /** name of the company */
  companyName: Scalars['String']['output']
  /** details given about the compliance requirements during the onboarding process, such as coming with existing policies, controls, risk assessments, etc */
  compliance?: Maybe<Scalars['Map']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** domains associated with the company */
  domains?: Maybe<Array<Scalars['String']['output']>>
  id: Scalars['ID']['output']
  organization?: Maybe<Organization>
  organizationID?: Maybe<Scalars['ID']['output']>
  /** details given about the user during the onboarding process, including things such as name, job title, department, etc */
  userDetails?: Maybe<Scalars['Map']['output']>
}

/** Return response for createOnboarding mutation */
export interface OnboardingCreatePayload {
  __typename?: 'OnboardingCreatePayload'
  /** Created onboarding */
  onboarding: Onboarding
}

/**
 * OnboardingWhereInput is used for filtering Onboarding objects.
 * Input was generated by ent.
 */
export interface OnboardingWhereInput {
  and?: InputMaybe<Array<OnboardingWhereInput>>
  /** company_name field predicates */
  companyName?: InputMaybe<Scalars['String']['input']>
  companyNameContains?: InputMaybe<Scalars['String']['input']>
  companyNameContainsFold?: InputMaybe<Scalars['String']['input']>
  companyNameEqualFold?: InputMaybe<Scalars['String']['input']>
  companyNameGT?: InputMaybe<Scalars['String']['input']>
  companyNameGTE?: InputMaybe<Scalars['String']['input']>
  companyNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  companyNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  companyNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  companyNameLT?: InputMaybe<Scalars['String']['input']>
  companyNameLTE?: InputMaybe<Scalars['String']['input']>
  companyNameNEQ?: InputMaybe<Scalars['String']['input']>
  companyNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** organization edge predicates */
  hasOrganization?: InputMaybe<Scalars['Boolean']['input']>
  hasOrganizationWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<OnboardingWhereInput>
  or?: InputMaybe<Array<OnboardingWhereInput>>
  /** organization_id field predicates */
  organizationID?: InputMaybe<Scalars['ID']['input']>
  organizationIDContains?: InputMaybe<Scalars['ID']['input']>
  organizationIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  organizationIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  organizationIDGT?: InputMaybe<Scalars['ID']['input']>
  organizationIDGTE?: InputMaybe<Scalars['ID']['input']>
  organizationIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  organizationIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  organizationIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  organizationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  organizationIDLT?: InputMaybe<Scalars['ID']['input']>
  organizationIDLTE?: InputMaybe<Scalars['ID']['input']>
  organizationIDNEQ?: InputMaybe<Scalars['ID']['input']>
  organizationIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  organizationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Possible directions in which to order a list of items when provided an `orderBy` argument. */
export enum OrderDirection {
  /** Specifies an ascending order for a given `orderBy` argument. */
  ASC = 'ASC',
  /** Specifies a descending order for a given `orderBy` argument. */
  DESC = 'DESC',
}

/**
 * OrgMembersInput is used to create members for a organization
 * along with the org creation
 */
export interface OrgMembersInput {
  role?: InputMaybe<OrgMembershipRole>
  userID: Scalars['ID']['input']
}

export interface OrgMembership extends Node {
  __typename?: 'OrgMembership'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  events: EventConnection
  id: Scalars['ID']['output']
  organization: Organization
  organizationID: Scalars['ID']['output']
  role: OrgMembershipRole
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  user: User
  userID: Scalars['ID']['output']
}

export interface OrgMembershipEventsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EventOrder>>
  where?: InputMaybe<EventWhereInput>
}

/** Return response for createBulkOrgMembership mutation */
export interface OrgMembershipBulkCreatePayload {
  __typename?: 'OrgMembershipBulkCreatePayload'
  /** Created orgMemberships */
  orgMemberships?: Maybe<Array<OrgMembership>>
}

/** A connection to a list of items. */
export interface OrgMembershipConnection {
  __typename?: 'OrgMembershipConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<OrgMembershipEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createOrgMembership mutation */
export interface OrgMembershipCreatePayload {
  __typename?: 'OrgMembershipCreatePayload'
  /** Created orgMembership */
  orgMembership: OrgMembership
}

/** Return response for deleteOrgMembership mutation */
export interface OrgMembershipDeletePayload {
  __typename?: 'OrgMembershipDeletePayload'
  /** Deleted orgMembership ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface OrgMembershipEdge {
  __typename?: 'OrgMembershipEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<OrgMembership>
}

export interface OrgMembershipHistory extends Node {
  __typename?: 'OrgMembershipHistory'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  operation: OrgMembershipHistoryOpType
  organizationID: Scalars['String']['output']
  ref?: Maybe<Scalars['String']['output']>
  role: OrgMembershipHistoryRole
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  userID: Scalars['String']['output']
}

/** A connection to a list of items. */
export interface OrgMembershipHistoryConnection {
  __typename?: 'OrgMembershipHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<OrgMembershipHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface OrgMembershipHistoryEdge {
  __typename?: 'OrgMembershipHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<OrgMembershipHistory>
}

/** OrgMembershipHistoryOpType is enum for the field operation */
export enum OrgMembershipHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for OrgMembershipHistory connections */
export interface OrgMembershipHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order OrgMembershipHistories. */
  field: OrgMembershipHistoryOrderField
}

/** Properties by which OrgMembershipHistory connections can be ordered. */
export enum OrgMembershipHistoryOrderField {
  ROLE = 'ROLE',
  created_at = 'created_at',
  updated_at = 'updated_at',
}

/** OrgMembershipHistoryRole is enum for the field role */
export enum OrgMembershipHistoryRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER',
  OWNER = 'OWNER',
}

/**
 * OrgMembershipHistoryWhereInput is used for filtering OrgMembershipHistory objects.
 * Input was generated by ent.
 */
export interface OrgMembershipHistoryWhereInput {
  and?: InputMaybe<Array<OrgMembershipHistoryWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<OrgMembershipHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<OrgMembershipHistoryOpType>
  operationIn?: InputMaybe<Array<OrgMembershipHistoryOpType>>
  operationNEQ?: InputMaybe<OrgMembershipHistoryOpType>
  operationNotIn?: InputMaybe<Array<OrgMembershipHistoryOpType>>
  or?: InputMaybe<Array<OrgMembershipHistoryWhereInput>>
  /** organization_id field predicates */
  organizationID?: InputMaybe<Scalars['String']['input']>
  organizationIDContains?: InputMaybe<Scalars['String']['input']>
  organizationIDContainsFold?: InputMaybe<Scalars['String']['input']>
  organizationIDEqualFold?: InputMaybe<Scalars['String']['input']>
  organizationIDGT?: InputMaybe<Scalars['String']['input']>
  organizationIDGTE?: InputMaybe<Scalars['String']['input']>
  organizationIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  organizationIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  organizationIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  organizationIDLT?: InputMaybe<Scalars['String']['input']>
  organizationIDLTE?: InputMaybe<Scalars['String']['input']>
  organizationIDNEQ?: InputMaybe<Scalars['String']['input']>
  organizationIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** role field predicates */
  role?: InputMaybe<OrgMembershipHistoryRole>
  roleIn?: InputMaybe<Array<OrgMembershipHistoryRole>>
  roleNEQ?: InputMaybe<OrgMembershipHistoryRole>
  roleNotIn?: InputMaybe<Array<OrgMembershipHistoryRole>>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** user_id field predicates */
  userID?: InputMaybe<Scalars['String']['input']>
  userIDContains?: InputMaybe<Scalars['String']['input']>
  userIDContainsFold?: InputMaybe<Scalars['String']['input']>
  userIDEqualFold?: InputMaybe<Scalars['String']['input']>
  userIDGT?: InputMaybe<Scalars['String']['input']>
  userIDGTE?: InputMaybe<Scalars['String']['input']>
  userIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  userIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  userIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  userIDLT?: InputMaybe<Scalars['String']['input']>
  userIDLTE?: InputMaybe<Scalars['String']['input']>
  userIDNEQ?: InputMaybe<Scalars['String']['input']>
  userIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
}

/** Ordering options for OrgMembership connections */
export interface OrgMembershipOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order OrgMemberships. */
  field: OrgMembershipOrderField
}

/** Properties by which OrgMembership connections can be ordered. */
export enum OrgMembershipOrderField {
  ROLE = 'ROLE',
  created_at = 'created_at',
  updated_at = 'updated_at',
}

/** OrgMembershipRole is enum for the field role */
export enum OrgMembershipRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER',
  OWNER = 'OWNER',
}

/** Return response for updateOrgMembership mutation */
export interface OrgMembershipUpdatePayload {
  __typename?: 'OrgMembershipUpdatePayload'
  /** Updated orgMembership */
  orgMembership: OrgMembership
}

/**
 * OrgMembershipWhereInput is used for filtering OrgMembership objects.
 * Input was generated by ent.
 */
export interface OrgMembershipWhereInput {
  and?: InputMaybe<Array<OrgMembershipWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<OrgMembershipWhereInput>
  or?: InputMaybe<Array<OrgMembershipWhereInput>>
  organizationID?: InputMaybe<Scalars['String']['input']>
  /** role field predicates */
  role?: InputMaybe<OrgMembershipRole>
  roleIn?: InputMaybe<Array<OrgMembershipRole>>
  roleNEQ?: InputMaybe<OrgMembershipRole>
  roleNotIn?: InputMaybe<Array<OrgMembershipRole>>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  userID?: InputMaybe<Scalars['String']['input']>
}

export interface OrgSubscription extends Node {
  __typename?: 'OrgSubscription'
  /** indicates if the subscription is active */
  active: Scalars['Boolean']['output']
  cancellation?: Maybe<Scalars['String']['output']>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** number of days until there is a due payment */
  daysUntilDue?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  events: EventConnection
  /** the time the subscription is set to expire; only populated if subscription is cancelled */
  expiresAt?: Maybe<Scalars['Time']['output']>
  /** the feature lookup keys associated with the subscription */
  featureLookupKeys?: Maybe<Array<Scalars['String']['output']>>
  /** the features associated with the subscription */
  features?: Maybe<Array<Scalars['String']['output']>>
  id: Scalars['ID']['output']
  managePaymentMethods?: Maybe<Scalars['String']['output']>
  owner?: Maybe<Organization>
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  /** whether or not a payment method has been added to the account */
  paymentMethodAdded?: Maybe<Scalars['Boolean']['output']>
  /** the price of the product tier */
  productPrice?: Maybe<Scalars['Price']['output']>
  /** the common name of the product tier the subscription is associated with, e.g. starter tier */
  productTier?: Maybe<Scalars['String']['output']>
  /** the customer ID the subscription is associated to */
  stripeCustomerID?: Maybe<Scalars['String']['output']>
  /** the product id that represents the tier in stripe */
  stripeProductTierID?: Maybe<Scalars['String']['output']>
  /** the stripe subscription id */
  stripeSubscriptionID?: Maybe<Scalars['String']['output']>
  /** the status of the subscription in stripe -- see https://docs.stripe.com/api/subscriptions/object#subscription_object-status */
  stripeSubscriptionStatus?: Maybe<Scalars['String']['output']>
  subscriptionURL?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  /** the time the trial is set to expire */
  trialExpiresAt?: Maybe<Scalars['Time']['output']>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

export interface OrgSubscriptionEventsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EventOrder>>
  where?: InputMaybe<EventWhereInput>
}

/** A connection to a list of items. */
export interface OrgSubscriptionConnection {
  __typename?: 'OrgSubscriptionConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<OrgSubscriptionEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface OrgSubscriptionEdge {
  __typename?: 'OrgSubscriptionEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<OrgSubscription>
}

export interface OrgSubscriptionHistory extends Node {
  __typename?: 'OrgSubscriptionHistory'
  /** indicates if the subscription is active */
  active: Scalars['Boolean']['output']
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** number of days until there is a due payment */
  daysUntilDue?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** the time the subscription is set to expire; only populated if subscription is cancelled */
  expiresAt?: Maybe<Scalars['Time']['output']>
  /** the feature lookup keys associated with the subscription */
  featureLookupKeys?: Maybe<Array<Scalars['String']['output']>>
  /** the features associated with the subscription */
  features?: Maybe<Array<Scalars['String']['output']>>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  operation: OrgSubscriptionHistoryOpType
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['String']['output']>
  /** whether or not a payment method has been added to the account */
  paymentMethodAdded?: Maybe<Scalars['Boolean']['output']>
  /** the price of the product tier */
  productPrice?: Maybe<Scalars['Price']['output']>
  /** the common name of the product tier the subscription is associated with, e.g. starter tier */
  productTier?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** the customer ID the subscription is associated to */
  stripeCustomerID?: Maybe<Scalars['String']['output']>
  /** the product id that represents the tier in stripe */
  stripeProductTierID?: Maybe<Scalars['String']['output']>
  /** the stripe subscription id */
  stripeSubscriptionID?: Maybe<Scalars['String']['output']>
  /** the status of the subscription in stripe -- see https://docs.stripe.com/api/subscriptions/object#subscription_object-status */
  stripeSubscriptionStatus?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  /** the time the trial is set to expire */
  trialExpiresAt?: Maybe<Scalars['Time']['output']>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface OrgSubscriptionHistoryConnection {
  __typename?: 'OrgSubscriptionHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<OrgSubscriptionHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface OrgSubscriptionHistoryEdge {
  __typename?: 'OrgSubscriptionHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<OrgSubscriptionHistory>
}

/** OrgSubscriptionHistoryOpType is enum for the field operation */
export enum OrgSubscriptionHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for OrgSubscriptionHistory connections */
export interface OrgSubscriptionHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order OrgSubscriptionHistories. */
  field: OrgSubscriptionHistoryOrderField
}

/** Properties by which OrgSubscriptionHistory connections can be ordered. */
export enum OrgSubscriptionHistoryOrderField {
  active = 'active',
  created_at = 'created_at',
  days_until_due = 'days_until_due',
  expires_at = 'expires_at',
  product_tier = 'product_tier',
  stripe_subscription_status = 'stripe_subscription_status',
  trial_expires_at = 'trial_expires_at',
  updated_at = 'updated_at',
}

/**
 * OrgSubscriptionHistoryWhereInput is used for filtering OrgSubscriptionHistory objects.
 * Input was generated by ent.
 */
export interface OrgSubscriptionHistoryWhereInput {
  /** active field predicates */
  active?: InputMaybe<Scalars['Boolean']['input']>
  activeNEQ?: InputMaybe<Scalars['Boolean']['input']>
  and?: InputMaybe<Array<OrgSubscriptionHistoryWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** days_until_due field predicates */
  daysUntilDue?: InputMaybe<Scalars['String']['input']>
  daysUntilDueContains?: InputMaybe<Scalars['String']['input']>
  daysUntilDueContainsFold?: InputMaybe<Scalars['String']['input']>
  daysUntilDueEqualFold?: InputMaybe<Scalars['String']['input']>
  daysUntilDueGT?: InputMaybe<Scalars['String']['input']>
  daysUntilDueGTE?: InputMaybe<Scalars['String']['input']>
  daysUntilDueHasPrefix?: InputMaybe<Scalars['String']['input']>
  daysUntilDueHasSuffix?: InputMaybe<Scalars['String']['input']>
  daysUntilDueIn?: InputMaybe<Array<Scalars['String']['input']>>
  daysUntilDueIsNil?: InputMaybe<Scalars['Boolean']['input']>
  daysUntilDueLT?: InputMaybe<Scalars['String']['input']>
  daysUntilDueLTE?: InputMaybe<Scalars['String']['input']>
  daysUntilDueNEQ?: InputMaybe<Scalars['String']['input']>
  daysUntilDueNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  daysUntilDueNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** expires_at field predicates */
  expiresAt?: InputMaybe<Scalars['Time']['input']>
  expiresAtGT?: InputMaybe<Scalars['Time']['input']>
  expiresAtGTE?: InputMaybe<Scalars['Time']['input']>
  expiresAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  expiresAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  expiresAtLT?: InputMaybe<Scalars['Time']['input']>
  expiresAtLTE?: InputMaybe<Scalars['Time']['input']>
  expiresAtNEQ?: InputMaybe<Scalars['Time']['input']>
  expiresAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  expiresAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<OrgSubscriptionHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<OrgSubscriptionHistoryOpType>
  operationIn?: InputMaybe<Array<OrgSubscriptionHistoryOpType>>
  operationNEQ?: InputMaybe<OrgSubscriptionHistoryOpType>
  operationNotIn?: InputMaybe<Array<OrgSubscriptionHistoryOpType>>
  or?: InputMaybe<Array<OrgSubscriptionHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** payment_method_added field predicates */
  paymentMethodAdded?: InputMaybe<Scalars['Boolean']['input']>
  paymentMethodAddedIsNil?: InputMaybe<Scalars['Boolean']['input']>
  paymentMethodAddedNEQ?: InputMaybe<Scalars['Boolean']['input']>
  paymentMethodAddedNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** product_tier field predicates */
  productTier?: InputMaybe<Scalars['String']['input']>
  productTierContains?: InputMaybe<Scalars['String']['input']>
  productTierContainsFold?: InputMaybe<Scalars['String']['input']>
  productTierEqualFold?: InputMaybe<Scalars['String']['input']>
  productTierGT?: InputMaybe<Scalars['String']['input']>
  productTierGTE?: InputMaybe<Scalars['String']['input']>
  productTierHasPrefix?: InputMaybe<Scalars['String']['input']>
  productTierHasSuffix?: InputMaybe<Scalars['String']['input']>
  productTierIn?: InputMaybe<Array<Scalars['String']['input']>>
  productTierIsNil?: InputMaybe<Scalars['Boolean']['input']>
  productTierLT?: InputMaybe<Scalars['String']['input']>
  productTierLTE?: InputMaybe<Scalars['String']['input']>
  productTierNEQ?: InputMaybe<Scalars['String']['input']>
  productTierNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  productTierNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** stripe_customer_id field predicates */
  stripeCustomerID?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDContains?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDGT?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDGTE?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  stripeCustomerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  stripeCustomerIDLT?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDLTE?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDNEQ?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  stripeCustomerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** stripe_product_tier_id field predicates */
  stripeProductTierID?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDContains?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDContainsFold?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDEqualFold?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDGT?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDGTE?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  stripeProductTierIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  stripeProductTierIDLT?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDLTE?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDNEQ?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  stripeProductTierIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** stripe_subscription_id field predicates */
  stripeSubscriptionID?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDContains?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDContainsFold?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDEqualFold?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDGT?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDGTE?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  stripeSubscriptionIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  stripeSubscriptionIDLT?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDLTE?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDNEQ?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  stripeSubscriptionIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** stripe_subscription_status field predicates */
  stripeSubscriptionStatus?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusContains?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusContainsFold?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusEqualFold?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusGT?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusGTE?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusHasPrefix?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusHasSuffix?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusIn?: InputMaybe<Array<Scalars['String']['input']>>
  stripeSubscriptionStatusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  stripeSubscriptionStatusLT?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusLTE?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusNEQ?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  stripeSubscriptionStatusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** trial_expires_at field predicates */
  trialExpiresAt?: InputMaybe<Scalars['Time']['input']>
  trialExpiresAtGT?: InputMaybe<Scalars['Time']['input']>
  trialExpiresAtGTE?: InputMaybe<Scalars['Time']['input']>
  trialExpiresAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  trialExpiresAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  trialExpiresAtLT?: InputMaybe<Scalars['Time']['input']>
  trialExpiresAtLTE?: InputMaybe<Scalars['Time']['input']>
  trialExpiresAtNEQ?: InputMaybe<Scalars['Time']['input']>
  trialExpiresAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  trialExpiresAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for OrgSubscription connections */
export interface OrgSubscriptionOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order OrgSubscriptions. */
  field: OrgSubscriptionOrderField
}

/** Properties by which OrgSubscription connections can be ordered. */
export enum OrgSubscriptionOrderField {
  active = 'active',
  created_at = 'created_at',
  days_until_due = 'days_until_due',
  expires_at = 'expires_at',
  product_tier = 'product_tier',
  stripe_subscription_status = 'stripe_subscription_status',
  trial_expires_at = 'trial_expires_at',
  updated_at = 'updated_at',
}

export interface OrgSubscriptionSearchResult {
  __typename?: 'OrgSubscriptionSearchResult'
  orgSubscriptions?: Maybe<Array<OrgSubscription>>
}

/**
 * OrgSubscriptionWhereInput is used for filtering OrgSubscription objects.
 * Input was generated by ent.
 */
export interface OrgSubscriptionWhereInput {
  /** active field predicates */
  active?: InputMaybe<Scalars['Boolean']['input']>
  activeNEQ?: InputMaybe<Scalars['Boolean']['input']>
  and?: InputMaybe<Array<OrgSubscriptionWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** days_until_due field predicates */
  daysUntilDue?: InputMaybe<Scalars['String']['input']>
  daysUntilDueContains?: InputMaybe<Scalars['String']['input']>
  daysUntilDueContainsFold?: InputMaybe<Scalars['String']['input']>
  daysUntilDueEqualFold?: InputMaybe<Scalars['String']['input']>
  daysUntilDueGT?: InputMaybe<Scalars['String']['input']>
  daysUntilDueGTE?: InputMaybe<Scalars['String']['input']>
  daysUntilDueHasPrefix?: InputMaybe<Scalars['String']['input']>
  daysUntilDueHasSuffix?: InputMaybe<Scalars['String']['input']>
  daysUntilDueIn?: InputMaybe<Array<Scalars['String']['input']>>
  daysUntilDueIsNil?: InputMaybe<Scalars['Boolean']['input']>
  daysUntilDueLT?: InputMaybe<Scalars['String']['input']>
  daysUntilDueLTE?: InputMaybe<Scalars['String']['input']>
  daysUntilDueNEQ?: InputMaybe<Scalars['String']['input']>
  daysUntilDueNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  daysUntilDueNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** expires_at field predicates */
  expiresAt?: InputMaybe<Scalars['Time']['input']>
  expiresAtGT?: InputMaybe<Scalars['Time']['input']>
  expiresAtGTE?: InputMaybe<Scalars['Time']['input']>
  expiresAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  expiresAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  expiresAtLT?: InputMaybe<Scalars['Time']['input']>
  expiresAtLTE?: InputMaybe<Scalars['Time']['input']>
  expiresAtNEQ?: InputMaybe<Scalars['Time']['input']>
  expiresAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  expiresAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<OrgSubscriptionWhereInput>
  or?: InputMaybe<Array<OrgSubscriptionWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** payment_method_added field predicates */
  paymentMethodAdded?: InputMaybe<Scalars['Boolean']['input']>
  paymentMethodAddedIsNil?: InputMaybe<Scalars['Boolean']['input']>
  paymentMethodAddedNEQ?: InputMaybe<Scalars['Boolean']['input']>
  paymentMethodAddedNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** product_tier field predicates */
  productTier?: InputMaybe<Scalars['String']['input']>
  productTierContains?: InputMaybe<Scalars['String']['input']>
  productTierContainsFold?: InputMaybe<Scalars['String']['input']>
  productTierEqualFold?: InputMaybe<Scalars['String']['input']>
  productTierGT?: InputMaybe<Scalars['String']['input']>
  productTierGTE?: InputMaybe<Scalars['String']['input']>
  productTierHasPrefix?: InputMaybe<Scalars['String']['input']>
  productTierHasSuffix?: InputMaybe<Scalars['String']['input']>
  productTierIn?: InputMaybe<Array<Scalars['String']['input']>>
  productTierIsNil?: InputMaybe<Scalars['Boolean']['input']>
  productTierLT?: InputMaybe<Scalars['String']['input']>
  productTierLTE?: InputMaybe<Scalars['String']['input']>
  productTierNEQ?: InputMaybe<Scalars['String']['input']>
  productTierNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  productTierNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** stripe_customer_id field predicates */
  stripeCustomerID?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDContains?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDGT?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDGTE?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  stripeCustomerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  stripeCustomerIDLT?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDLTE?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDNEQ?: InputMaybe<Scalars['String']['input']>
  stripeCustomerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  stripeCustomerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** stripe_product_tier_id field predicates */
  stripeProductTierID?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDContains?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDContainsFold?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDEqualFold?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDGT?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDGTE?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  stripeProductTierIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  stripeProductTierIDLT?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDLTE?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDNEQ?: InputMaybe<Scalars['String']['input']>
  stripeProductTierIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  stripeProductTierIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** stripe_subscription_id field predicates */
  stripeSubscriptionID?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDContains?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDContainsFold?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDEqualFold?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDGT?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDGTE?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  stripeSubscriptionIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  stripeSubscriptionIDLT?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDLTE?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDNEQ?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  stripeSubscriptionIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** stripe_subscription_status field predicates */
  stripeSubscriptionStatus?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusContains?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusContainsFold?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusEqualFold?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusGT?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusGTE?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusHasPrefix?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusHasSuffix?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusIn?: InputMaybe<Array<Scalars['String']['input']>>
  stripeSubscriptionStatusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  stripeSubscriptionStatusLT?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusLTE?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusNEQ?: InputMaybe<Scalars['String']['input']>
  stripeSubscriptionStatusNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  stripeSubscriptionStatusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** trial_expires_at field predicates */
  trialExpiresAt?: InputMaybe<Scalars['Time']['input']>
  trialExpiresAtGT?: InputMaybe<Scalars['Time']['input']>
  trialExpiresAtGTE?: InputMaybe<Scalars['Time']['input']>
  trialExpiresAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  trialExpiresAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  trialExpiresAtLT?: InputMaybe<Scalars['Time']['input']>
  trialExpiresAtLTE?: InputMaybe<Scalars['Time']['input']>
  trialExpiresAtNEQ?: InputMaybe<Scalars['Time']['input']>
  trialExpiresAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  trialExpiresAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface Organization extends Node {
  __typename?: 'Organization'
  actionPlans: ActionPlanConnection
  apiTokens: ApiTokenConnection
  avatarFile?: Maybe<File>
  /** The organizations's local avatar file id, takes precedence over the avatar remote URL */
  avatarLocalFileID?: Maybe<Scalars['ID']['output']>
  /** URL of the user's remote avatar */
  avatarRemoteURL?: Maybe<Scalars['String']['output']>
  /** The time the user's (local) avatar was last updated */
  avatarUpdatedAt?: Maybe<Scalars['Time']['output']>
  children: OrganizationConnection
  contacts: ContactConnection
  /** groups that are allowed to create controls */
  controlCreators?: Maybe<Array<Group>>
  controlImplementations: ControlImplementationConnection
  /** groups that are allowed to create control_objectives */
  controlObjectiveCreators?: Maybe<Array<Group>>
  controlObjectives: ControlObjectiveConnection
  controls: ControlConnection
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** Whether the organization has a dedicated database */
  dedicatedDb: Scalars['Boolean']['output']
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** An optional description of the organization */
  description?: Maybe<Scalars['String']['output']>
  /** The organization's displayed 'friendly' name */
  displayName: Scalars['String']['output']
  documents: DocumentDataConnection
  entities: EntityConnection
  entityTypes: EntityTypeConnection
  events: EventConnection
  evidence: EvidenceConnection
  files: FileConnection
  /** groups that are allowed to create groups */
  groupCreators?: Maybe<Array<Group>>
  groups: GroupConnection
  id: Scalars['ID']['output']
  integrations: IntegrationConnection
  internalPolicies: InternalPolicyConnection
  /** groups that are allowed to create internal_policys */
  internalPolicyCreators?: Maybe<Array<Group>>
  invites: InviteConnection
  members?: Maybe<Array<OrgMembership>>
  /** the name of the organization */
  name: Scalars['String']['output']
  /** groups that are allowed to create narratives */
  narrativeCreators?: Maybe<Array<Group>>
  narratives: NarrativeConnection
  notes: NoteConnection
  orgSubscriptions?: Maybe<Array<OrgSubscription>>
  parent?: Maybe<Organization>
  personalAccessTokens: PersonalAccessTokenConnection
  /** orgs directly associated with a user */
  personalOrg?: Maybe<Scalars['Boolean']['output']>
  /** groups that are allowed to create procedures */
  procedureCreators?: Maybe<Array<Group>>
  procedures: ProcedureConnection
  /** groups that are allowed to create programs */
  programCreators?: Maybe<Array<Group>>
  programs: ProgramConnection
  /** groups that are allowed to create risks */
  riskCreators?: Maybe<Array<Group>>
  risks: RiskConnection
  secrets: HushConnection
  setting?: Maybe<OrganizationSetting>
  standards: StandardConnection
  subcontrols: SubcontrolConnection
  subscribers: SubscriberConnection
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  tasks: TaskConnection
  /** groups that are allowed to create templates */
  templateCreators?: Maybe<Array<Group>>
  templates: TemplateConnection
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  users?: Maybe<Array<User>>
}

export interface OrganizationActionPlansArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ActionPlanOrder>>
  where?: InputMaybe<ActionPlanWhereInput>
}

export interface OrganizationApiTokensArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ApiTokenOrder>>
  where?: InputMaybe<ApiTokenWhereInput>
}

export interface OrganizationChildrenArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<OrganizationOrder>>
  where?: InputMaybe<OrganizationWhereInput>
}

export interface OrganizationContactsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ContactOrder>>
  where?: InputMaybe<ContactWhereInput>
}

export interface OrganizationControlImplementationsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlImplementationOrder>>
  where?: InputMaybe<ControlImplementationWhereInput>
}

export interface OrganizationControlObjectivesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlObjectiveOrder>>
  where?: InputMaybe<ControlObjectiveWhereInput>
}

export interface OrganizationControlsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlOrder>>
  where?: InputMaybe<ControlWhereInput>
}

export interface OrganizationDocumentsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<DocumentDataOrder>>
  where?: InputMaybe<DocumentDataWhereInput>
}

export interface OrganizationEntitiesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EntityOrder>>
  where?: InputMaybe<EntityWhereInput>
}

export interface OrganizationEntityTypesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EntityTypeOrder>>
  where?: InputMaybe<EntityTypeWhereInput>
}

export interface OrganizationEventsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EventOrder>>
  where?: InputMaybe<EventWhereInput>
}

export interface OrganizationEvidenceArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EvidenceOrder>>
  where?: InputMaybe<EvidenceWhereInput>
}

export interface OrganizationFilesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<FileOrder>>
  where?: InputMaybe<FileWhereInput>
}

export interface OrganizationGroupsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<GroupOrder>>
  where?: InputMaybe<GroupWhereInput>
}

export interface OrganizationIntegrationsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<IntegrationOrder>>
  where?: InputMaybe<IntegrationWhereInput>
}

export interface OrganizationInternalPoliciesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<InternalPolicyOrder>>
  where?: InputMaybe<InternalPolicyWhereInput>
}

export interface OrganizationInvitesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<InviteOrder>>
  where?: InputMaybe<InviteWhereInput>
}

export interface OrganizationNarrativesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<NarrativeOrder>>
  where?: InputMaybe<NarrativeWhereInput>
}

export interface OrganizationNotesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<NoteOrder>>
  where?: InputMaybe<NoteWhereInput>
}

export interface OrganizationPersonalAccessTokensArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<PersonalAccessTokenOrder>>
  where?: InputMaybe<PersonalAccessTokenWhereInput>
}

export interface OrganizationProceduresArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProcedureOrder>>
  where?: InputMaybe<ProcedureWhereInput>
}

export interface OrganizationProgramsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProgramOrder>>
  where?: InputMaybe<ProgramWhereInput>
}

export interface OrganizationRisksArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<RiskOrder>>
  where?: InputMaybe<RiskWhereInput>
}

export interface OrganizationSecretsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<HushOrder>>
  where?: InputMaybe<HushWhereInput>
}

export interface OrganizationStandardsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<StandardOrder>>
  where?: InputMaybe<StandardWhereInput>
}

export interface OrganizationSubcontrolsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<SubcontrolOrder>>
  where?: InputMaybe<SubcontrolWhereInput>
}

export interface OrganizationSubscribersArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<SubscriberOrder>>
  where?: InputMaybe<SubscriberWhereInput>
}

export interface OrganizationTasksArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<TaskOrder>>
  where?: InputMaybe<TaskWhereInput>
}

export interface OrganizationTemplatesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<TemplateOrder>>
  where?: InputMaybe<TemplateWhereInput>
}

/** Return response for createBulkOrganization mutation */
export interface OrganizationBulkCreatePayload {
  __typename?: 'OrganizationBulkCreatePayload'
  /** Created organizations */
  organizations?: Maybe<Array<Organization>>
}

/** A connection to a list of items. */
export interface OrganizationConnection {
  __typename?: 'OrganizationConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<OrganizationEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createOrganization mutation */
export interface OrganizationCreatePayload {
  __typename?: 'OrganizationCreatePayload'
  /** Created organization */
  organization: Organization
}

/** Return response for deleteOrganization mutation */
export interface OrganizationDeletePayload {
  __typename?: 'OrganizationDeletePayload'
  /** Deleted organization ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface OrganizationEdge {
  __typename?: 'OrganizationEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<Organization>
}

export interface OrganizationHistory extends Node {
  __typename?: 'OrganizationHistory'
  /** The organizations's local avatar file id, takes precedence over the avatar remote URL */
  avatarLocalFileID?: Maybe<Scalars['String']['output']>
  /** URL of the user's remote avatar */
  avatarRemoteURL?: Maybe<Scalars['String']['output']>
  /** The time the user's (local) avatar was last updated */
  avatarUpdatedAt?: Maybe<Scalars['Time']['output']>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** Whether the organization has a dedicated database */
  dedicatedDb: Scalars['Boolean']['output']
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** An optional description of the organization */
  description?: Maybe<Scalars['String']['output']>
  /** The organization's displayed 'friendly' name */
  displayName: Scalars['String']['output']
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** the name of the organization */
  name: Scalars['String']['output']
  operation: OrganizationHistoryOpType
  /** orgs directly associated with a user */
  personalOrg?: Maybe<Scalars['Boolean']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface OrganizationHistoryConnection {
  __typename?: 'OrganizationHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<OrganizationHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface OrganizationHistoryEdge {
  __typename?: 'OrganizationHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<OrganizationHistory>
}

/** OrganizationHistoryOpType is enum for the field operation */
export enum OrganizationHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for OrganizationHistory connections */
export interface OrganizationHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order OrganizationHistories. */
  field: OrganizationHistoryOrderField
}

/** Properties by which OrganizationHistory connections can be ordered. */
export enum OrganizationHistoryOrderField {
  created_at = 'created_at',
  display_name = 'display_name',
  name = 'name',
  updated_at = 'updated_at',
}

/**
 * OrganizationHistoryWhereInput is used for filtering OrganizationHistory objects.
 * Input was generated by ent.
 */
export interface OrganizationHistoryWhereInput {
  and?: InputMaybe<Array<OrganizationHistoryWhereInput>>
  /** avatar_local_file_id field predicates */
  avatarLocalFileID?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDContains?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDContainsFold?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDEqualFold?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDGT?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDGTE?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  avatarLocalFileIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  avatarLocalFileIDLT?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDLTE?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDNEQ?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  avatarLocalFileIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** avatar_remote_url field predicates */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLContains?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLContainsFold?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLEqualFold?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLGT?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLGTE?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLHasPrefix?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLHasSuffix?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLIn?: InputMaybe<Array<Scalars['String']['input']>>
  avatarRemoteURLIsNil?: InputMaybe<Scalars['Boolean']['input']>
  avatarRemoteURLLT?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLLTE?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLNEQ?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  avatarRemoteURLNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** avatar_updated_at field predicates */
  avatarUpdatedAt?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtGT?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  avatarUpdatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  avatarUpdatedAtLT?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  avatarUpdatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>
  displayNameContains?: InputMaybe<Scalars['String']['input']>
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>
  displayNameGT?: InputMaybe<Scalars['String']['input']>
  displayNameGTE?: InputMaybe<Scalars['String']['input']>
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayNameLT?: InputMaybe<Scalars['String']['input']>
  displayNameLTE?: InputMaybe<Scalars['String']['input']>
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<OrganizationHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<OrganizationHistoryOpType>
  operationIn?: InputMaybe<Array<OrganizationHistoryOpType>>
  operationNEQ?: InputMaybe<OrganizationHistoryOpType>
  operationNotIn?: InputMaybe<Array<OrganizationHistoryOpType>>
  or?: InputMaybe<Array<OrganizationHistoryWhereInput>>
  /** parent_organization_id field predicates */
  parentOrganizationID?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDContains?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDGT?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDGTE?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  parentOrganizationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  parentOrganizationIDLT?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDLTE?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDNEQ?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  parentOrganizationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** personal_org field predicates */
  personalOrg?: InputMaybe<Scalars['Boolean']['input']>
  personalOrgIsNil?: InputMaybe<Scalars['Boolean']['input']>
  personalOrgNEQ?: InputMaybe<Scalars['Boolean']['input']>
  personalOrgNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for Organization connections */
export interface OrganizationOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Organizations. */
  field: OrganizationOrderField
}

/** Properties by which Organization connections can be ordered. */
export enum OrganizationOrderField {
  created_at = 'created_at',
  display_name = 'display_name',
  name = 'name',
  updated_at = 'updated_at',
}

export interface OrganizationSearchResult {
  __typename?: 'OrganizationSearchResult'
  organizations?: Maybe<Array<Organization>>
}

export interface OrganizationSetting extends Node {
  __typename?: 'OrganizationSetting'
  /** domains allowed to access the organization, if empty all domains are allowed */
  allowedEmailDomains?: Maybe<Array<Scalars['String']['output']>>
  /** the billing address to send billing information to */
  billingAddress?: Maybe<Scalars['Address']['output']>
  /** Name of the person to contact for billing */
  billingContact?: Maybe<Scalars['String']['output']>
  /** Email address of the person to contact for billing */
  billingEmail?: Maybe<Scalars['String']['output']>
  /** should we send email notifications related to billing */
  billingNotificationsEnabled: Scalars['Boolean']['output']
  /** Phone number to contact for billing */
  billingPhone?: Maybe<Scalars['String']['output']>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** domains associated with the organization */
  domains?: Maybe<Array<Scalars['String']['output']>>
  files: FileConnection
  /** geographical location of the organization */
  geoLocation?: Maybe<OrganizationSettingRegion>
  id: Scalars['ID']['output']
  organization?: Maybe<Organization>
  /** the ID of the organization the settings belong to */
  organizationID?: Maybe<Scalars['ID']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  /** Usually government-issued tax ID or business ID such as ABN in Australia */
  taxIdentifier?: Maybe<Scalars['String']['output']>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

export interface OrganizationSettingFilesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<FileOrder>>
  where?: InputMaybe<FileWhereInput>
}

/** Return response for createBulkOrganizationSetting mutation */
export interface OrganizationSettingBulkCreatePayload {
  __typename?: 'OrganizationSettingBulkCreatePayload'
  /** Created organizationSettings */
  organizationSettings?: Maybe<Array<OrganizationSetting>>
}

/** A connection to a list of items. */
export interface OrganizationSettingConnection {
  __typename?: 'OrganizationSettingConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<OrganizationSettingEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createOrganizationSetting mutation */
export interface OrganizationSettingCreatePayload {
  __typename?: 'OrganizationSettingCreatePayload'
  /** Created organizationSetting */
  organizationSetting: OrganizationSetting
}

/** Return response for deleteOrganizationSetting mutation */
export interface OrganizationSettingDeletePayload {
  __typename?: 'OrganizationSettingDeletePayload'
  /** Deleted organizationSetting ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface OrganizationSettingEdge {
  __typename?: 'OrganizationSettingEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<OrganizationSetting>
}

export interface OrganizationSettingHistory extends Node {
  __typename?: 'OrganizationSettingHistory'
  /** domains allowed to access the organization, if empty all domains are allowed */
  allowedEmailDomains?: Maybe<Array<Scalars['String']['output']>>
  /** the billing address to send billing information to */
  billingAddress?: Maybe<Scalars['Address']['output']>
  /** Name of the person to contact for billing */
  billingContact?: Maybe<Scalars['String']['output']>
  /** Email address of the person to contact for billing */
  billingEmail?: Maybe<Scalars['String']['output']>
  /** should we send email notifications related to billing */
  billingNotificationsEnabled: Scalars['Boolean']['output']
  /** Phone number to contact for billing */
  billingPhone?: Maybe<Scalars['String']['output']>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** domains associated with the organization */
  domains?: Maybe<Array<Scalars['String']['output']>>
  /** geographical location of the organization */
  geoLocation?: Maybe<OrganizationSettingHistoryRegion>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  operation: OrganizationSettingHistoryOpType
  /** the ID of the organization the settings belong to */
  organizationID?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  /** Usually government-issued tax ID or business ID such as ABN in Australia */
  taxIdentifier?: Maybe<Scalars['String']['output']>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface OrganizationSettingHistoryConnection {
  __typename?: 'OrganizationSettingHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<OrganizationSettingHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface OrganizationSettingHistoryEdge {
  __typename?: 'OrganizationSettingHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<OrganizationSettingHistory>
}

/** OrganizationSettingHistoryOpType is enum for the field operation */
export enum OrganizationSettingHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for OrganizationSettingHistory connections */
export interface OrganizationSettingHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order OrganizationSettingHistories. */
  field: OrganizationSettingHistoryOrderField
}

/** Properties by which OrganizationSettingHistory connections can be ordered. */
export enum OrganizationSettingHistoryOrderField {
  created_at = 'created_at',
  updated_at = 'updated_at',
}

/** OrganizationSettingHistoryRegion is enum for the field geo_location */
export enum OrganizationSettingHistoryRegion {
  AMER = 'AMER',
  APAC = 'APAC',
  EMEA = 'EMEA',
}

/**
 * OrganizationSettingHistoryWhereInput is used for filtering OrganizationSettingHistory objects.
 * Input was generated by ent.
 */
export interface OrganizationSettingHistoryWhereInput {
  and?: InputMaybe<Array<OrganizationSettingHistoryWhereInput>>
  /** billing_contact field predicates */
  billingContact?: InputMaybe<Scalars['String']['input']>
  billingContactContains?: InputMaybe<Scalars['String']['input']>
  billingContactContainsFold?: InputMaybe<Scalars['String']['input']>
  billingContactEqualFold?: InputMaybe<Scalars['String']['input']>
  billingContactGT?: InputMaybe<Scalars['String']['input']>
  billingContactGTE?: InputMaybe<Scalars['String']['input']>
  billingContactHasPrefix?: InputMaybe<Scalars['String']['input']>
  billingContactHasSuffix?: InputMaybe<Scalars['String']['input']>
  billingContactIn?: InputMaybe<Array<Scalars['String']['input']>>
  billingContactIsNil?: InputMaybe<Scalars['Boolean']['input']>
  billingContactLT?: InputMaybe<Scalars['String']['input']>
  billingContactLTE?: InputMaybe<Scalars['String']['input']>
  billingContactNEQ?: InputMaybe<Scalars['String']['input']>
  billingContactNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  billingContactNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** billing_email field predicates */
  billingEmail?: InputMaybe<Scalars['String']['input']>
  billingEmailContains?: InputMaybe<Scalars['String']['input']>
  billingEmailContainsFold?: InputMaybe<Scalars['String']['input']>
  billingEmailEqualFold?: InputMaybe<Scalars['String']['input']>
  billingEmailGT?: InputMaybe<Scalars['String']['input']>
  billingEmailGTE?: InputMaybe<Scalars['String']['input']>
  billingEmailHasPrefix?: InputMaybe<Scalars['String']['input']>
  billingEmailHasSuffix?: InputMaybe<Scalars['String']['input']>
  billingEmailIn?: InputMaybe<Array<Scalars['String']['input']>>
  billingEmailIsNil?: InputMaybe<Scalars['Boolean']['input']>
  billingEmailLT?: InputMaybe<Scalars['String']['input']>
  billingEmailLTE?: InputMaybe<Scalars['String']['input']>
  billingEmailNEQ?: InputMaybe<Scalars['String']['input']>
  billingEmailNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  billingEmailNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** billing_notifications_enabled field predicates */
  billingNotificationsEnabled?: InputMaybe<Scalars['Boolean']['input']>
  billingNotificationsEnabledNEQ?: InputMaybe<Scalars['Boolean']['input']>
  /** billing_phone field predicates */
  billingPhone?: InputMaybe<Scalars['String']['input']>
  billingPhoneContains?: InputMaybe<Scalars['String']['input']>
  billingPhoneContainsFold?: InputMaybe<Scalars['String']['input']>
  billingPhoneEqualFold?: InputMaybe<Scalars['String']['input']>
  billingPhoneGT?: InputMaybe<Scalars['String']['input']>
  billingPhoneGTE?: InputMaybe<Scalars['String']['input']>
  billingPhoneHasPrefix?: InputMaybe<Scalars['String']['input']>
  billingPhoneHasSuffix?: InputMaybe<Scalars['String']['input']>
  billingPhoneIn?: InputMaybe<Array<Scalars['String']['input']>>
  billingPhoneIsNil?: InputMaybe<Scalars['Boolean']['input']>
  billingPhoneLT?: InputMaybe<Scalars['String']['input']>
  billingPhoneLTE?: InputMaybe<Scalars['String']['input']>
  billingPhoneNEQ?: InputMaybe<Scalars['String']['input']>
  billingPhoneNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  billingPhoneNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** geo_location field predicates */
  geoLocation?: InputMaybe<OrganizationSettingHistoryRegion>
  geoLocationIn?: InputMaybe<Array<OrganizationSettingHistoryRegion>>
  geoLocationIsNil?: InputMaybe<Scalars['Boolean']['input']>
  geoLocationNEQ?: InputMaybe<OrganizationSettingHistoryRegion>
  geoLocationNotIn?: InputMaybe<Array<OrganizationSettingHistoryRegion>>
  geoLocationNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<OrganizationSettingHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<OrganizationSettingHistoryOpType>
  operationIn?: InputMaybe<Array<OrganizationSettingHistoryOpType>>
  operationNEQ?: InputMaybe<OrganizationSettingHistoryOpType>
  operationNotIn?: InputMaybe<Array<OrganizationSettingHistoryOpType>>
  or?: InputMaybe<Array<OrganizationSettingHistoryWhereInput>>
  /** organization_id field predicates */
  organizationID?: InputMaybe<Scalars['String']['input']>
  organizationIDContains?: InputMaybe<Scalars['String']['input']>
  organizationIDContainsFold?: InputMaybe<Scalars['String']['input']>
  organizationIDEqualFold?: InputMaybe<Scalars['String']['input']>
  organizationIDGT?: InputMaybe<Scalars['String']['input']>
  organizationIDGTE?: InputMaybe<Scalars['String']['input']>
  organizationIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  organizationIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  organizationIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  organizationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  organizationIDLT?: InputMaybe<Scalars['String']['input']>
  organizationIDLTE?: InputMaybe<Scalars['String']['input']>
  organizationIDNEQ?: InputMaybe<Scalars['String']['input']>
  organizationIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  organizationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** tax_identifier field predicates */
  taxIdentifier?: InputMaybe<Scalars['String']['input']>
  taxIdentifierContains?: InputMaybe<Scalars['String']['input']>
  taxIdentifierContainsFold?: InputMaybe<Scalars['String']['input']>
  taxIdentifierEqualFold?: InputMaybe<Scalars['String']['input']>
  taxIdentifierGT?: InputMaybe<Scalars['String']['input']>
  taxIdentifierGTE?: InputMaybe<Scalars['String']['input']>
  taxIdentifierHasPrefix?: InputMaybe<Scalars['String']['input']>
  taxIdentifierHasSuffix?: InputMaybe<Scalars['String']['input']>
  taxIdentifierIn?: InputMaybe<Array<Scalars['String']['input']>>
  taxIdentifierIsNil?: InputMaybe<Scalars['Boolean']['input']>
  taxIdentifierLT?: InputMaybe<Scalars['String']['input']>
  taxIdentifierLTE?: InputMaybe<Scalars['String']['input']>
  taxIdentifierNEQ?: InputMaybe<Scalars['String']['input']>
  taxIdentifierNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  taxIdentifierNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for OrganizationSetting connections */
export interface OrganizationSettingOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order OrganizationSettings. */
  field: OrganizationSettingOrderField
}

/** Properties by which OrganizationSetting connections can be ordered. */
export enum OrganizationSettingOrderField {
  created_at = 'created_at',
  updated_at = 'updated_at',
}

/** OrganizationSettingRegion is enum for the field geo_location */
export enum OrganizationSettingRegion {
  AMER = 'AMER',
  APAC = 'APAC',
  EMEA = 'EMEA',
}

export interface OrganizationSettingSearchResult {
  __typename?: 'OrganizationSettingSearchResult'
  organizationSettings?: Maybe<Array<OrganizationSetting>>
}

/** Return response for updateOrganizationSetting mutation */
export interface OrganizationSettingUpdatePayload {
  __typename?: 'OrganizationSettingUpdatePayload'
  /** Updated organizationSetting */
  organizationSetting: OrganizationSetting
}

/**
 * OrganizationSettingWhereInput is used for filtering OrganizationSetting objects.
 * Input was generated by ent.
 */
export interface OrganizationSettingWhereInput {
  and?: InputMaybe<Array<OrganizationSettingWhereInput>>
  /** billing_contact field predicates */
  billingContact?: InputMaybe<Scalars['String']['input']>
  billingContactContains?: InputMaybe<Scalars['String']['input']>
  billingContactContainsFold?: InputMaybe<Scalars['String']['input']>
  billingContactEqualFold?: InputMaybe<Scalars['String']['input']>
  billingContactGT?: InputMaybe<Scalars['String']['input']>
  billingContactGTE?: InputMaybe<Scalars['String']['input']>
  billingContactHasPrefix?: InputMaybe<Scalars['String']['input']>
  billingContactHasSuffix?: InputMaybe<Scalars['String']['input']>
  billingContactIn?: InputMaybe<Array<Scalars['String']['input']>>
  billingContactIsNil?: InputMaybe<Scalars['Boolean']['input']>
  billingContactLT?: InputMaybe<Scalars['String']['input']>
  billingContactLTE?: InputMaybe<Scalars['String']['input']>
  billingContactNEQ?: InputMaybe<Scalars['String']['input']>
  billingContactNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  billingContactNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** billing_email field predicates */
  billingEmail?: InputMaybe<Scalars['String']['input']>
  billingEmailContains?: InputMaybe<Scalars['String']['input']>
  billingEmailContainsFold?: InputMaybe<Scalars['String']['input']>
  billingEmailEqualFold?: InputMaybe<Scalars['String']['input']>
  billingEmailGT?: InputMaybe<Scalars['String']['input']>
  billingEmailGTE?: InputMaybe<Scalars['String']['input']>
  billingEmailHasPrefix?: InputMaybe<Scalars['String']['input']>
  billingEmailHasSuffix?: InputMaybe<Scalars['String']['input']>
  billingEmailIn?: InputMaybe<Array<Scalars['String']['input']>>
  billingEmailIsNil?: InputMaybe<Scalars['Boolean']['input']>
  billingEmailLT?: InputMaybe<Scalars['String']['input']>
  billingEmailLTE?: InputMaybe<Scalars['String']['input']>
  billingEmailNEQ?: InputMaybe<Scalars['String']['input']>
  billingEmailNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  billingEmailNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** billing_notifications_enabled field predicates */
  billingNotificationsEnabled?: InputMaybe<Scalars['Boolean']['input']>
  billingNotificationsEnabledNEQ?: InputMaybe<Scalars['Boolean']['input']>
  /** billing_phone field predicates */
  billingPhone?: InputMaybe<Scalars['String']['input']>
  billingPhoneContains?: InputMaybe<Scalars['String']['input']>
  billingPhoneContainsFold?: InputMaybe<Scalars['String']['input']>
  billingPhoneEqualFold?: InputMaybe<Scalars['String']['input']>
  billingPhoneGT?: InputMaybe<Scalars['String']['input']>
  billingPhoneGTE?: InputMaybe<Scalars['String']['input']>
  billingPhoneHasPrefix?: InputMaybe<Scalars['String']['input']>
  billingPhoneHasSuffix?: InputMaybe<Scalars['String']['input']>
  billingPhoneIn?: InputMaybe<Array<Scalars['String']['input']>>
  billingPhoneIsNil?: InputMaybe<Scalars['Boolean']['input']>
  billingPhoneLT?: InputMaybe<Scalars['String']['input']>
  billingPhoneLTE?: InputMaybe<Scalars['String']['input']>
  billingPhoneNEQ?: InputMaybe<Scalars['String']['input']>
  billingPhoneNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  billingPhoneNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** geo_location field predicates */
  geoLocation?: InputMaybe<OrganizationSettingRegion>
  geoLocationIn?: InputMaybe<Array<OrganizationSettingRegion>>
  geoLocationIsNil?: InputMaybe<Scalars['Boolean']['input']>
  geoLocationNEQ?: InputMaybe<OrganizationSettingRegion>
  geoLocationNotIn?: InputMaybe<Array<OrganizationSettingRegion>>
  geoLocationNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>
  /** organization edge predicates */
  hasOrganization?: InputMaybe<Scalars['Boolean']['input']>
  hasOrganizationWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<OrganizationSettingWhereInput>
  or?: InputMaybe<Array<OrganizationSettingWhereInput>>
  /** organization_id field predicates */
  organizationID?: InputMaybe<Scalars['ID']['input']>
  organizationIDContains?: InputMaybe<Scalars['ID']['input']>
  organizationIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  organizationIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  organizationIDGT?: InputMaybe<Scalars['ID']['input']>
  organizationIDGTE?: InputMaybe<Scalars['ID']['input']>
  organizationIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  organizationIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  organizationIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  organizationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  organizationIDLT?: InputMaybe<Scalars['ID']['input']>
  organizationIDLTE?: InputMaybe<Scalars['ID']['input']>
  organizationIDNEQ?: InputMaybe<Scalars['ID']['input']>
  organizationIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  organizationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** tax_identifier field predicates */
  taxIdentifier?: InputMaybe<Scalars['String']['input']>
  taxIdentifierContains?: InputMaybe<Scalars['String']['input']>
  taxIdentifierContainsFold?: InputMaybe<Scalars['String']['input']>
  taxIdentifierEqualFold?: InputMaybe<Scalars['String']['input']>
  taxIdentifierGT?: InputMaybe<Scalars['String']['input']>
  taxIdentifierGTE?: InputMaybe<Scalars['String']['input']>
  taxIdentifierHasPrefix?: InputMaybe<Scalars['String']['input']>
  taxIdentifierHasSuffix?: InputMaybe<Scalars['String']['input']>
  taxIdentifierIn?: InputMaybe<Array<Scalars['String']['input']>>
  taxIdentifierIsNil?: InputMaybe<Scalars['Boolean']['input']>
  taxIdentifierLT?: InputMaybe<Scalars['String']['input']>
  taxIdentifierLTE?: InputMaybe<Scalars['String']['input']>
  taxIdentifierNEQ?: InputMaybe<Scalars['String']['input']>
  taxIdentifierNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  taxIdentifierNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Return response for updateOrganization mutation */
export interface OrganizationUpdatePayload {
  __typename?: 'OrganizationUpdatePayload'
  /** Updated organization */
  organization: Organization
}

/**
 * OrganizationWhereInput is used for filtering Organization objects.
 * Input was generated by ent.
 */
export interface OrganizationWhereInput {
  and?: InputMaybe<Array<OrganizationWhereInput>>
  /** avatar_local_file_id field predicates */
  avatarLocalFileID?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDContains?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDGT?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDGTE?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  avatarLocalFileIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  avatarLocalFileIDLT?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDLTE?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDNEQ?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  avatarLocalFileIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** avatar_remote_url field predicates */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLContains?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLContainsFold?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLEqualFold?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLGT?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLGTE?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLHasPrefix?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLHasSuffix?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLIn?: InputMaybe<Array<Scalars['String']['input']>>
  avatarRemoteURLIsNil?: InputMaybe<Scalars['Boolean']['input']>
  avatarRemoteURLLT?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLLTE?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLNEQ?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  avatarRemoteURLNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** avatar_updated_at field predicates */
  avatarUpdatedAt?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtGT?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  avatarUpdatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  avatarUpdatedAtLT?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  avatarUpdatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>
  displayNameContains?: InputMaybe<Scalars['String']['input']>
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>
  displayNameGT?: InputMaybe<Scalars['String']['input']>
  displayNameGTE?: InputMaybe<Scalars['String']['input']>
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayNameLT?: InputMaybe<Scalars['String']['input']>
  displayNameLTE?: InputMaybe<Scalars['String']['input']>
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** api_tokens edge predicates */
  hasAPITokens?: InputMaybe<Scalars['Boolean']['input']>
  hasAPITokensWith?: InputMaybe<Array<ApiTokenWhereInput>>
  /** action_plans edge predicates */
  hasActionPlans?: InputMaybe<Scalars['Boolean']['input']>
  hasActionPlansWith?: InputMaybe<Array<ActionPlanWhereInput>>
  /** avatar_file edge predicates */
  hasAvatarFile?: InputMaybe<Scalars['Boolean']['input']>
  hasAvatarFileWith?: InputMaybe<Array<FileWhereInput>>
  /** children edge predicates */
  hasChildren?: InputMaybe<Scalars['Boolean']['input']>
  hasChildrenWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** contacts edge predicates */
  hasContacts?: InputMaybe<Scalars['Boolean']['input']>
  hasContactsWith?: InputMaybe<Array<ContactWhereInput>>
  /** control_creators edge predicates */
  hasControlCreators?: InputMaybe<Scalars['Boolean']['input']>
  hasControlCreatorsWith?: InputMaybe<Array<GroupWhereInput>>
  /** control_implementations edge predicates */
  hasControlImplementations?: InputMaybe<Scalars['Boolean']['input']>
  hasControlImplementationsWith?: InputMaybe<Array<ControlImplementationWhereInput>>
  /** control_objective_creators edge predicates */
  hasControlObjectiveCreators?: InputMaybe<Scalars['Boolean']['input']>
  hasControlObjectiveCreatorsWith?: InputMaybe<Array<GroupWhereInput>>
  /** control_objectives edge predicates */
  hasControlObjectives?: InputMaybe<Scalars['Boolean']['input']>
  hasControlObjectivesWith?: InputMaybe<Array<ControlObjectiveWhereInput>>
  /** controls edge predicates */
  hasControls?: InputMaybe<Scalars['Boolean']['input']>
  hasControlsWith?: InputMaybe<Array<ControlWhereInput>>
  /** documents edge predicates */
  hasDocuments?: InputMaybe<Scalars['Boolean']['input']>
  hasDocumentsWith?: InputMaybe<Array<DocumentDataWhereInput>>
  /** entities edge predicates */
  hasEntities?: InputMaybe<Scalars['Boolean']['input']>
  hasEntitiesWith?: InputMaybe<Array<EntityWhereInput>>
  /** entity_types edge predicates */
  hasEntityTypes?: InputMaybe<Scalars['Boolean']['input']>
  hasEntityTypesWith?: InputMaybe<Array<EntityTypeWhereInput>>
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>
  /** evidence edge predicates */
  hasEvidence?: InputMaybe<Scalars['Boolean']['input']>
  hasEvidenceWith?: InputMaybe<Array<EvidenceWhereInput>>
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>
  /** group_creators edge predicates */
  hasGroupCreators?: InputMaybe<Scalars['Boolean']['input']>
  hasGroupCreatorsWith?: InputMaybe<Array<GroupWhereInput>>
  /** groups edge predicates */
  hasGroups?: InputMaybe<Scalars['Boolean']['input']>
  hasGroupsWith?: InputMaybe<Array<GroupWhereInput>>
  /** integrations edge predicates */
  hasIntegrations?: InputMaybe<Scalars['Boolean']['input']>
  hasIntegrationsWith?: InputMaybe<Array<IntegrationWhereInput>>
  /** internal_policies edge predicates */
  hasInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>
  hasInternalPoliciesWith?: InputMaybe<Array<InternalPolicyWhereInput>>
  /** internal_policy_creators edge predicates */
  hasInternalPolicyCreators?: InputMaybe<Scalars['Boolean']['input']>
  hasInternalPolicyCreatorsWith?: InputMaybe<Array<GroupWhereInput>>
  /** invites edge predicates */
  hasInvites?: InputMaybe<Scalars['Boolean']['input']>
  hasInvitesWith?: InputMaybe<Array<InviteWhereInput>>
  /** members edge predicates */
  hasMembers?: InputMaybe<Scalars['Boolean']['input']>
  hasMembersWith?: InputMaybe<Array<OrgMembershipWhereInput>>
  /** narrative_creators edge predicates */
  hasNarrativeCreators?: InputMaybe<Scalars['Boolean']['input']>
  hasNarrativeCreatorsWith?: InputMaybe<Array<GroupWhereInput>>
  /** narratives edge predicates */
  hasNarratives?: InputMaybe<Scalars['Boolean']['input']>
  hasNarrativesWith?: InputMaybe<Array<NarrativeWhereInput>>
  /** notes edge predicates */
  hasNotes?: InputMaybe<Scalars['Boolean']['input']>
  hasNotesWith?: InputMaybe<Array<NoteWhereInput>>
  /** org_subscriptions edge predicates */
  hasOrgSubscriptions?: InputMaybe<Scalars['Boolean']['input']>
  hasOrgSubscriptionsWith?: InputMaybe<Array<OrgSubscriptionWhereInput>>
  /** parent edge predicates */
  hasParent?: InputMaybe<Scalars['Boolean']['input']>
  hasParentWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** personal_access_tokens edge predicates */
  hasPersonalAccessTokens?: InputMaybe<Scalars['Boolean']['input']>
  hasPersonalAccessTokensWith?: InputMaybe<Array<PersonalAccessTokenWhereInput>>
  /** procedure_creators edge predicates */
  hasProcedureCreators?: InputMaybe<Scalars['Boolean']['input']>
  hasProcedureCreatorsWith?: InputMaybe<Array<GroupWhereInput>>
  /** procedures edge predicates */
  hasProcedures?: InputMaybe<Scalars['Boolean']['input']>
  hasProceduresWith?: InputMaybe<Array<ProcedureWhereInput>>
  /** program_creators edge predicates */
  hasProgramCreators?: InputMaybe<Scalars['Boolean']['input']>
  hasProgramCreatorsWith?: InputMaybe<Array<GroupWhereInput>>
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>
  /** risk_creators edge predicates */
  hasRiskCreators?: InputMaybe<Scalars['Boolean']['input']>
  hasRiskCreatorsWith?: InputMaybe<Array<GroupWhereInput>>
  /** risks edge predicates */
  hasRisks?: InputMaybe<Scalars['Boolean']['input']>
  hasRisksWith?: InputMaybe<Array<RiskWhereInput>>
  /** secrets edge predicates */
  hasSecrets?: InputMaybe<Scalars['Boolean']['input']>
  hasSecretsWith?: InputMaybe<Array<HushWhereInput>>
  /** setting edge predicates */
  hasSetting?: InputMaybe<Scalars['Boolean']['input']>
  hasSettingWith?: InputMaybe<Array<OrganizationSettingWhereInput>>
  /** standards edge predicates */
  hasStandards?: InputMaybe<Scalars['Boolean']['input']>
  hasStandardsWith?: InputMaybe<Array<StandardWhereInput>>
  /** subcontrols edge predicates */
  hasSubcontrols?: InputMaybe<Scalars['Boolean']['input']>
  hasSubcontrolsWith?: InputMaybe<Array<SubcontrolWhereInput>>
  /** subscribers edge predicates */
  hasSubscribers?: InputMaybe<Scalars['Boolean']['input']>
  hasSubscribersWith?: InputMaybe<Array<SubscriberWhereInput>>
  /** tasks edge predicates */
  hasTasks?: InputMaybe<Scalars['Boolean']['input']>
  hasTasksWith?: InputMaybe<Array<TaskWhereInput>>
  /** template_creators edge predicates */
  hasTemplateCreators?: InputMaybe<Scalars['Boolean']['input']>
  hasTemplateCreatorsWith?: InputMaybe<Array<GroupWhereInput>>
  /** templates edge predicates */
  hasTemplates?: InputMaybe<Scalars['Boolean']['input']>
  hasTemplatesWith?: InputMaybe<Array<TemplateWhereInput>>
  /** users edge predicates */
  hasUsers?: InputMaybe<Scalars['Boolean']['input']>
  hasUsersWith?: InputMaybe<Array<UserWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<OrganizationWhereInput>
  or?: InputMaybe<Array<OrganizationWhereInput>>
  /** parent_organization_id field predicates */
  parentOrganizationID?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDContains?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDGT?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDGTE?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  parentOrganizationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  parentOrganizationIDLT?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDLTE?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDNEQ?: InputMaybe<Scalars['ID']['input']>
  parentOrganizationIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  parentOrganizationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** personal_org field predicates */
  personalOrg?: InputMaybe<Scalars['Boolean']['input']>
  personalOrgIsNil?: InputMaybe<Scalars['Boolean']['input']>
  personalOrgNEQ?: InputMaybe<Scalars['Boolean']['input']>
  personalOrgNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/**
 * Information about pagination in a connection.
 * https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
 */
export interface PageInfo {
  __typename?: 'PageInfo'
  /** When paginating forwards, the cursor to continue. */
  endCursor?: Maybe<Scalars['Cursor']['output']>
  /** When paginating forwards, are there more items? */
  hasNextPage: Scalars['Boolean']['output']
  /** When paginating backwards, are there more items? */
  hasPreviousPage: Scalars['Boolean']['output']
  /** When paginating backwards, the cursor to continue. */
  startCursor?: Maybe<Scalars['Cursor']['output']>
}

/** Permission is enum for the permissions types */
export enum Permission {
  BLOCKED = 'BLOCKED',
  CREATOR = 'CREATOR',
  EDITOR = 'EDITOR',
  VIEWER = 'VIEWER',
}

export interface PersonalAccessToken extends Node {
  __typename?: 'PersonalAccessToken'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** a description of the token's purpose */
  description?: Maybe<Scalars['String']['output']>
  events: EventConnection
  /** when the token expires */
  expiresAt?: Maybe<Scalars['Time']['output']>
  id: Scalars['ID']['output']
  /** whether the token is active */
  isActive?: Maybe<Scalars['Boolean']['output']>
  lastUsedAt?: Maybe<Scalars['Time']['output']>
  /** the name associated with the token */
  name: Scalars['String']['output']
  organizations: OrganizationConnection
  owner: User
  /** when the token was revoked */
  revokedAt?: Maybe<Scalars['Time']['output']>
  /** the user who revoked the token */
  revokedBy?: Maybe<Scalars['String']['output']>
  /** the reason the token was revoked */
  revokedReason?: Maybe<Scalars['String']['output']>
  scopes?: Maybe<Array<Scalars['String']['output']>>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  token: Scalars['String']['output']
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

export interface PersonalAccessTokenEventsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EventOrder>>
  where?: InputMaybe<EventWhereInput>
}

export interface PersonalAccessTokenOrganizationsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<OrganizationOrder>>
  where?: InputMaybe<OrganizationWhereInput>
}

/** Return response for createBulkPersonalAccessToken mutation */
export interface PersonalAccessTokenBulkCreatePayload {
  __typename?: 'PersonalAccessTokenBulkCreatePayload'
  /** Created personalAccessTokens */
  personalAccessTokens?: Maybe<Array<PersonalAccessToken>>
}

/** A connection to a list of items. */
export interface PersonalAccessTokenConnection {
  __typename?: 'PersonalAccessTokenConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<PersonalAccessTokenEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createPersonalAccessToken mutation */
export interface PersonalAccessTokenCreatePayload {
  __typename?: 'PersonalAccessTokenCreatePayload'
  /** Created personalAccessToken */
  personalAccessToken: PersonalAccessToken
}

/** Return response for deletePersonalAccessToken mutation */
export interface PersonalAccessTokenDeletePayload {
  __typename?: 'PersonalAccessTokenDeletePayload'
  /** Deleted personalAccessToken ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface PersonalAccessTokenEdge {
  __typename?: 'PersonalAccessTokenEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<PersonalAccessToken>
}

/** Ordering options for PersonalAccessToken connections */
export interface PersonalAccessTokenOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order PersonalAccessTokens. */
  field: PersonalAccessTokenOrderField
}

/** Properties by which PersonalAccessToken connections can be ordered. */
export enum PersonalAccessTokenOrderField {
  created_at = 'created_at',
  expires_at = 'expires_at',
  is_active = 'is_active',
  last_used_at = 'last_used_at',
  name = 'name',
  updated_at = 'updated_at',
}

export interface PersonalAccessTokenSearchResult {
  __typename?: 'PersonalAccessTokenSearchResult'
  personalAccessTokens?: Maybe<Array<PersonalAccessToken>>
}

/** Return response for updatePersonalAccessToken mutation */
export interface PersonalAccessTokenUpdatePayload {
  __typename?: 'PersonalAccessTokenUpdatePayload'
  /** Updated personalAccessToken */
  personalAccessToken: PersonalAccessToken
}

/**
 * PersonalAccessTokenWhereInput is used for filtering PersonalAccessToken objects.
 * Input was generated by ent.
 */
export interface PersonalAccessTokenWhereInput {
  and?: InputMaybe<Array<PersonalAccessTokenWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** expires_at field predicates */
  expiresAt?: InputMaybe<Scalars['Time']['input']>
  expiresAtGT?: InputMaybe<Scalars['Time']['input']>
  expiresAtGTE?: InputMaybe<Scalars['Time']['input']>
  expiresAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  expiresAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  expiresAtLT?: InputMaybe<Scalars['Time']['input']>
  expiresAtLTE?: InputMaybe<Scalars['Time']['input']>
  expiresAtNEQ?: InputMaybe<Scalars['Time']['input']>
  expiresAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  expiresAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>
  /** organizations edge predicates */
  hasOrganizations?: InputMaybe<Scalars['Boolean']['input']>
  hasOrganizationsWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<UserWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** is_active field predicates */
  isActive?: InputMaybe<Scalars['Boolean']['input']>
  isActiveIsNil?: InputMaybe<Scalars['Boolean']['input']>
  isActiveNEQ?: InputMaybe<Scalars['Boolean']['input']>
  isActiveNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** last_used_at field predicates */
  lastUsedAt?: InputMaybe<Scalars['Time']['input']>
  lastUsedAtGT?: InputMaybe<Scalars['Time']['input']>
  lastUsedAtGTE?: InputMaybe<Scalars['Time']['input']>
  lastUsedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  lastUsedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  lastUsedAtLT?: InputMaybe<Scalars['Time']['input']>
  lastUsedAtLTE?: InputMaybe<Scalars['Time']['input']>
  lastUsedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  lastUsedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  lastUsedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<PersonalAccessTokenWhereInput>
  or?: InputMaybe<Array<PersonalAccessTokenWhereInput>>
  /** revoked_at field predicates */
  revokedAt?: InputMaybe<Scalars['Time']['input']>
  revokedAtGT?: InputMaybe<Scalars['Time']['input']>
  revokedAtGTE?: InputMaybe<Scalars['Time']['input']>
  revokedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  revokedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  revokedAtLT?: InputMaybe<Scalars['Time']['input']>
  revokedAtLTE?: InputMaybe<Scalars['Time']['input']>
  revokedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  revokedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  revokedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** revoked_by field predicates */
  revokedBy?: InputMaybe<Scalars['String']['input']>
  revokedByContains?: InputMaybe<Scalars['String']['input']>
  revokedByContainsFold?: InputMaybe<Scalars['String']['input']>
  revokedByEqualFold?: InputMaybe<Scalars['String']['input']>
  revokedByGT?: InputMaybe<Scalars['String']['input']>
  revokedByGTE?: InputMaybe<Scalars['String']['input']>
  revokedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  revokedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  revokedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  revokedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  revokedByLT?: InputMaybe<Scalars['String']['input']>
  revokedByLTE?: InputMaybe<Scalars['String']['input']>
  revokedByNEQ?: InputMaybe<Scalars['String']['input']>
  revokedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  revokedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** revoked_reason field predicates */
  revokedReason?: InputMaybe<Scalars['String']['input']>
  revokedReasonContains?: InputMaybe<Scalars['String']['input']>
  revokedReasonContainsFold?: InputMaybe<Scalars['String']['input']>
  revokedReasonEqualFold?: InputMaybe<Scalars['String']['input']>
  revokedReasonGT?: InputMaybe<Scalars['String']['input']>
  revokedReasonGTE?: InputMaybe<Scalars['String']['input']>
  revokedReasonHasPrefix?: InputMaybe<Scalars['String']['input']>
  revokedReasonHasSuffix?: InputMaybe<Scalars['String']['input']>
  revokedReasonIn?: InputMaybe<Array<Scalars['String']['input']>>
  revokedReasonIsNil?: InputMaybe<Scalars['Boolean']['input']>
  revokedReasonLT?: InputMaybe<Scalars['String']['input']>
  revokedReasonLTE?: InputMaybe<Scalars['String']['input']>
  revokedReasonNEQ?: InputMaybe<Scalars['String']['input']>
  revokedReasonNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  revokedReasonNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface Procedure extends Node {
  __typename?: 'Procedure'
  /** whether approval is required for edits to the procedure */
  approvalRequired?: Maybe<Scalars['Boolean']['output']>
  /** the group of users who are responsible for approving the procedure */
  approver?: Maybe<Group>
  /** the id of the group responsible for approving the procedure */
  approverID?: Maybe<Scalars['ID']['output']>
  /** groups that are blocked from viewing or editing the risk */
  blockedGroups?: Maybe<Array<Group>>
  controls: ControlConnection
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** temporary delegates for the procedure, used for temporary approval */
  delegate?: Maybe<Group>
  /** the id of the group responsible for approving the procedure */
  delegateID?: Maybe<Scalars['ID']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** details of the procedure */
  details?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  /** provides edit access to the risk to members of the group */
  editors?: Maybe<Array<Group>>
  id: Scalars['ID']['output']
  internalPolicies: InternalPolicyConnection
  /** the name of the procedure */
  name: Scalars['String']['output']
  narratives: NarrativeConnection
  owner?: Maybe<Organization>
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  /** type of the procedure, e.g. compliance, operational, health and safety, etc. */
  procedureType?: Maybe<Scalars['String']['output']>
  programs: ProgramConnection
  /** the date the procedure should be reviewed, calculated based on the review_frequency if not directly set */
  reviewDue?: Maybe<Scalars['Time']['output']>
  /** the frequency at which the procedure should be reviewed, used to calculate the review_due date */
  reviewFrequency?: Maybe<ProcedureFrequency>
  /** revision of the object as a semver (e.g. v1.0.0), by default any update will bump the patch version, unless the revision_bump field is set */
  revision?: Maybe<Scalars['String']['output']>
  risks: RiskConnection
  /** status of the procedure, e.g. draft, published, archived, etc. */
  status?: Maybe<ProcedureDocumentStatus>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  tasks: TaskConnection
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

export interface ProcedureControlsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlOrder>>
  where?: InputMaybe<ControlWhereInput>
}

export interface ProcedureInternalPoliciesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<InternalPolicyOrder>>
  where?: InputMaybe<InternalPolicyWhereInput>
}

export interface ProcedureNarrativesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<NarrativeOrder>>
  where?: InputMaybe<NarrativeWhereInput>
}

export interface ProcedureProgramsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProgramOrder>>
  where?: InputMaybe<ProgramWhereInput>
}

export interface ProcedureRisksArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<RiskOrder>>
  where?: InputMaybe<RiskWhereInput>
}

export interface ProcedureTasksArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<TaskOrder>>
  where?: InputMaybe<TaskWhereInput>
}

/** Return response for createBulkProcedure mutation */
export interface ProcedureBulkCreatePayload {
  __typename?: 'ProcedureBulkCreatePayload'
  /** Created procedures */
  procedures?: Maybe<Array<Procedure>>
}

/** A connection to a list of items. */
export interface ProcedureConnection {
  __typename?: 'ProcedureConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ProcedureEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createProcedure mutation */
export interface ProcedureCreatePayload {
  __typename?: 'ProcedureCreatePayload'
  /** Created procedure */
  procedure: Procedure
}

/** Return response for deleteProcedure mutation */
export interface ProcedureDeletePayload {
  __typename?: 'ProcedureDeletePayload'
  /** Deleted procedure ID */
  deletedID: Scalars['ID']['output']
}

/** ProcedureDocumentStatus is enum for the field status */
export enum ProcedureDocumentStatus {
  APPROVED = 'APPROVED',
  ARCHIVED = 'ARCHIVED',
  DRAFT = 'DRAFT',
  NEEDS_APPROVAL = 'NEEDS_APPROVAL',
  PUBLISHED = 'PUBLISHED',
}

/** An edge in a connection. */
export interface ProcedureEdge {
  __typename?: 'ProcedureEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<Procedure>
}

/** ProcedureFrequency is enum for the field review_frequency */
export enum ProcedureFrequency {
  BIANNUALLY = 'BIANNUALLY',
  MONTHLY = 'MONTHLY',
  QUARTERLY = 'QUARTERLY',
  YEARLY = 'YEARLY',
}

export interface ProcedureHistory extends Node {
  __typename?: 'ProcedureHistory'
  /** whether approval is required for edits to the procedure */
  approvalRequired?: Maybe<Scalars['Boolean']['output']>
  /** the id of the group responsible for approving the procedure */
  approverID?: Maybe<Scalars['String']['output']>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** the id of the group responsible for approving the procedure */
  delegateID?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** details of the procedure */
  details?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** the name of the procedure */
  name: Scalars['String']['output']
  operation: ProcedureHistoryOpType
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['String']['output']>
  /** type of the procedure, e.g. compliance, operational, health and safety, etc. */
  procedureType?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** the date the procedure should be reviewed, calculated based on the review_frequency if not directly set */
  reviewDue?: Maybe<Scalars['Time']['output']>
  /** the frequency at which the procedure should be reviewed, used to calculate the review_due date */
  reviewFrequency?: Maybe<ProcedureHistoryFrequency>
  /** revision of the object as a semver (e.g. v1.0.0), by default any update will bump the patch version, unless the revision_bump field is set */
  revision?: Maybe<Scalars['String']['output']>
  /** status of the procedure, e.g. draft, published, archived, etc. */
  status?: Maybe<ProcedureHistoryDocumentStatus>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface ProcedureHistoryConnection {
  __typename?: 'ProcedureHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ProcedureHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** ProcedureHistoryDocumentStatus is enum for the field status */
export enum ProcedureHistoryDocumentStatus {
  APPROVED = 'APPROVED',
  ARCHIVED = 'ARCHIVED',
  DRAFT = 'DRAFT',
  NEEDS_APPROVAL = 'NEEDS_APPROVAL',
  PUBLISHED = 'PUBLISHED',
}

/** An edge in a connection. */
export interface ProcedureHistoryEdge {
  __typename?: 'ProcedureHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<ProcedureHistory>
}

/** ProcedureHistoryFrequency is enum for the field review_frequency */
export enum ProcedureHistoryFrequency {
  BIANNUALLY = 'BIANNUALLY',
  MONTHLY = 'MONTHLY',
  QUARTERLY = 'QUARTERLY',
  YEARLY = 'YEARLY',
}

/** ProcedureHistoryOpType is enum for the field operation */
export enum ProcedureHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for ProcedureHistory connections */
export interface ProcedureHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order ProcedureHistories. */
  field: ProcedureHistoryOrderField
}

/** Properties by which ProcedureHistory connections can be ordered. */
export enum ProcedureHistoryOrderField {
  REVIEW_FREQUENCY = 'REVIEW_FREQUENCY',
  STATUS = 'STATUS',
  created_at = 'created_at',
  name = 'name',
  review_due = 'review_due',
  revision = 'revision',
  updated_at = 'updated_at',
}

/**
 * ProcedureHistoryWhereInput is used for filtering ProcedureHistory objects.
 * Input was generated by ent.
 */
export interface ProcedureHistoryWhereInput {
  and?: InputMaybe<Array<ProcedureHistoryWhereInput>>
  /** approval_required field predicates */
  approvalRequired?: InputMaybe<Scalars['Boolean']['input']>
  approvalRequiredIsNil?: InputMaybe<Scalars['Boolean']['input']>
  approvalRequiredNEQ?: InputMaybe<Scalars['Boolean']['input']>
  approvalRequiredNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** approver_id field predicates */
  approverID?: InputMaybe<Scalars['String']['input']>
  approverIDContains?: InputMaybe<Scalars['String']['input']>
  approverIDContainsFold?: InputMaybe<Scalars['String']['input']>
  approverIDEqualFold?: InputMaybe<Scalars['String']['input']>
  approverIDGT?: InputMaybe<Scalars['String']['input']>
  approverIDGTE?: InputMaybe<Scalars['String']['input']>
  approverIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  approverIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  approverIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  approverIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  approverIDLT?: InputMaybe<Scalars['String']['input']>
  approverIDLTE?: InputMaybe<Scalars['String']['input']>
  approverIDNEQ?: InputMaybe<Scalars['String']['input']>
  approverIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  approverIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** delegate_id field predicates */
  delegateID?: InputMaybe<Scalars['String']['input']>
  delegateIDContains?: InputMaybe<Scalars['String']['input']>
  delegateIDContainsFold?: InputMaybe<Scalars['String']['input']>
  delegateIDEqualFold?: InputMaybe<Scalars['String']['input']>
  delegateIDGT?: InputMaybe<Scalars['String']['input']>
  delegateIDGTE?: InputMaybe<Scalars['String']['input']>
  delegateIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  delegateIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  delegateIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  delegateIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  delegateIDLT?: InputMaybe<Scalars['String']['input']>
  delegateIDLTE?: InputMaybe<Scalars['String']['input']>
  delegateIDNEQ?: InputMaybe<Scalars['String']['input']>
  delegateIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  delegateIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** details field predicates */
  details?: InputMaybe<Scalars['String']['input']>
  detailsContains?: InputMaybe<Scalars['String']['input']>
  detailsContainsFold?: InputMaybe<Scalars['String']['input']>
  detailsEqualFold?: InputMaybe<Scalars['String']['input']>
  detailsGT?: InputMaybe<Scalars['String']['input']>
  detailsGTE?: InputMaybe<Scalars['String']['input']>
  detailsHasPrefix?: InputMaybe<Scalars['String']['input']>
  detailsHasSuffix?: InputMaybe<Scalars['String']['input']>
  detailsIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsIsNil?: InputMaybe<Scalars['Boolean']['input']>
  detailsLT?: InputMaybe<Scalars['String']['input']>
  detailsLTE?: InputMaybe<Scalars['String']['input']>
  detailsNEQ?: InputMaybe<Scalars['String']['input']>
  detailsNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<ProcedureHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<ProcedureHistoryOpType>
  operationIn?: InputMaybe<Array<ProcedureHistoryOpType>>
  operationNEQ?: InputMaybe<ProcedureHistoryOpType>
  operationNotIn?: InputMaybe<Array<ProcedureHistoryOpType>>
  or?: InputMaybe<Array<ProcedureHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** procedure_type field predicates */
  procedureType?: InputMaybe<Scalars['String']['input']>
  procedureTypeContains?: InputMaybe<Scalars['String']['input']>
  procedureTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  procedureTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  procedureTypeGT?: InputMaybe<Scalars['String']['input']>
  procedureTypeGTE?: InputMaybe<Scalars['String']['input']>
  procedureTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  procedureTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  procedureTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  procedureTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  procedureTypeLT?: InputMaybe<Scalars['String']['input']>
  procedureTypeLTE?: InputMaybe<Scalars['String']['input']>
  procedureTypeNEQ?: InputMaybe<Scalars['String']['input']>
  procedureTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  procedureTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** review_due field predicates */
  reviewDue?: InputMaybe<Scalars['Time']['input']>
  reviewDueGT?: InputMaybe<Scalars['Time']['input']>
  reviewDueGTE?: InputMaybe<Scalars['Time']['input']>
  reviewDueIn?: InputMaybe<Array<Scalars['Time']['input']>>
  reviewDueIsNil?: InputMaybe<Scalars['Boolean']['input']>
  reviewDueLT?: InputMaybe<Scalars['Time']['input']>
  reviewDueLTE?: InputMaybe<Scalars['Time']['input']>
  reviewDueNEQ?: InputMaybe<Scalars['Time']['input']>
  reviewDueNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  reviewDueNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** review_frequency field predicates */
  reviewFrequency?: InputMaybe<ProcedureHistoryFrequency>
  reviewFrequencyIn?: InputMaybe<Array<ProcedureHistoryFrequency>>
  reviewFrequencyIsNil?: InputMaybe<Scalars['Boolean']['input']>
  reviewFrequencyNEQ?: InputMaybe<ProcedureHistoryFrequency>
  reviewFrequencyNotIn?: InputMaybe<Array<ProcedureHistoryFrequency>>
  reviewFrequencyNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** revision field predicates */
  revision?: InputMaybe<Scalars['String']['input']>
  revisionContains?: InputMaybe<Scalars['String']['input']>
  revisionContainsFold?: InputMaybe<Scalars['String']['input']>
  revisionEqualFold?: InputMaybe<Scalars['String']['input']>
  revisionGT?: InputMaybe<Scalars['String']['input']>
  revisionGTE?: InputMaybe<Scalars['String']['input']>
  revisionHasPrefix?: InputMaybe<Scalars['String']['input']>
  revisionHasSuffix?: InputMaybe<Scalars['String']['input']>
  revisionIn?: InputMaybe<Array<Scalars['String']['input']>>
  revisionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  revisionLT?: InputMaybe<Scalars['String']['input']>
  revisionLTE?: InputMaybe<Scalars['String']['input']>
  revisionNEQ?: InputMaybe<Scalars['String']['input']>
  revisionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  revisionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<ProcedureHistoryDocumentStatus>
  statusIn?: InputMaybe<Array<ProcedureHistoryDocumentStatus>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusNEQ?: InputMaybe<ProcedureHistoryDocumentStatus>
  statusNotIn?: InputMaybe<Array<ProcedureHistoryDocumentStatus>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for Procedure connections */
export interface ProcedureOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Procedures. */
  field: ProcedureOrderField
}

/** Properties by which Procedure connections can be ordered. */
export enum ProcedureOrderField {
  REVIEW_FREQUENCY = 'REVIEW_FREQUENCY',
  STATUS = 'STATUS',
  created_at = 'created_at',
  name = 'name',
  review_due = 'review_due',
  revision = 'revision',
  updated_at = 'updated_at',
}

export interface ProcedureSearchResult {
  __typename?: 'ProcedureSearchResult'
  procedures?: Maybe<Array<Procedure>>
}

/** Return response for updateProcedure mutation */
export interface ProcedureUpdatePayload {
  __typename?: 'ProcedureUpdatePayload'
  /** Updated procedure */
  procedure: Procedure
}

/**
 * ProcedureWhereInput is used for filtering Procedure objects.
 * Input was generated by ent.
 */
export interface ProcedureWhereInput {
  and?: InputMaybe<Array<ProcedureWhereInput>>
  /** approval_required field predicates */
  approvalRequired?: InputMaybe<Scalars['Boolean']['input']>
  approvalRequiredIsNil?: InputMaybe<Scalars['Boolean']['input']>
  approvalRequiredNEQ?: InputMaybe<Scalars['Boolean']['input']>
  approvalRequiredNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** approver_id field predicates */
  approverID?: InputMaybe<Scalars['ID']['input']>
  approverIDContains?: InputMaybe<Scalars['ID']['input']>
  approverIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  approverIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  approverIDGT?: InputMaybe<Scalars['ID']['input']>
  approverIDGTE?: InputMaybe<Scalars['ID']['input']>
  approverIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  approverIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  approverIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  approverIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  approverIDLT?: InputMaybe<Scalars['ID']['input']>
  approverIDLTE?: InputMaybe<Scalars['ID']['input']>
  approverIDNEQ?: InputMaybe<Scalars['ID']['input']>
  approverIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  approverIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** delegate_id field predicates */
  delegateID?: InputMaybe<Scalars['ID']['input']>
  delegateIDContains?: InputMaybe<Scalars['ID']['input']>
  delegateIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  delegateIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  delegateIDGT?: InputMaybe<Scalars['ID']['input']>
  delegateIDGTE?: InputMaybe<Scalars['ID']['input']>
  delegateIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  delegateIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  delegateIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  delegateIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  delegateIDLT?: InputMaybe<Scalars['ID']['input']>
  delegateIDLTE?: InputMaybe<Scalars['ID']['input']>
  delegateIDNEQ?: InputMaybe<Scalars['ID']['input']>
  delegateIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  delegateIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** details field predicates */
  details?: InputMaybe<Scalars['String']['input']>
  detailsContains?: InputMaybe<Scalars['String']['input']>
  detailsContainsFold?: InputMaybe<Scalars['String']['input']>
  detailsEqualFold?: InputMaybe<Scalars['String']['input']>
  detailsGT?: InputMaybe<Scalars['String']['input']>
  detailsGTE?: InputMaybe<Scalars['String']['input']>
  detailsHasPrefix?: InputMaybe<Scalars['String']['input']>
  detailsHasSuffix?: InputMaybe<Scalars['String']['input']>
  detailsIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsIsNil?: InputMaybe<Scalars['Boolean']['input']>
  detailsLT?: InputMaybe<Scalars['String']['input']>
  detailsLTE?: InputMaybe<Scalars['String']['input']>
  detailsNEQ?: InputMaybe<Scalars['String']['input']>
  detailsNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** approver edge predicates */
  hasApprover?: InputMaybe<Scalars['Boolean']['input']>
  hasApproverWith?: InputMaybe<Array<GroupWhereInput>>
  /** blocked_groups edge predicates */
  hasBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  hasBlockedGroupsWith?: InputMaybe<Array<GroupWhereInput>>
  /** controls edge predicates */
  hasControls?: InputMaybe<Scalars['Boolean']['input']>
  hasControlsWith?: InputMaybe<Array<ControlWhereInput>>
  /** delegate edge predicates */
  hasDelegate?: InputMaybe<Scalars['Boolean']['input']>
  hasDelegateWith?: InputMaybe<Array<GroupWhereInput>>
  /** editors edge predicates */
  hasEditors?: InputMaybe<Scalars['Boolean']['input']>
  hasEditorsWith?: InputMaybe<Array<GroupWhereInput>>
  /** internal_policies edge predicates */
  hasInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>
  hasInternalPoliciesWith?: InputMaybe<Array<InternalPolicyWhereInput>>
  /** narratives edge predicates */
  hasNarratives?: InputMaybe<Scalars['Boolean']['input']>
  hasNarrativesWith?: InputMaybe<Array<NarrativeWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>
  /** risks edge predicates */
  hasRisks?: InputMaybe<Scalars['Boolean']['input']>
  hasRisksWith?: InputMaybe<Array<RiskWhereInput>>
  /** tasks edge predicates */
  hasTasks?: InputMaybe<Scalars['Boolean']['input']>
  hasTasksWith?: InputMaybe<Array<TaskWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<ProcedureWhereInput>
  or?: InputMaybe<Array<ProcedureWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** procedure_type field predicates */
  procedureType?: InputMaybe<Scalars['String']['input']>
  procedureTypeContains?: InputMaybe<Scalars['String']['input']>
  procedureTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  procedureTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  procedureTypeGT?: InputMaybe<Scalars['String']['input']>
  procedureTypeGTE?: InputMaybe<Scalars['String']['input']>
  procedureTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  procedureTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  procedureTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  procedureTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  procedureTypeLT?: InputMaybe<Scalars['String']['input']>
  procedureTypeLTE?: InputMaybe<Scalars['String']['input']>
  procedureTypeNEQ?: InputMaybe<Scalars['String']['input']>
  procedureTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  procedureTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** review_due field predicates */
  reviewDue?: InputMaybe<Scalars['Time']['input']>
  reviewDueGT?: InputMaybe<Scalars['Time']['input']>
  reviewDueGTE?: InputMaybe<Scalars['Time']['input']>
  reviewDueIn?: InputMaybe<Array<Scalars['Time']['input']>>
  reviewDueIsNil?: InputMaybe<Scalars['Boolean']['input']>
  reviewDueLT?: InputMaybe<Scalars['Time']['input']>
  reviewDueLTE?: InputMaybe<Scalars['Time']['input']>
  reviewDueNEQ?: InputMaybe<Scalars['Time']['input']>
  reviewDueNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  reviewDueNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** review_frequency field predicates */
  reviewFrequency?: InputMaybe<ProcedureFrequency>
  reviewFrequencyIn?: InputMaybe<Array<ProcedureFrequency>>
  reviewFrequencyIsNil?: InputMaybe<Scalars['Boolean']['input']>
  reviewFrequencyNEQ?: InputMaybe<ProcedureFrequency>
  reviewFrequencyNotIn?: InputMaybe<Array<ProcedureFrequency>>
  reviewFrequencyNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** revision field predicates */
  revision?: InputMaybe<Scalars['String']['input']>
  revisionContains?: InputMaybe<Scalars['String']['input']>
  revisionContainsFold?: InputMaybe<Scalars['String']['input']>
  revisionEqualFold?: InputMaybe<Scalars['String']['input']>
  revisionGT?: InputMaybe<Scalars['String']['input']>
  revisionGTE?: InputMaybe<Scalars['String']['input']>
  revisionHasPrefix?: InputMaybe<Scalars['String']['input']>
  revisionHasSuffix?: InputMaybe<Scalars['String']['input']>
  revisionIn?: InputMaybe<Array<Scalars['String']['input']>>
  revisionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  revisionLT?: InputMaybe<Scalars['String']['input']>
  revisionLTE?: InputMaybe<Scalars['String']['input']>
  revisionNEQ?: InputMaybe<Scalars['String']['input']>
  revisionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  revisionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<ProcedureDocumentStatus>
  statusIn?: InputMaybe<Array<ProcedureDocumentStatus>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusNEQ?: InputMaybe<ProcedureDocumentStatus>
  statusNotIn?: InputMaybe<Array<ProcedureDocumentStatus>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface Program extends Node {
  __typename?: 'Program'
  actionPlans: ActionPlanConnection
  /** can the auditor read comments */
  auditorReadComments: Scalars['Boolean']['output']
  /** is the program ready for the auditor */
  auditorReady: Scalars['Boolean']['output']
  /** can the auditor write comments */
  auditorWriteComments: Scalars['Boolean']['output']
  /** groups that are blocked from viewing or editing the risk */
  blockedGroups?: Maybe<Array<Group>>
  controlObjectives: ControlObjectiveConnection
  controls: ControlConnection
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** the description of the program */
  description?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  /** provides edit access to the risk to members of the group */
  editors?: Maybe<Array<Group>>
  /** the end date of the period */
  endDate?: Maybe<Scalars['Time']['output']>
  evidence: EvidenceConnection
  files: FileConnection
  id: Scalars['ID']['output']
  internalPolicies: InternalPolicyConnection
  members: ProgramMembershipConnection
  /** the name of the program */
  name: Scalars['String']['output']
  narratives: NarrativeConnection
  notes: NoteConnection
  owner?: Maybe<Organization>
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  procedures: ProcedureConnection
  risks: RiskConnection
  /** the start date of the period */
  startDate?: Maybe<Scalars['Time']['output']>
  /** the status of the program */
  status: ProgramProgramStatus
  subcontrols: SubcontrolConnection
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  tasks: TaskConnection
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  users: UserConnection
  /** provides view access to the risk to members of the group */
  viewers?: Maybe<Array<Group>>
}

export interface ProgramActionPlansArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ActionPlanOrder>>
  where?: InputMaybe<ActionPlanWhereInput>
}

export interface ProgramControlObjectivesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlObjectiveOrder>>
  where?: InputMaybe<ControlObjectiveWhereInput>
}

export interface ProgramControlsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlOrder>>
  where?: InputMaybe<ControlWhereInput>
}

export interface ProgramEvidenceArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EvidenceOrder>>
  where?: InputMaybe<EvidenceWhereInput>
}

export interface ProgramFilesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<FileOrder>>
  where?: InputMaybe<FileWhereInput>
}

export interface ProgramInternalPoliciesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<InternalPolicyOrder>>
  where?: InputMaybe<InternalPolicyWhereInput>
}

export interface ProgramMembersArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProgramMembershipOrder>>
  where?: InputMaybe<ProgramMembershipWhereInput>
}

export interface ProgramNarrativesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<NarrativeOrder>>
  where?: InputMaybe<NarrativeWhereInput>
}

export interface ProgramNotesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<NoteOrder>>
  where?: InputMaybe<NoteWhereInput>
}

export interface ProgramProceduresArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProcedureOrder>>
  where?: InputMaybe<ProcedureWhereInput>
}

export interface ProgramRisksArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<RiskOrder>>
  where?: InputMaybe<RiskWhereInput>
}

export interface ProgramSubcontrolsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<SubcontrolOrder>>
  where?: InputMaybe<SubcontrolWhereInput>
}

export interface ProgramTasksArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<TaskOrder>>
  where?: InputMaybe<TaskWhereInput>
}

export interface ProgramUsersArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<UserOrder>>
  where?: InputMaybe<UserWhereInput>
}

/** Return response for createBulkProgram mutation */
export interface ProgramBulkCreatePayload {
  __typename?: 'ProgramBulkCreatePayload'
  /** Created programs */
  programs?: Maybe<Array<Program>>
}

/** A connection to a list of items. */
export interface ProgramConnection {
  __typename?: 'ProgramConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ProgramEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createProgram mutation */
export interface ProgramCreatePayload {
  __typename?: 'ProgramCreatePayload'
  /** Created program */
  program: Program
}

/** Return response for deleteProgram mutation */
export interface ProgramDeletePayload {
  __typename?: 'ProgramDeletePayload'
  /** Deleted program ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface ProgramEdge {
  __typename?: 'ProgramEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<Program>
}

export interface ProgramHistory extends Node {
  __typename?: 'ProgramHistory'
  /** can the auditor read comments */
  auditorReadComments: Scalars['Boolean']['output']
  /** is the program ready for the auditor */
  auditorReady: Scalars['Boolean']['output']
  /** can the auditor write comments */
  auditorWriteComments: Scalars['Boolean']['output']
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** the description of the program */
  description?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  /** the end date of the period */
  endDate?: Maybe<Scalars['Time']['output']>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** the name of the program */
  name: Scalars['String']['output']
  operation: ProgramHistoryOpType
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** the start date of the period */
  startDate?: Maybe<Scalars['Time']['output']>
  /** the status of the program */
  status: ProgramHistoryProgramStatus
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface ProgramHistoryConnection {
  __typename?: 'ProgramHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ProgramHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface ProgramHistoryEdge {
  __typename?: 'ProgramHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<ProgramHistory>
}

/** ProgramHistoryOpType is enum for the field operation */
export enum ProgramHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for ProgramHistory connections */
export interface ProgramHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order ProgramHistories. */
  field: ProgramHistoryOrderField
}

/** Properties by which ProgramHistory connections can be ordered. */
export enum ProgramHistoryOrderField {
  STATUS = 'STATUS',
  created_at = 'created_at',
  end_date = 'end_date',
  name = 'name',
  start_date = 'start_date',
  updated_at = 'updated_at',
}

/** ProgramHistoryProgramStatus is enum for the field status */
export enum ProgramHistoryProgramStatus {
  ACTION_REQUIRED = 'ACTION_REQUIRED',
  COMPLETED = 'COMPLETED',
  IN_PROGRESS = 'IN_PROGRESS',
  NOT_STARTED = 'NOT_STARTED',
  READY_FOR_AUDITOR = 'READY_FOR_AUDITOR',
}

/**
 * ProgramHistoryWhereInput is used for filtering ProgramHistory objects.
 * Input was generated by ent.
 */
export interface ProgramHistoryWhereInput {
  and?: InputMaybe<Array<ProgramHistoryWhereInput>>
  /** auditor_read_comments field predicates */
  auditorReadComments?: InputMaybe<Scalars['Boolean']['input']>
  auditorReadCommentsNEQ?: InputMaybe<Scalars['Boolean']['input']>
  /** auditor_ready field predicates */
  auditorReady?: InputMaybe<Scalars['Boolean']['input']>
  auditorReadyNEQ?: InputMaybe<Scalars['Boolean']['input']>
  /** auditor_write_comments field predicates */
  auditorWriteComments?: InputMaybe<Scalars['Boolean']['input']>
  auditorWriteCommentsNEQ?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>
  descriptionContains?: InputMaybe<Scalars['String']['input']>
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>
  descriptionGT?: InputMaybe<Scalars['String']['input']>
  descriptionGTE?: InputMaybe<Scalars['String']['input']>
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  descriptionLT?: InputMaybe<Scalars['String']['input']>
  descriptionLTE?: InputMaybe<Scalars['String']['input']>
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** end_date field predicates */
  endDate?: InputMaybe<Scalars['Time']['input']>
  endDateGT?: InputMaybe<Scalars['Time']['input']>
  endDateGTE?: InputMaybe<Scalars['Time']['input']>
  endDateIn?: InputMaybe<Array<Scalars['Time']['input']>>
  endDateIsNil?: InputMaybe<Scalars['Boolean']['input']>
  endDateLT?: InputMaybe<Scalars['Time']['input']>
  endDateLTE?: InputMaybe<Scalars['Time']['input']>
  endDateNEQ?: InputMaybe<Scalars['Time']['input']>
  endDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  endDateNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<ProgramHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<ProgramHistoryOpType>
  operationIn?: InputMaybe<Array<ProgramHistoryOpType>>
  operationNEQ?: InputMaybe<ProgramHistoryOpType>
  operationNotIn?: InputMaybe<Array<ProgramHistoryOpType>>
  or?: InputMaybe<Array<ProgramHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** start_date field predicates */
  startDate?: InputMaybe<Scalars['Time']['input']>
  startDateGT?: InputMaybe<Scalars['Time']['input']>
  startDateGTE?: InputMaybe<Scalars['Time']['input']>
  startDateIn?: InputMaybe<Array<Scalars['Time']['input']>>
  startDateIsNil?: InputMaybe<Scalars['Boolean']['input']>
  startDateLT?: InputMaybe<Scalars['Time']['input']>
  startDateLTE?: InputMaybe<Scalars['Time']['input']>
  startDateNEQ?: InputMaybe<Scalars['Time']['input']>
  startDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  startDateNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<ProgramHistoryProgramStatus>
  statusIn?: InputMaybe<Array<ProgramHistoryProgramStatus>>
  statusNEQ?: InputMaybe<ProgramHistoryProgramStatus>
  statusNotIn?: InputMaybe<Array<ProgramHistoryProgramStatus>>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface ProgramMembership extends Node {
  __typename?: 'ProgramMembership'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  id: Scalars['ID']['output']
  program: Program
  programID: Scalars['ID']['output']
  role: ProgramMembershipRole
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  user: User
  userID: Scalars['ID']['output']
}

/** Return response for createBulkProgramMembership mutation */
export interface ProgramMembershipBulkCreatePayload {
  __typename?: 'ProgramMembershipBulkCreatePayload'
  /** Created programMemberships */
  programMemberships?: Maybe<Array<ProgramMembership>>
}

/** A connection to a list of items. */
export interface ProgramMembershipConnection {
  __typename?: 'ProgramMembershipConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ProgramMembershipEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createProgramMembership mutation */
export interface ProgramMembershipCreatePayload {
  __typename?: 'ProgramMembershipCreatePayload'
  /** Created programMembership */
  programMembership: ProgramMembership
}

/** Return response for deleteProgramMembership mutation */
export interface ProgramMembershipDeletePayload {
  __typename?: 'ProgramMembershipDeletePayload'
  /** Deleted programMembership ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface ProgramMembershipEdge {
  __typename?: 'ProgramMembershipEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<ProgramMembership>
}

export interface ProgramMembershipHistory extends Node {
  __typename?: 'ProgramMembershipHistory'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  operation: ProgramMembershipHistoryOpType
  programID: Scalars['String']['output']
  ref?: Maybe<Scalars['String']['output']>
  role: ProgramMembershipHistoryRole
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  userID: Scalars['String']['output']
}

/** A connection to a list of items. */
export interface ProgramMembershipHistoryConnection {
  __typename?: 'ProgramMembershipHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ProgramMembershipHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface ProgramMembershipHistoryEdge {
  __typename?: 'ProgramMembershipHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<ProgramMembershipHistory>
}

/** ProgramMembershipHistoryOpType is enum for the field operation */
export enum ProgramMembershipHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for ProgramMembershipHistory connections */
export interface ProgramMembershipHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order ProgramMembershipHistories. */
  field: ProgramMembershipHistoryOrderField
}

/** Properties by which ProgramMembershipHistory connections can be ordered. */
export enum ProgramMembershipHistoryOrderField {
  ROLE = 'ROLE',
  created_at = 'created_at',
  updated_at = 'updated_at',
}

/** ProgramMembershipHistoryRole is enum for the field role */
export enum ProgramMembershipHistoryRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER',
}

/**
 * ProgramMembershipHistoryWhereInput is used for filtering ProgramMembershipHistory objects.
 * Input was generated by ent.
 */
export interface ProgramMembershipHistoryWhereInput {
  and?: InputMaybe<Array<ProgramMembershipHistoryWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<ProgramMembershipHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<ProgramMembershipHistoryOpType>
  operationIn?: InputMaybe<Array<ProgramMembershipHistoryOpType>>
  operationNEQ?: InputMaybe<ProgramMembershipHistoryOpType>
  operationNotIn?: InputMaybe<Array<ProgramMembershipHistoryOpType>>
  or?: InputMaybe<Array<ProgramMembershipHistoryWhereInput>>
  /** program_id field predicates */
  programID?: InputMaybe<Scalars['String']['input']>
  programIDContains?: InputMaybe<Scalars['String']['input']>
  programIDContainsFold?: InputMaybe<Scalars['String']['input']>
  programIDEqualFold?: InputMaybe<Scalars['String']['input']>
  programIDGT?: InputMaybe<Scalars['String']['input']>
  programIDGTE?: InputMaybe<Scalars['String']['input']>
  programIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  programIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  programIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  programIDLT?: InputMaybe<Scalars['String']['input']>
  programIDLTE?: InputMaybe<Scalars['String']['input']>
  programIDNEQ?: InputMaybe<Scalars['String']['input']>
  programIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** role field predicates */
  role?: InputMaybe<ProgramMembershipHistoryRole>
  roleIn?: InputMaybe<Array<ProgramMembershipHistoryRole>>
  roleNEQ?: InputMaybe<ProgramMembershipHistoryRole>
  roleNotIn?: InputMaybe<Array<ProgramMembershipHistoryRole>>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** user_id field predicates */
  userID?: InputMaybe<Scalars['String']['input']>
  userIDContains?: InputMaybe<Scalars['String']['input']>
  userIDContainsFold?: InputMaybe<Scalars['String']['input']>
  userIDEqualFold?: InputMaybe<Scalars['String']['input']>
  userIDGT?: InputMaybe<Scalars['String']['input']>
  userIDGTE?: InputMaybe<Scalars['String']['input']>
  userIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  userIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  userIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  userIDLT?: InputMaybe<Scalars['String']['input']>
  userIDLTE?: InputMaybe<Scalars['String']['input']>
  userIDNEQ?: InputMaybe<Scalars['String']['input']>
  userIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
}

/** Ordering options for ProgramMembership connections */
export interface ProgramMembershipOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order ProgramMemberships. */
  field: ProgramMembershipOrderField
}

/** Properties by which ProgramMembership connections can be ordered. */
export enum ProgramMembershipOrderField {
  ROLE = 'ROLE',
  created_at = 'created_at',
  updated_at = 'updated_at',
}

/** ProgramMembershipRole is enum for the field role */
export enum ProgramMembershipRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER',
}

/** Return response for updateProgramMembership mutation */
export interface ProgramMembershipUpdatePayload {
  __typename?: 'ProgramMembershipUpdatePayload'
  /** Updated programMembership */
  programMembership: ProgramMembership
}

/**
 * ProgramMembershipWhereInput is used for filtering ProgramMembership objects.
 * Input was generated by ent.
 */
export interface ProgramMembershipWhereInput {
  and?: InputMaybe<Array<ProgramMembershipWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<ProgramMembershipWhereInput>
  or?: InputMaybe<Array<ProgramMembershipWhereInput>>
  programID?: InputMaybe<Scalars['String']['input']>
  /** role field predicates */
  role?: InputMaybe<ProgramMembershipRole>
  roleIn?: InputMaybe<Array<ProgramMembershipRole>>
  roleNEQ?: InputMaybe<ProgramMembershipRole>
  roleNotIn?: InputMaybe<Array<ProgramMembershipRole>>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  userID?: InputMaybe<Scalars['String']['input']>
}

/** Ordering options for Program connections */
export interface ProgramOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Programs. */
  field: ProgramOrderField
}

/** Properties by which Program connections can be ordered. */
export enum ProgramOrderField {
  STATUS = 'STATUS',
  created_at = 'created_at',
  end_date = 'end_date',
  name = 'name',
  start_date = 'start_date',
  updated_at = 'updated_at',
}

/** ProgramProgramStatus is enum for the field status */
export enum ProgramProgramStatus {
  ACTION_REQUIRED = 'ACTION_REQUIRED',
  COMPLETED = 'COMPLETED',
  IN_PROGRESS = 'IN_PROGRESS',
  NOT_STARTED = 'NOT_STARTED',
  READY_FOR_AUDITOR = 'READY_FOR_AUDITOR',
}

export interface ProgramSearchResult {
  __typename?: 'ProgramSearchResult'
  programs?: Maybe<Array<Program>>
}

/** Return response for updateProgram mutation */
export interface ProgramUpdatePayload {
  __typename?: 'ProgramUpdatePayload'
  /** Updated program */
  program: Program
}

/**
 * ProgramWhereInput is used for filtering Program objects.
 * Input was generated by ent.
 */
export interface ProgramWhereInput {
  and?: InputMaybe<Array<ProgramWhereInput>>
  /** auditor_read_comments field predicates */
  auditorReadComments?: InputMaybe<Scalars['Boolean']['input']>
  auditorReadCommentsNEQ?: InputMaybe<Scalars['Boolean']['input']>
  /** auditor_ready field predicates */
  auditorReady?: InputMaybe<Scalars['Boolean']['input']>
  auditorReadyNEQ?: InputMaybe<Scalars['Boolean']['input']>
  /** auditor_write_comments field predicates */
  auditorWriteComments?: InputMaybe<Scalars['Boolean']['input']>
  auditorWriteCommentsNEQ?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>
  descriptionContains?: InputMaybe<Scalars['String']['input']>
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>
  descriptionGT?: InputMaybe<Scalars['String']['input']>
  descriptionGTE?: InputMaybe<Scalars['String']['input']>
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  descriptionLT?: InputMaybe<Scalars['String']['input']>
  descriptionLTE?: InputMaybe<Scalars['String']['input']>
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** end_date field predicates */
  endDate?: InputMaybe<Scalars['Time']['input']>
  endDateGT?: InputMaybe<Scalars['Time']['input']>
  endDateGTE?: InputMaybe<Scalars['Time']['input']>
  endDateIn?: InputMaybe<Array<Scalars['Time']['input']>>
  endDateIsNil?: InputMaybe<Scalars['Boolean']['input']>
  endDateLT?: InputMaybe<Scalars['Time']['input']>
  endDateLTE?: InputMaybe<Scalars['Time']['input']>
  endDateNEQ?: InputMaybe<Scalars['Time']['input']>
  endDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  endDateNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** action_plans edge predicates */
  hasActionPlans?: InputMaybe<Scalars['Boolean']['input']>
  hasActionPlansWith?: InputMaybe<Array<ActionPlanWhereInput>>
  /** blocked_groups edge predicates */
  hasBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  hasBlockedGroupsWith?: InputMaybe<Array<GroupWhereInput>>
  /** control_objectives edge predicates */
  hasControlObjectives?: InputMaybe<Scalars['Boolean']['input']>
  hasControlObjectivesWith?: InputMaybe<Array<ControlObjectiveWhereInput>>
  /** controls edge predicates */
  hasControls?: InputMaybe<Scalars['Boolean']['input']>
  hasControlsWith?: InputMaybe<Array<ControlWhereInput>>
  /** editors edge predicates */
  hasEditors?: InputMaybe<Scalars['Boolean']['input']>
  hasEditorsWith?: InputMaybe<Array<GroupWhereInput>>
  /** evidence edge predicates */
  hasEvidence?: InputMaybe<Scalars['Boolean']['input']>
  hasEvidenceWith?: InputMaybe<Array<EvidenceWhereInput>>
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>
  /** internal_policies edge predicates */
  hasInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>
  hasInternalPoliciesWith?: InputMaybe<Array<InternalPolicyWhereInput>>
  /** members edge predicates */
  hasMembers?: InputMaybe<Scalars['Boolean']['input']>
  hasMembersWith?: InputMaybe<Array<ProgramMembershipWhereInput>>
  /** narratives edge predicates */
  hasNarratives?: InputMaybe<Scalars['Boolean']['input']>
  hasNarrativesWith?: InputMaybe<Array<NarrativeWhereInput>>
  /** notes edge predicates */
  hasNotes?: InputMaybe<Scalars['Boolean']['input']>
  hasNotesWith?: InputMaybe<Array<NoteWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** procedures edge predicates */
  hasProcedures?: InputMaybe<Scalars['Boolean']['input']>
  hasProceduresWith?: InputMaybe<Array<ProcedureWhereInput>>
  /** risks edge predicates */
  hasRisks?: InputMaybe<Scalars['Boolean']['input']>
  hasRisksWith?: InputMaybe<Array<RiskWhereInput>>
  /** subcontrols edge predicates */
  hasSubcontrols?: InputMaybe<Scalars['Boolean']['input']>
  hasSubcontrolsWith?: InputMaybe<Array<SubcontrolWhereInput>>
  /** tasks edge predicates */
  hasTasks?: InputMaybe<Scalars['Boolean']['input']>
  hasTasksWith?: InputMaybe<Array<TaskWhereInput>>
  /** users edge predicates */
  hasUsers?: InputMaybe<Scalars['Boolean']['input']>
  hasUsersWith?: InputMaybe<Array<UserWhereInput>>
  /** viewers edge predicates */
  hasViewers?: InputMaybe<Scalars['Boolean']['input']>
  hasViewersWith?: InputMaybe<Array<GroupWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<ProgramWhereInput>
  or?: InputMaybe<Array<ProgramWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** start_date field predicates */
  startDate?: InputMaybe<Scalars['Time']['input']>
  startDateGT?: InputMaybe<Scalars['Time']['input']>
  startDateGTE?: InputMaybe<Scalars['Time']['input']>
  startDateIn?: InputMaybe<Array<Scalars['Time']['input']>>
  startDateIsNil?: InputMaybe<Scalars['Boolean']['input']>
  startDateLT?: InputMaybe<Scalars['Time']['input']>
  startDateLTE?: InputMaybe<Scalars['Time']['input']>
  startDateNEQ?: InputMaybe<Scalars['Time']['input']>
  startDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  startDateNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<ProgramProgramStatus>
  statusIn?: InputMaybe<Array<ProgramProgramStatus>>
  statusNEQ?: InputMaybe<ProgramProgramStatus>
  statusNotIn?: InputMaybe<Array<ProgramProgramStatus>>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface Query {
  __typename?: 'Query'
  /** Look up actionPlan by ID */
  actionPlan: ActionPlan
  actionPlanHistories: ActionPlanHistoryConnection
  /** Search across ActionPlan objects */
  actionPlanSearch?: Maybe<ActionPlanSearchResult>
  actionPlans: ActionPlanConnection
  /** Search across APIToken objects */
  adminAPITokenSearch?: Maybe<ApiTokenSearchResult>
  /** Search across ActionPlan objects */
  adminActionPlanSearch?: Maybe<ActionPlanSearchResult>
  /** Search across Contact objects */
  adminContactSearch?: Maybe<ContactSearchResult>
  /** Search across ControlImplementation objects */
  adminControlImplementationSearch?: Maybe<ControlImplementationSearchResult>
  /** Search across ControlObjective objects */
  adminControlObjectiveSearch?: Maybe<ControlObjectiveSearchResult>
  /** Search across Control objects */
  adminControlSearch?: Maybe<ControlSearchResult>
  /** Search across DocumentData objects */
  adminDocumentDataSearch?: Maybe<DocumentDataSearchResult>
  /** Search across Entity objects */
  adminEntitySearch?: Maybe<EntitySearchResult>
  /** Search across EntityType objects */
  adminEntityTypeSearch?: Maybe<EntityTypeSearchResult>
  /** Search across Event objects */
  adminEventSearch?: Maybe<EventSearchResult>
  /** Search across Evidence objects */
  adminEvidenceSearch?: Maybe<EvidenceSearchResult>
  /** Search across File objects */
  adminFileSearch?: Maybe<FileSearchResult>
  /** Search across Group objects */
  adminGroupSearch?: Maybe<GroupSearchResult>
  /** Search across Integration objects */
  adminIntegrationSearch?: Maybe<IntegrationSearchResult>
  /** Search across InternalPolicy objects */
  adminInternalPolicySearch?: Maybe<InternalPolicySearchResult>
  /** Search across MappedControl objects */
  adminMappedControlSearch?: Maybe<MappedControlSearchResult>
  /** Search across Narrative objects */
  adminNarrativeSearch?: Maybe<NarrativeSearchResult>
  /** Search across OrgSubscription objects */
  adminOrgSubscriptionSearch?: Maybe<OrgSubscriptionSearchResult>
  /** Search across Organization objects */
  adminOrganizationSearch?: Maybe<OrganizationSearchResult>
  /** Search across OrganizationSetting objects */
  adminOrganizationSettingSearch?: Maybe<OrganizationSettingSearchResult>
  /** Search across PersonalAccessToken objects */
  adminPersonalAccessTokenSearch?: Maybe<PersonalAccessTokenSearchResult>
  /** Search across Procedure objects */
  adminProcedureSearch?: Maybe<ProcedureSearchResult>
  /** Search across Program objects */
  adminProgramSearch?: Maybe<ProgramSearchResult>
  /** Search across Risk objects */
  adminRiskSearch?: Maybe<RiskSearchResult>
  /** Admin search across all objects */
  adminSearch?: Maybe<SearchResultConnection>
  /** Search across Standard objects */
  adminStandardSearch?: Maybe<StandardSearchResult>
  /** Search across Subcontrol objects */
  adminSubcontrolSearch?: Maybe<SubcontrolSearchResult>
  /** Search across Subscriber objects */
  adminSubscriberSearch?: Maybe<SubscriberSearchResult>
  /** Search across Task objects */
  adminTaskSearch?: Maybe<TaskSearchResult>
  /** Search across Template objects */
  adminTemplateSearch?: Maybe<TemplateSearchResult>
  /** Search across User objects */
  adminUserSearch?: Maybe<UserSearchResult>
  /** Search across UserSetting objects */
  adminUserSettingSearch?: Maybe<UserSettingSearchResult>
  /** Look up apiToken by ID */
  apiToken: ApiToken
  /** Search across APIToken objects */
  apiTokenSearch?: Maybe<ApiTokenSearchResult>
  apiTokens: ApiTokenConnection
  auditLogs: AuditLogConnection
  /** Look up contact by ID */
  contact: Contact
  contactHistories: ContactHistoryConnection
  /** Search across Contact objects */
  contactSearch?: Maybe<ContactSearchResult>
  contacts: ContactConnection
  /** Look up control by ID */
  control: Control
  controlHistories: ControlHistoryConnection
  /** Look up controlImplementation by ID */
  controlImplementation: ControlImplementation
  controlImplementationHistories: ControlImplementationHistoryConnection
  /** Search across ControlImplementation objects */
  controlImplementationSearch?: Maybe<ControlImplementationSearchResult>
  controlImplementations: ControlImplementationConnection
  /** Look up controlObjective by ID */
  controlObjective: ControlObjective
  controlObjectiveHistories: ControlObjectiveHistoryConnection
  /** Search across ControlObjective objects */
  controlObjectiveSearch?: Maybe<ControlObjectiveSearchResult>
  controlObjectives: ControlObjectiveConnection
  /** Search across Control objects */
  controlSearch?: Maybe<ControlSearchResult>
  controls: ControlConnection
  /** Look up documentData by ID */
  documentData: DocumentData
  documentDataHistories: DocumentDataHistoryConnection
  /** Search across DocumentData objects */
  documentDataSearch?: Maybe<DocumentDataSearchResult>
  documentDataSlice: DocumentDataConnection
  entities: EntityConnection
  /** Look up entity by ID */
  entity: Entity
  entityHistories: EntityHistoryConnection
  /** Search across Entity objects */
  entitySearch?: Maybe<EntitySearchResult>
  /** Look up entityType by ID */
  entityType: EntityType
  entityTypeHistories: EntityTypeHistoryConnection
  /** Search across EntityType objects */
  entityTypeSearch?: Maybe<EntityTypeSearchResult>
  entityTypes: EntityTypeConnection
  /** Look up event by ID */
  event: Event
  eventHistories: EventHistoryConnection
  /** Search across Event objects */
  eventSearch?: Maybe<EventSearchResult>
  events: EventConnection
  /** Look up evidence by ID */
  evidence: Evidence
  evidenceHistories: EvidenceHistoryConnection
  /** Search across Evidence objects */
  evidenceSearch?: Maybe<EvidenceSearchResult>
  evidences: EvidenceConnection
  /** Look up file by ID */
  file: File
  fileHistories: FileHistoryConnection
  /** Search across File objects */
  fileSearch?: Maybe<FileSearchResult>
  files: FileConnection
  /** Look up group by ID */
  group: Group
  groupHistories: GroupHistoryConnection
  /** Look up groupMembership by ID */
  groupMembership: GroupMembership
  groupMembershipHistories: GroupMembershipHistoryConnection
  groupMemberships: GroupMembershipConnection
  /** Search across Group objects */
  groupSearch?: Maybe<GroupSearchResult>
  /** Look up groupSetting by ID */
  groupSetting: GroupSetting
  groupSettingHistories: GroupSettingHistoryConnection
  groupSettings: GroupSettingConnection
  groups: GroupConnection
  /** Look up hush by ID */
  hush: Hush
  hushHistories: HushHistoryConnection
  hushes: HushConnection
  /** Look up integration by ID */
  integration: Integration
  integrationHistories: IntegrationHistoryConnection
  /** Search across Integration objects */
  integrationSearch?: Maybe<IntegrationSearchResult>
  integrations: IntegrationConnection
  internalPolicies: InternalPolicyConnection
  /** Look up internalPolicy by ID */
  internalPolicy: InternalPolicy
  internalPolicyHistories: InternalPolicyHistoryConnection
  /** Search across InternalPolicy objects */
  internalPolicySearch?: Maybe<InternalPolicySearchResult>
  /** Look up invite by ID */
  invite: Invite
  invites: InviteConnection
  /** Look up mappedControl by ID */
  mappedControl: MappedControl
  mappedControlHistories: MappedControlHistoryConnection
  /** Search across MappedControl objects */
  mappedControlSearch?: Maybe<MappedControlSearchResult>
  mappedControls: MappedControlConnection
  /** Look up narrative by ID */
  narrative: Narrative
  narrativeHistories: NarrativeHistoryConnection
  /** Search across Narrative objects */
  narrativeSearch?: Maybe<NarrativeSearchResult>
  narratives: NarrativeConnection
  /** Fetches an object given its ID. */
  node?: Maybe<Node>
  /** Lookup nodes by a list of IDs. */
  nodes: Array<Maybe<Node>>
  /** Look up note by ID */
  note: Note
  noteHistories: NoteHistoryConnection
  notes: NoteConnection
  /** Look up orgMembership by ID */
  orgMembership: OrgMembership
  orgMembershipHistories: OrgMembershipHistoryConnection
  orgMemberships: OrgMembershipConnection
  /** Look up orgSubscription by ID */
  orgSubscription: OrgSubscription
  orgSubscriptionHistories: OrgSubscriptionHistoryConnection
  /** Search across OrgSubscription objects */
  orgSubscriptionSearch?: Maybe<OrgSubscriptionSearchResult>
  orgSubscriptions: OrgSubscriptionConnection
  /** Look up organization by ID */
  organization: Organization
  organizationHistories: OrganizationHistoryConnection
  /** Search across Organization objects */
  organizationSearch?: Maybe<OrganizationSearchResult>
  /** Look up organizationSetting by ID */
  organizationSetting: OrganizationSetting
  organizationSettingHistories: OrganizationSettingHistoryConnection
  /** Search across OrganizationSetting objects */
  organizationSettingSearch?: Maybe<OrganizationSettingSearchResult>
  organizationSettings: OrganizationSettingConnection
  organizations: OrganizationConnection
  /** Look up personalAccessToken by ID */
  personalAccessToken: PersonalAccessToken
  /** Search across PersonalAccessToken objects */
  personalAccessTokenSearch?: Maybe<PersonalAccessTokenSearchResult>
  personalAccessTokens: PersonalAccessTokenConnection
  /** Look up procedure by ID */
  procedure: Procedure
  procedureHistories: ProcedureHistoryConnection
  /** Search across Procedure objects */
  procedureSearch?: Maybe<ProcedureSearchResult>
  procedures: ProcedureConnection
  /** Look up program by ID */
  program: Program
  programHistories: ProgramHistoryConnection
  /** Look up programMembership by ID */
  programMembership: ProgramMembership
  programMembershipHistories: ProgramMembershipHistoryConnection
  programMemberships: ProgramMembershipConnection
  /** Search across Program objects */
  programSearch?: Maybe<ProgramSearchResult>
  programs: ProgramConnection
  /** Look up risk by ID */
  risk: Risk
  riskHistories: RiskHistoryConnection
  /** Search across Risk objects */
  riskSearch?: Maybe<RiskSearchResult>
  risks: RiskConnection
  /** Search across all objects */
  search?: Maybe<SearchResultConnection>
  /** Look up user authorized user */
  self: User
  /** Look up standard by ID */
  standard: Standard
  standardHistories: StandardHistoryConnection
  /** Search across Standard objects */
  standardSearch?: Maybe<StandardSearchResult>
  standards: StandardConnection
  /** Look up subcontrol by ID */
  subcontrol: Subcontrol
  subcontrolHistories: SubcontrolHistoryConnection
  /** Search across Subcontrol objects */
  subcontrolSearch?: Maybe<SubcontrolSearchResult>
  subcontrols: SubcontrolConnection
  /** Look up subscriber by Email */
  subscriber: Subscriber
  /** Search across Subscriber objects */
  subscriberSearch?: Maybe<SubscriberSearchResult>
  subscribers: SubscriberConnection
  /** Look up task by ID */
  task: Task
  taskHistories: TaskHistoryConnection
  /** Search across Task objects */
  taskSearch?: Maybe<TaskSearchResult>
  tasks: TaskConnection
  /** Look up template by ID */
  template: Template
  templateHistories: TemplateHistoryConnection
  /** Search across Template objects */
  templateSearch?: Maybe<TemplateSearchResult>
  templates: TemplateConnection
  /** Look up tfaSetting for the current user */
  tfaSetting: TfaSetting
  tfaSettings: TfaSettingConnection
  /** Look up user by ID */
  user: User
  userHistories: UserHistoryConnection
  /** Search across User objects */
  userSearch?: Maybe<UserSearchResult>
  /** Look up userSetting by ID */
  userSetting: UserSetting
  userSettingHistories: UserSettingHistoryConnection
  /** Search across UserSetting objects */
  userSettingSearch?: Maybe<UserSettingSearchResult>
  userSettings: UserSettingConnection
  users: UserConnection
}

export interface QueryActionPlanArgs {
  id: Scalars['ID']['input']
}

export interface QueryActionPlanHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<ActionPlanHistoryOrder>
  where?: InputMaybe<ActionPlanHistoryWhereInput>
}

export interface QueryActionPlanSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryActionPlansArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ActionPlanOrder>>
  where?: InputMaybe<ActionPlanWhereInput>
}

export interface QueryAdminApiTokenSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminActionPlanSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminContactSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminControlImplementationSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminControlObjectiveSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminControlSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminDocumentDataSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminEntitySearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminEntityTypeSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminEventSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminEvidenceSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminFileSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminGroupSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminIntegrationSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminInternalPolicySearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminMappedControlSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminNarrativeSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminOrgSubscriptionSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminOrganizationSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminOrganizationSettingSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminPersonalAccessTokenSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminProcedureSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminProgramSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminRiskSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminStandardSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminSubcontrolSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminSubscriberSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminTaskSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminTemplateSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminUserSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryAdminUserSettingSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryApiTokenArgs {
  id: Scalars['ID']['input']
}

export interface QueryApiTokenSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryApiTokensArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ApiTokenOrder>>
  where?: InputMaybe<ApiTokenWhereInput>
}

export interface QueryAuditLogsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  where?: InputMaybe<AuditLogWhereInput>
}

export interface QueryContactArgs {
  id: Scalars['ID']['input']
}

export interface QueryContactHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<ContactHistoryOrder>
  where?: InputMaybe<ContactHistoryWhereInput>
}

export interface QueryContactSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryContactsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ContactOrder>>
  where?: InputMaybe<ContactWhereInput>
}

export interface QueryControlArgs {
  id: Scalars['ID']['input']
}

export interface QueryControlHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<ControlHistoryOrder>
  where?: InputMaybe<ControlHistoryWhereInput>
}

export interface QueryControlImplementationArgs {
  id: Scalars['ID']['input']
}

export interface QueryControlImplementationHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<ControlImplementationHistoryOrder>
  where?: InputMaybe<ControlImplementationHistoryWhereInput>
}

export interface QueryControlImplementationSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryControlImplementationsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlImplementationOrder>>
  where?: InputMaybe<ControlImplementationWhereInput>
}

export interface QueryControlObjectiveArgs {
  id: Scalars['ID']['input']
}

export interface QueryControlObjectiveHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<ControlObjectiveHistoryOrder>
  where?: InputMaybe<ControlObjectiveHistoryWhereInput>
}

export interface QueryControlObjectiveSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryControlObjectivesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlObjectiveOrder>>
  where?: InputMaybe<ControlObjectiveWhereInput>
}

export interface QueryControlSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryControlsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlOrder>>
  where?: InputMaybe<ControlWhereInput>
}

export interface QueryDocumentDataArgs {
  id: Scalars['ID']['input']
}

export interface QueryDocumentDataHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<DocumentDataHistoryOrder>
  where?: InputMaybe<DocumentDataHistoryWhereInput>
}

export interface QueryDocumentDataSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryDocumentDataSliceArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<DocumentDataOrder>>
  where?: InputMaybe<DocumentDataWhereInput>
}

export interface QueryEntitiesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EntityOrder>>
  where?: InputMaybe<EntityWhereInput>
}

export interface QueryEntityArgs {
  id: Scalars['ID']['input']
}

export interface QueryEntityHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<EntityHistoryOrder>
  where?: InputMaybe<EntityHistoryWhereInput>
}

export interface QueryEntitySearchArgs {
  query: Scalars['String']['input']
}

export interface QueryEntityTypeArgs {
  id: Scalars['ID']['input']
}

export interface QueryEntityTypeHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<EntityTypeHistoryOrder>
  where?: InputMaybe<EntityTypeHistoryWhereInput>
}

export interface QueryEntityTypeSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryEntityTypesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EntityTypeOrder>>
  where?: InputMaybe<EntityTypeWhereInput>
}

export interface QueryEventArgs {
  id: Scalars['ID']['input']
}

export interface QueryEventHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<EventHistoryOrder>
  where?: InputMaybe<EventHistoryWhereInput>
}

export interface QueryEventSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryEventsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EventOrder>>
  where?: InputMaybe<EventWhereInput>
}

export interface QueryEvidenceArgs {
  id: Scalars['ID']['input']
}

export interface QueryEvidenceHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<EvidenceHistoryOrder>
  where?: InputMaybe<EvidenceHistoryWhereInput>
}

export interface QueryEvidenceSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryEvidencesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EvidenceOrder>>
  where?: InputMaybe<EvidenceWhereInput>
}

export interface QueryFileArgs {
  id: Scalars['ID']['input']
}

export interface QueryFileHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<FileHistoryOrder>
  where?: InputMaybe<FileHistoryWhereInput>
}

export interface QueryFileSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryFilesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<FileOrder>>
  where?: InputMaybe<FileWhereInput>
}

export interface QueryGroupArgs {
  id: Scalars['ID']['input']
}

export interface QueryGroupHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<GroupHistoryOrder>
  where?: InputMaybe<GroupHistoryWhereInput>
}

export interface QueryGroupMembershipArgs {
  id: Scalars['ID']['input']
}

export interface QueryGroupMembershipHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<GroupMembershipHistoryOrder>
  where?: InputMaybe<GroupMembershipHistoryWhereInput>
}

export interface QueryGroupMembershipsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<GroupMembershipOrder>>
  where?: InputMaybe<GroupMembershipWhereInput>
}

export interface QueryGroupSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryGroupSettingArgs {
  id: Scalars['ID']['input']
}

export interface QueryGroupSettingHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<GroupSettingHistoryOrder>
  where?: InputMaybe<GroupSettingHistoryWhereInput>
}

export interface QueryGroupSettingsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<GroupSettingOrder>>
  where?: InputMaybe<GroupSettingWhereInput>
}

export interface QueryGroupsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<GroupOrder>>
  where?: InputMaybe<GroupWhereInput>
}

export interface QueryHushArgs {
  id: Scalars['ID']['input']
}

export interface QueryHushHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<HushHistoryOrder>
  where?: InputMaybe<HushHistoryWhereInput>
}

export interface QueryHushesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<HushOrder>>
  where?: InputMaybe<HushWhereInput>
}

export interface QueryIntegrationArgs {
  id: Scalars['ID']['input']
}

export interface QueryIntegrationHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<IntegrationHistoryOrder>
  where?: InputMaybe<IntegrationHistoryWhereInput>
}

export interface QueryIntegrationSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryIntegrationsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<IntegrationOrder>>
  where?: InputMaybe<IntegrationWhereInput>
}

export interface QueryInternalPoliciesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<InternalPolicyOrder>>
  where?: InputMaybe<InternalPolicyWhereInput>
}

export interface QueryInternalPolicyArgs {
  id: Scalars['ID']['input']
}

export interface QueryInternalPolicyHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<InternalPolicyHistoryOrder>
  where?: InputMaybe<InternalPolicyHistoryWhereInput>
}

export interface QueryInternalPolicySearchArgs {
  query: Scalars['String']['input']
}

export interface QueryInviteArgs {
  id: Scalars['ID']['input']
}

export interface QueryInvitesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<InviteOrder>>
  where?: InputMaybe<InviteWhereInput>
}

export interface QueryMappedControlArgs {
  id: Scalars['ID']['input']
}

export interface QueryMappedControlHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<MappedControlHistoryOrder>
  where?: InputMaybe<MappedControlHistoryWhereInput>
}

export interface QueryMappedControlSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryMappedControlsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<MappedControlOrder>>
  where?: InputMaybe<MappedControlWhereInput>
}

export interface QueryNarrativeArgs {
  id: Scalars['ID']['input']
}

export interface QueryNarrativeHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<NarrativeHistoryOrder>
  where?: InputMaybe<NarrativeHistoryWhereInput>
}

export interface QueryNarrativeSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryNarrativesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<NarrativeOrder>>
  where?: InputMaybe<NarrativeWhereInput>
}

export interface QueryNodeArgs {
  id: Scalars['ID']['input']
}

export interface QueryNodesArgs {
  ids: Array<Scalars['ID']['input']>
}

export interface QueryNoteArgs {
  id: Scalars['ID']['input']
}

export interface QueryNoteHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<NoteHistoryOrder>
  where?: InputMaybe<NoteHistoryWhereInput>
}

export interface QueryNotesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<NoteOrder>>
  where?: InputMaybe<NoteWhereInput>
}

export interface QueryOrgMembershipArgs {
  id: Scalars['ID']['input']
}

export interface QueryOrgMembershipHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<OrgMembershipHistoryOrder>
  where?: InputMaybe<OrgMembershipHistoryWhereInput>
}

export interface QueryOrgMembershipsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<OrgMembershipOrder>>
  where?: InputMaybe<OrgMembershipWhereInput>
}

export interface QueryOrgSubscriptionArgs {
  id: Scalars['ID']['input']
}

export interface QueryOrgSubscriptionHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<OrgSubscriptionHistoryOrder>
  where?: InputMaybe<OrgSubscriptionHistoryWhereInput>
}

export interface QueryOrgSubscriptionSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryOrgSubscriptionsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<OrgSubscriptionOrder>
  where?: InputMaybe<OrgSubscriptionWhereInput>
}

export interface QueryOrganizationArgs {
  id: Scalars['ID']['input']
}

export interface QueryOrganizationHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<OrganizationHistoryOrder>
  where?: InputMaybe<OrganizationHistoryWhereInput>
}

export interface QueryOrganizationSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryOrganizationSettingArgs {
  id: Scalars['ID']['input']
}

export interface QueryOrganizationSettingHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<OrganizationSettingHistoryOrder>
  where?: InputMaybe<OrganizationSettingHistoryWhereInput>
}

export interface QueryOrganizationSettingSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryOrganizationSettingsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<OrganizationSettingOrder>>
  where?: InputMaybe<OrganizationSettingWhereInput>
}

export interface QueryOrganizationsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<OrganizationOrder>>
  where?: InputMaybe<OrganizationWhereInput>
}

export interface QueryPersonalAccessTokenArgs {
  id: Scalars['ID']['input']
}

export interface QueryPersonalAccessTokenSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryPersonalAccessTokensArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<PersonalAccessTokenOrder>>
  where?: InputMaybe<PersonalAccessTokenWhereInput>
}

export interface QueryProcedureArgs {
  id: Scalars['ID']['input']
}

export interface QueryProcedureHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<ProcedureHistoryOrder>
  where?: InputMaybe<ProcedureHistoryWhereInput>
}

export interface QueryProcedureSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryProceduresArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProcedureOrder>>
  where?: InputMaybe<ProcedureWhereInput>
}

export interface QueryProgramArgs {
  id: Scalars['ID']['input']
}

export interface QueryProgramHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<ProgramHistoryOrder>
  where?: InputMaybe<ProgramHistoryWhereInput>
}

export interface QueryProgramMembershipArgs {
  id: Scalars['ID']['input']
}

export interface QueryProgramMembershipHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<ProgramMembershipHistoryOrder>
  where?: InputMaybe<ProgramMembershipHistoryWhereInput>
}

export interface QueryProgramMembershipsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProgramMembershipOrder>>
  where?: InputMaybe<ProgramMembershipWhereInput>
}

export interface QueryProgramSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryProgramsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProgramOrder>>
  where?: InputMaybe<ProgramWhereInput>
}

export interface QueryRiskArgs {
  id: Scalars['ID']['input']
}

export interface QueryRiskHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<RiskHistoryOrder>
  where?: InputMaybe<RiskHistoryWhereInput>
}

export interface QueryRiskSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryRisksArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<RiskOrder>>
  where?: InputMaybe<RiskWhereInput>
}

export interface QuerySearchArgs {
  query: Scalars['String']['input']
}

export interface QueryStandardArgs {
  id: Scalars['ID']['input']
}

export interface QueryStandardHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<StandardHistoryOrder>
  where?: InputMaybe<StandardHistoryWhereInput>
}

export interface QueryStandardSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryStandardsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<StandardOrder>>
  where?: InputMaybe<StandardWhereInput>
}

export interface QuerySubcontrolArgs {
  id: Scalars['ID']['input']
}

export interface QuerySubcontrolHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<SubcontrolHistoryOrder>
  where?: InputMaybe<SubcontrolHistoryWhereInput>
}

export interface QuerySubcontrolSearchArgs {
  query: Scalars['String']['input']
}

export interface QuerySubcontrolsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<SubcontrolOrder>>
  where?: InputMaybe<SubcontrolWhereInput>
}

export interface QuerySubscriberArgs {
  email: Scalars['String']['input']
}

export interface QuerySubscriberSearchArgs {
  query: Scalars['String']['input']
}

export interface QuerySubscribersArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<SubscriberOrder>>
  where?: InputMaybe<SubscriberWhereInput>
}

export interface QueryTaskArgs {
  id: Scalars['ID']['input']
}

export interface QueryTaskHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<TaskHistoryOrder>
  where?: InputMaybe<TaskHistoryWhereInput>
}

export interface QueryTaskSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryTasksArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<TaskOrder>>
  where?: InputMaybe<TaskWhereInput>
}

export interface QueryTemplateArgs {
  id: Scalars['ID']['input']
}

export interface QueryTemplateHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<TemplateHistoryOrder>
  where?: InputMaybe<TemplateHistoryWhereInput>
}

export interface QueryTemplateSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryTemplatesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<TemplateOrder>>
  where?: InputMaybe<TemplateWhereInput>
}

export interface QueryTfaSettingArgs {
  id?: InputMaybe<Scalars['ID']['input']>
}

export interface QueryTfaSettingsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<TfaSettingOrder>>
  where?: InputMaybe<TfaSettingWhereInput>
}

export interface QueryUserArgs {
  id: Scalars['ID']['input']
}

export interface QueryUserHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<UserHistoryOrder>
  where?: InputMaybe<UserHistoryWhereInput>
}

export interface QueryUserSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryUserSettingArgs {
  id: Scalars['ID']['input']
}

export interface QueryUserSettingHistoriesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<UserSettingHistoryOrder>
  where?: InputMaybe<UserSettingHistoryWhereInput>
}

export interface QueryUserSettingSearchArgs {
  query: Scalars['String']['input']
}

export interface QueryUserSettingsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<UserSettingOrder>>
  where?: InputMaybe<UserSettingWhereInput>
}

export interface QueryUsersArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<UserOrder>>
  where?: InputMaybe<UserWhereInput>
}

export interface Risk extends Node {
  __typename?: 'Risk'
  actionPlans: ActionPlanConnection
  /** groups that are blocked from viewing or editing the risk */
  blockedGroups?: Maybe<Array<Group>>
  /** business costs associated with the risk */
  businessCosts?: Maybe<Scalars['String']['output']>
  /** category of the risk, e.g. human resources, operations, IT, etc. */
  category?: Maybe<Scalars['String']['output']>
  controls: ControlConnection
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** temporary delegates for the risk, used for temporary ownership */
  delegate?: Maybe<Group>
  /** the id of the group responsible for risk oversight on behalf of the stakeholder */
  delegateID?: Maybe<Scalars['ID']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** details of the risk */
  details?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  /** provides edit access to the risk to members of the group */
  editors?: Maybe<Array<Group>>
  id: Scalars['ID']['output']
  /** impact of the risk -critical, high, medium, low */
  impact?: Maybe<RiskRiskImpact>
  /** likelihood of the risk occurring; unlikely, likely, highly likely */
  likelihood?: Maybe<RiskRiskLikelihood>
  /** mitigation for the risk */
  mitigation?: Maybe<Scalars['String']['output']>
  /** the name of the risk */
  name: Scalars['String']['output']
  owner?: Maybe<Organization>
  /** the ID of the organization owner of the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  procedures: ProcedureConnection
  programs: ProgramConnection
  /** type of the risk, e.g. strategic, operational, financial, external, etc. */
  riskType?: Maybe<Scalars['String']['output']>
  /** score of the risk based on impact and likelihood (1-4 unlikely, 5-9 likely, 10-16 highly likely, 17-20 critical) */
  score?: Maybe<Scalars['Int']['output']>
  /** the group of users who are responsible for risk oversight */
  stakeholder?: Maybe<Group>
  /** the id of the group responsible for risk oversight */
  stakeholderID?: Maybe<Scalars['ID']['output']>
  /** status of the risk - open, mitigated, ongoing, in-progress, and archived. */
  status?: Maybe<RiskRiskStatus>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  /** provides view access to the risk to members of the group */
  viewers?: Maybe<Array<Group>>
}

export interface RiskActionPlansArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ActionPlanOrder>>
  where?: InputMaybe<ActionPlanWhereInput>
}

export interface RiskControlsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlOrder>>
  where?: InputMaybe<ControlWhereInput>
}

export interface RiskProceduresArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProcedureOrder>>
  where?: InputMaybe<ProcedureWhereInput>
}

export interface RiskProgramsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProgramOrder>>
  where?: InputMaybe<ProgramWhereInput>
}

/** Return response for createBulkRisk mutation */
export interface RiskBulkCreatePayload {
  __typename?: 'RiskBulkCreatePayload'
  /** Created risks */
  risks?: Maybe<Array<Risk>>
}

/** A connection to a list of items. */
export interface RiskConnection {
  __typename?: 'RiskConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<RiskEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createRisk mutation */
export interface RiskCreatePayload {
  __typename?: 'RiskCreatePayload'
  /** Created risk */
  risk: Risk
}

/** Return response for deleteRisk mutation */
export interface RiskDeletePayload {
  __typename?: 'RiskDeletePayload'
  /** Deleted risk ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface RiskEdge {
  __typename?: 'RiskEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<Risk>
}

export interface RiskHistory extends Node {
  __typename?: 'RiskHistory'
  /** business costs associated with the risk */
  businessCosts?: Maybe<Scalars['String']['output']>
  /** category of the risk, e.g. human resources, operations, IT, etc. */
  category?: Maybe<Scalars['String']['output']>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** the id of the group responsible for risk oversight on behalf of the stakeholder */
  delegateID?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** details of the risk */
  details?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** impact of the risk -critical, high, medium, low */
  impact?: Maybe<RiskHistoryRiskImpact>
  /** likelihood of the risk occurring; unlikely, likely, highly likely */
  likelihood?: Maybe<RiskHistoryRiskLikelihood>
  /** mitigation for the risk */
  mitigation?: Maybe<Scalars['String']['output']>
  /** the name of the risk */
  name: Scalars['String']['output']
  operation: RiskHistoryOpType
  /** the ID of the organization owner of the object */
  ownerID?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** type of the risk, e.g. strategic, operational, financial, external, etc. */
  riskType?: Maybe<Scalars['String']['output']>
  /** score of the risk based on impact and likelihood (1-4 unlikely, 5-9 likely, 10-16 highly likely, 17-20 critical) */
  score?: Maybe<Scalars['Int']['output']>
  /** the id of the group responsible for risk oversight */
  stakeholderID?: Maybe<Scalars['String']['output']>
  /** status of the risk - open, mitigated, ongoing, in-progress, and archived. */
  status?: Maybe<RiskHistoryRiskStatus>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface RiskHistoryConnection {
  __typename?: 'RiskHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<RiskHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface RiskHistoryEdge {
  __typename?: 'RiskHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<RiskHistory>
}

/** RiskHistoryOpType is enum for the field operation */
export enum RiskHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for RiskHistory connections */
export interface RiskHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order RiskHistories. */
  field: RiskHistoryOrderField
}

/** Properties by which RiskHistory connections can be ordered. */
export enum RiskHistoryOrderField {
  IMPACT = 'IMPACT',
  LIKELIHOOD = 'LIKELIHOOD',
  STATUS = 'STATUS',
  business_costs = 'business_costs',
  category = 'category',
  created_at = 'created_at',
  name = 'name',
  risk_type = 'risk_type',
  score = 'score',
  updated_at = 'updated_at',
}

/** RiskHistoryRiskImpact is enum for the field impact */
export enum RiskHistoryRiskImpact {
  CRITICAL = 'CRITICAL',
  HIGH = 'HIGH',
  LOW = 'LOW',
  MODERATE = 'MODERATE',
}

/** RiskHistoryRiskLikelihood is enum for the field likelihood */
export enum RiskHistoryRiskLikelihood {
  HIGHLY_LIKELY = 'HIGHLY_LIKELY',
  LIKELY = 'LIKELY',
  UNLIKELY = 'UNLIKELY',
}

/** RiskHistoryRiskStatus is enum for the field status */
export enum RiskHistoryRiskStatus {
  ARCHIVED = 'ARCHIVED',
  IN_PROGRESS = 'IN_PROGRESS',
  MITIGATED = 'MITIGATED',
  ONGOING = 'ONGOING',
  OPEN = 'OPEN',
}

/**
 * RiskHistoryWhereInput is used for filtering RiskHistory objects.
 * Input was generated by ent.
 */
export interface RiskHistoryWhereInput {
  and?: InputMaybe<Array<RiskHistoryWhereInput>>
  /** business_costs field predicates */
  businessCosts?: InputMaybe<Scalars['String']['input']>
  businessCostsContains?: InputMaybe<Scalars['String']['input']>
  businessCostsContainsFold?: InputMaybe<Scalars['String']['input']>
  businessCostsEqualFold?: InputMaybe<Scalars['String']['input']>
  businessCostsGT?: InputMaybe<Scalars['String']['input']>
  businessCostsGTE?: InputMaybe<Scalars['String']['input']>
  businessCostsHasPrefix?: InputMaybe<Scalars['String']['input']>
  businessCostsHasSuffix?: InputMaybe<Scalars['String']['input']>
  businessCostsIn?: InputMaybe<Array<Scalars['String']['input']>>
  businessCostsIsNil?: InputMaybe<Scalars['Boolean']['input']>
  businessCostsLT?: InputMaybe<Scalars['String']['input']>
  businessCostsLTE?: InputMaybe<Scalars['String']['input']>
  businessCostsNEQ?: InputMaybe<Scalars['String']['input']>
  businessCostsNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  businessCostsNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** category field predicates */
  category?: InputMaybe<Scalars['String']['input']>
  categoryContains?: InputMaybe<Scalars['String']['input']>
  categoryContainsFold?: InputMaybe<Scalars['String']['input']>
  categoryEqualFold?: InputMaybe<Scalars['String']['input']>
  categoryGT?: InputMaybe<Scalars['String']['input']>
  categoryGTE?: InputMaybe<Scalars['String']['input']>
  categoryHasPrefix?: InputMaybe<Scalars['String']['input']>
  categoryHasSuffix?: InputMaybe<Scalars['String']['input']>
  categoryIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryIsNil?: InputMaybe<Scalars['Boolean']['input']>
  categoryLT?: InputMaybe<Scalars['String']['input']>
  categoryLTE?: InputMaybe<Scalars['String']['input']>
  categoryNEQ?: InputMaybe<Scalars['String']['input']>
  categoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** delegate_id field predicates */
  delegateID?: InputMaybe<Scalars['String']['input']>
  delegateIDContains?: InputMaybe<Scalars['String']['input']>
  delegateIDContainsFold?: InputMaybe<Scalars['String']['input']>
  delegateIDEqualFold?: InputMaybe<Scalars['String']['input']>
  delegateIDGT?: InputMaybe<Scalars['String']['input']>
  delegateIDGTE?: InputMaybe<Scalars['String']['input']>
  delegateIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  delegateIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  delegateIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  delegateIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  delegateIDLT?: InputMaybe<Scalars['String']['input']>
  delegateIDLTE?: InputMaybe<Scalars['String']['input']>
  delegateIDNEQ?: InputMaybe<Scalars['String']['input']>
  delegateIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  delegateIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** details field predicates */
  details?: InputMaybe<Scalars['String']['input']>
  detailsContains?: InputMaybe<Scalars['String']['input']>
  detailsContainsFold?: InputMaybe<Scalars['String']['input']>
  detailsEqualFold?: InputMaybe<Scalars['String']['input']>
  detailsGT?: InputMaybe<Scalars['String']['input']>
  detailsGTE?: InputMaybe<Scalars['String']['input']>
  detailsHasPrefix?: InputMaybe<Scalars['String']['input']>
  detailsHasSuffix?: InputMaybe<Scalars['String']['input']>
  detailsIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsIsNil?: InputMaybe<Scalars['Boolean']['input']>
  detailsLT?: InputMaybe<Scalars['String']['input']>
  detailsLTE?: InputMaybe<Scalars['String']['input']>
  detailsNEQ?: InputMaybe<Scalars['String']['input']>
  detailsNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** impact field predicates */
  impact?: InputMaybe<RiskHistoryRiskImpact>
  impactIn?: InputMaybe<Array<RiskHistoryRiskImpact>>
  impactIsNil?: InputMaybe<Scalars['Boolean']['input']>
  impactNEQ?: InputMaybe<RiskHistoryRiskImpact>
  impactNotIn?: InputMaybe<Array<RiskHistoryRiskImpact>>
  impactNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** likelihood field predicates */
  likelihood?: InputMaybe<RiskHistoryRiskLikelihood>
  likelihoodIn?: InputMaybe<Array<RiskHistoryRiskLikelihood>>
  likelihoodIsNil?: InputMaybe<Scalars['Boolean']['input']>
  likelihoodNEQ?: InputMaybe<RiskHistoryRiskLikelihood>
  likelihoodNotIn?: InputMaybe<Array<RiskHistoryRiskLikelihood>>
  likelihoodNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** mitigation field predicates */
  mitigation?: InputMaybe<Scalars['String']['input']>
  mitigationContains?: InputMaybe<Scalars['String']['input']>
  mitigationContainsFold?: InputMaybe<Scalars['String']['input']>
  mitigationEqualFold?: InputMaybe<Scalars['String']['input']>
  mitigationGT?: InputMaybe<Scalars['String']['input']>
  mitigationGTE?: InputMaybe<Scalars['String']['input']>
  mitigationHasPrefix?: InputMaybe<Scalars['String']['input']>
  mitigationHasSuffix?: InputMaybe<Scalars['String']['input']>
  mitigationIn?: InputMaybe<Array<Scalars['String']['input']>>
  mitigationIsNil?: InputMaybe<Scalars['Boolean']['input']>
  mitigationLT?: InputMaybe<Scalars['String']['input']>
  mitigationLTE?: InputMaybe<Scalars['String']['input']>
  mitigationNEQ?: InputMaybe<Scalars['String']['input']>
  mitigationNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  mitigationNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<RiskHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<RiskHistoryOpType>
  operationIn?: InputMaybe<Array<RiskHistoryOpType>>
  operationNEQ?: InputMaybe<RiskHistoryOpType>
  operationNotIn?: InputMaybe<Array<RiskHistoryOpType>>
  or?: InputMaybe<Array<RiskHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** risk_type field predicates */
  riskType?: InputMaybe<Scalars['String']['input']>
  riskTypeContains?: InputMaybe<Scalars['String']['input']>
  riskTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  riskTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  riskTypeGT?: InputMaybe<Scalars['String']['input']>
  riskTypeGTE?: InputMaybe<Scalars['String']['input']>
  riskTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  riskTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  riskTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  riskTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  riskTypeLT?: InputMaybe<Scalars['String']['input']>
  riskTypeLTE?: InputMaybe<Scalars['String']['input']>
  riskTypeNEQ?: InputMaybe<Scalars['String']['input']>
  riskTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  riskTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** score field predicates */
  score?: InputMaybe<Scalars['Int']['input']>
  scoreGT?: InputMaybe<Scalars['Int']['input']>
  scoreGTE?: InputMaybe<Scalars['Int']['input']>
  scoreIn?: InputMaybe<Array<Scalars['Int']['input']>>
  scoreIsNil?: InputMaybe<Scalars['Boolean']['input']>
  scoreLT?: InputMaybe<Scalars['Int']['input']>
  scoreLTE?: InputMaybe<Scalars['Int']['input']>
  scoreNEQ?: InputMaybe<Scalars['Int']['input']>
  scoreNotIn?: InputMaybe<Array<Scalars['Int']['input']>>
  scoreNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** stakeholder_id field predicates */
  stakeholderID?: InputMaybe<Scalars['String']['input']>
  stakeholderIDContains?: InputMaybe<Scalars['String']['input']>
  stakeholderIDContainsFold?: InputMaybe<Scalars['String']['input']>
  stakeholderIDEqualFold?: InputMaybe<Scalars['String']['input']>
  stakeholderIDGT?: InputMaybe<Scalars['String']['input']>
  stakeholderIDGTE?: InputMaybe<Scalars['String']['input']>
  stakeholderIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  stakeholderIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  stakeholderIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  stakeholderIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  stakeholderIDLT?: InputMaybe<Scalars['String']['input']>
  stakeholderIDLTE?: InputMaybe<Scalars['String']['input']>
  stakeholderIDNEQ?: InputMaybe<Scalars['String']['input']>
  stakeholderIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  stakeholderIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<RiskHistoryRiskStatus>
  statusIn?: InputMaybe<Array<RiskHistoryRiskStatus>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusNEQ?: InputMaybe<RiskHistoryRiskStatus>
  statusNotIn?: InputMaybe<Array<RiskHistoryRiskStatus>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for Risk connections */
export interface RiskOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Risks. */
  field: RiskOrderField
}

/** Properties by which Risk connections can be ordered. */
export enum RiskOrderField {
  IMPACT = 'IMPACT',
  LIKELIHOOD = 'LIKELIHOOD',
  STATUS = 'STATUS',
  business_costs = 'business_costs',
  category = 'category',
  created_at = 'created_at',
  name = 'name',
  risk_type = 'risk_type',
  score = 'score',
  updated_at = 'updated_at',
}

/** RiskRiskImpact is enum for the field impact */
export enum RiskRiskImpact {
  CRITICAL = 'CRITICAL',
  HIGH = 'HIGH',
  LOW = 'LOW',
  MODERATE = 'MODERATE',
}

/** RiskRiskLikelihood is enum for the field likelihood */
export enum RiskRiskLikelihood {
  HIGHLY_LIKELY = 'HIGHLY_LIKELY',
  LIKELY = 'LIKELY',
  UNLIKELY = 'UNLIKELY',
}

/** RiskRiskStatus is enum for the field status */
export enum RiskRiskStatus {
  ARCHIVED = 'ARCHIVED',
  IN_PROGRESS = 'IN_PROGRESS',
  MITIGATED = 'MITIGATED',
  ONGOING = 'ONGOING',
  OPEN = 'OPEN',
}

export interface RiskSearchResult {
  __typename?: 'RiskSearchResult'
  risks?: Maybe<Array<Risk>>
}

/** Return response for updateRisk mutation */
export interface RiskUpdatePayload {
  __typename?: 'RiskUpdatePayload'
  /** Updated risk */
  risk: Risk
}

/**
 * RiskWhereInput is used for filtering Risk objects.
 * Input was generated by ent.
 */
export interface RiskWhereInput {
  and?: InputMaybe<Array<RiskWhereInput>>
  /** business_costs field predicates */
  businessCosts?: InputMaybe<Scalars['String']['input']>
  businessCostsContains?: InputMaybe<Scalars['String']['input']>
  businessCostsContainsFold?: InputMaybe<Scalars['String']['input']>
  businessCostsEqualFold?: InputMaybe<Scalars['String']['input']>
  businessCostsGT?: InputMaybe<Scalars['String']['input']>
  businessCostsGTE?: InputMaybe<Scalars['String']['input']>
  businessCostsHasPrefix?: InputMaybe<Scalars['String']['input']>
  businessCostsHasSuffix?: InputMaybe<Scalars['String']['input']>
  businessCostsIn?: InputMaybe<Array<Scalars['String']['input']>>
  businessCostsIsNil?: InputMaybe<Scalars['Boolean']['input']>
  businessCostsLT?: InputMaybe<Scalars['String']['input']>
  businessCostsLTE?: InputMaybe<Scalars['String']['input']>
  businessCostsNEQ?: InputMaybe<Scalars['String']['input']>
  businessCostsNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  businessCostsNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** category field predicates */
  category?: InputMaybe<Scalars['String']['input']>
  categoryContains?: InputMaybe<Scalars['String']['input']>
  categoryContainsFold?: InputMaybe<Scalars['String']['input']>
  categoryEqualFold?: InputMaybe<Scalars['String']['input']>
  categoryGT?: InputMaybe<Scalars['String']['input']>
  categoryGTE?: InputMaybe<Scalars['String']['input']>
  categoryHasPrefix?: InputMaybe<Scalars['String']['input']>
  categoryHasSuffix?: InputMaybe<Scalars['String']['input']>
  categoryIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryIsNil?: InputMaybe<Scalars['Boolean']['input']>
  categoryLT?: InputMaybe<Scalars['String']['input']>
  categoryLTE?: InputMaybe<Scalars['String']['input']>
  categoryNEQ?: InputMaybe<Scalars['String']['input']>
  categoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** delegate_id field predicates */
  delegateID?: InputMaybe<Scalars['ID']['input']>
  delegateIDContains?: InputMaybe<Scalars['ID']['input']>
  delegateIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  delegateIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  delegateIDGT?: InputMaybe<Scalars['ID']['input']>
  delegateIDGTE?: InputMaybe<Scalars['ID']['input']>
  delegateIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  delegateIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  delegateIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  delegateIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  delegateIDLT?: InputMaybe<Scalars['ID']['input']>
  delegateIDLTE?: InputMaybe<Scalars['ID']['input']>
  delegateIDNEQ?: InputMaybe<Scalars['ID']['input']>
  delegateIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  delegateIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** details field predicates */
  details?: InputMaybe<Scalars['String']['input']>
  detailsContains?: InputMaybe<Scalars['String']['input']>
  detailsContainsFold?: InputMaybe<Scalars['String']['input']>
  detailsEqualFold?: InputMaybe<Scalars['String']['input']>
  detailsGT?: InputMaybe<Scalars['String']['input']>
  detailsGTE?: InputMaybe<Scalars['String']['input']>
  detailsHasPrefix?: InputMaybe<Scalars['String']['input']>
  detailsHasSuffix?: InputMaybe<Scalars['String']['input']>
  detailsIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsIsNil?: InputMaybe<Scalars['Boolean']['input']>
  detailsLT?: InputMaybe<Scalars['String']['input']>
  detailsLTE?: InputMaybe<Scalars['String']['input']>
  detailsNEQ?: InputMaybe<Scalars['String']['input']>
  detailsNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** action_plans edge predicates */
  hasActionPlans?: InputMaybe<Scalars['Boolean']['input']>
  hasActionPlansWith?: InputMaybe<Array<ActionPlanWhereInput>>
  /** blocked_groups edge predicates */
  hasBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  hasBlockedGroupsWith?: InputMaybe<Array<GroupWhereInput>>
  /** controls edge predicates */
  hasControls?: InputMaybe<Scalars['Boolean']['input']>
  hasControlsWith?: InputMaybe<Array<ControlWhereInput>>
  /** delegate edge predicates */
  hasDelegate?: InputMaybe<Scalars['Boolean']['input']>
  hasDelegateWith?: InputMaybe<Array<GroupWhereInput>>
  /** editors edge predicates */
  hasEditors?: InputMaybe<Scalars['Boolean']['input']>
  hasEditorsWith?: InputMaybe<Array<GroupWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** procedures edge predicates */
  hasProcedures?: InputMaybe<Scalars['Boolean']['input']>
  hasProceduresWith?: InputMaybe<Array<ProcedureWhereInput>>
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>
  /** stakeholder edge predicates */
  hasStakeholder?: InputMaybe<Scalars['Boolean']['input']>
  hasStakeholderWith?: InputMaybe<Array<GroupWhereInput>>
  /** viewers edge predicates */
  hasViewers?: InputMaybe<Scalars['Boolean']['input']>
  hasViewersWith?: InputMaybe<Array<GroupWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** impact field predicates */
  impact?: InputMaybe<RiskRiskImpact>
  impactIn?: InputMaybe<Array<RiskRiskImpact>>
  impactIsNil?: InputMaybe<Scalars['Boolean']['input']>
  impactNEQ?: InputMaybe<RiskRiskImpact>
  impactNotIn?: InputMaybe<Array<RiskRiskImpact>>
  impactNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** likelihood field predicates */
  likelihood?: InputMaybe<RiskRiskLikelihood>
  likelihoodIn?: InputMaybe<Array<RiskRiskLikelihood>>
  likelihoodIsNil?: InputMaybe<Scalars['Boolean']['input']>
  likelihoodNEQ?: InputMaybe<RiskRiskLikelihood>
  likelihoodNotIn?: InputMaybe<Array<RiskRiskLikelihood>>
  likelihoodNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** mitigation field predicates */
  mitigation?: InputMaybe<Scalars['String']['input']>
  mitigationContains?: InputMaybe<Scalars['String']['input']>
  mitigationContainsFold?: InputMaybe<Scalars['String']['input']>
  mitigationEqualFold?: InputMaybe<Scalars['String']['input']>
  mitigationGT?: InputMaybe<Scalars['String']['input']>
  mitigationGTE?: InputMaybe<Scalars['String']['input']>
  mitigationHasPrefix?: InputMaybe<Scalars['String']['input']>
  mitigationHasSuffix?: InputMaybe<Scalars['String']['input']>
  mitigationIn?: InputMaybe<Array<Scalars['String']['input']>>
  mitigationIsNil?: InputMaybe<Scalars['Boolean']['input']>
  mitigationLT?: InputMaybe<Scalars['String']['input']>
  mitigationLTE?: InputMaybe<Scalars['String']['input']>
  mitigationNEQ?: InputMaybe<Scalars['String']['input']>
  mitigationNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  mitigationNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<RiskWhereInput>
  or?: InputMaybe<Array<RiskWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** risk_type field predicates */
  riskType?: InputMaybe<Scalars['String']['input']>
  riskTypeContains?: InputMaybe<Scalars['String']['input']>
  riskTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  riskTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  riskTypeGT?: InputMaybe<Scalars['String']['input']>
  riskTypeGTE?: InputMaybe<Scalars['String']['input']>
  riskTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  riskTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  riskTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  riskTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  riskTypeLT?: InputMaybe<Scalars['String']['input']>
  riskTypeLTE?: InputMaybe<Scalars['String']['input']>
  riskTypeNEQ?: InputMaybe<Scalars['String']['input']>
  riskTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  riskTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** score field predicates */
  score?: InputMaybe<Scalars['Int']['input']>
  scoreGT?: InputMaybe<Scalars['Int']['input']>
  scoreGTE?: InputMaybe<Scalars['Int']['input']>
  scoreIn?: InputMaybe<Array<Scalars['Int']['input']>>
  scoreIsNil?: InputMaybe<Scalars['Boolean']['input']>
  scoreLT?: InputMaybe<Scalars['Int']['input']>
  scoreLTE?: InputMaybe<Scalars['Int']['input']>
  scoreNEQ?: InputMaybe<Scalars['Int']['input']>
  scoreNotIn?: InputMaybe<Array<Scalars['Int']['input']>>
  scoreNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** stakeholder_id field predicates */
  stakeholderID?: InputMaybe<Scalars['ID']['input']>
  stakeholderIDContains?: InputMaybe<Scalars['ID']['input']>
  stakeholderIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  stakeholderIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  stakeholderIDGT?: InputMaybe<Scalars['ID']['input']>
  stakeholderIDGTE?: InputMaybe<Scalars['ID']['input']>
  stakeholderIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  stakeholderIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  stakeholderIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  stakeholderIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  stakeholderIDLT?: InputMaybe<Scalars['ID']['input']>
  stakeholderIDLTE?: InputMaybe<Scalars['ID']['input']>
  stakeholderIDNEQ?: InputMaybe<Scalars['ID']['input']>
  stakeholderIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  stakeholderIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<RiskRiskStatus>
  statusIn?: InputMaybe<Array<RiskRiskStatus>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusNEQ?: InputMaybe<RiskRiskStatus>
  statusNotIn?: InputMaybe<Array<RiskRiskStatus>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export type SearchResult =
  | ApiTokenSearchResult
  | ActionPlanSearchResult
  | ContactSearchResult
  | ControlImplementationSearchResult
  | ControlObjectiveSearchResult
  | ControlSearchResult
  | DocumentDataSearchResult
  | EntitySearchResult
  | EntityTypeSearchResult
  | EventSearchResult
  | EvidenceSearchResult
  | FileSearchResult
  | GroupSearchResult
  | IntegrationSearchResult
  | InternalPolicySearchResult
  | MappedControlSearchResult
  | NarrativeSearchResult
  | OrgSubscriptionSearchResult
  | OrganizationSearchResult
  | OrganizationSettingSearchResult
  | PersonalAccessTokenSearchResult
  | ProcedureSearchResult
  | ProgramSearchResult
  | RiskSearchResult
  | StandardSearchResult
  | SubcontrolSearchResult
  | SubscriberSearchResult
  | TaskSearchResult
  | TemplateSearchResult
  | UserSearchResult
  | UserSettingSearchResult

export interface SearchResultConnection {
  __typename?: 'SearchResultConnection'
  /** A list of nodes with results. */
  nodes: Array<SearchResult>
  /** Information to aid in pagination. */
  page: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

export interface Standard extends Node {
  __typename?: 'Standard'
  controls: ControlConnection
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** long description of the standard with details of what is covered */
  description?: Maybe<Scalars['String']['output']>
  /** domains the standard covers, e.g. availability, confidentiality, etc. */
  domains?: Maybe<Array<Scalars['String']['output']>>
  /** unique identifier of the standard with version */
  framework?: Maybe<Scalars['String']['output']>
  /** indicates if the standard is freely distributable under a trial license, only for system owned standards */
  freeToUse?: Maybe<Scalars['Boolean']['output']>
  /** governing body of the standard, e.g. AICPA, etc. */
  governingBody?: Maybe<Scalars['String']['output']>
  /** URL to the logo of the governing body */
  governingBodyLogoURL?: Maybe<Scalars['String']['output']>
  id: Scalars['ID']['output']
  /** indicates if the standard should be made available to all users, only for system owned standards */
  isPublic?: Maybe<Scalars['Boolean']['output']>
  /** link to the official standard documentation */
  link?: Maybe<Scalars['String']['output']>
  /** the long name of the standard body */
  name: Scalars['String']['output']
  owner?: Maybe<Organization>
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  /** revision of the object as a semver (e.g. v1.0.0), by default any update will bump the patch version, unless the revision_bump field is set */
  revision?: Maybe<Scalars['String']['output']>
  /** short name of the standard, e.g. SOC 2, ISO 27001, etc. */
  shortName?: Maybe<Scalars['String']['output']>
  /** type of the standard - cybersecurity, healthcare , financial, etc. */
  standardType?: Maybe<Scalars['String']['output']>
  /** status of the standard - active, draft, and archived */
  status?: Maybe<StandardStandardStatus>
  /** indicates if the record is owned by the the openlane system and not by an organization */
  systemOwned?: Maybe<Scalars['Boolean']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  /** version of the standard */
  version?: Maybe<Scalars['String']['output']>
}

export interface StandardControlsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlOrder>>
  where?: InputMaybe<ControlWhereInput>
}

/** Return response for createBulkStandard mutation */
export interface StandardBulkCreatePayload {
  __typename?: 'StandardBulkCreatePayload'
  /** Created standards */
  standards?: Maybe<Array<Standard>>
}

/** A connection to a list of items. */
export interface StandardConnection {
  __typename?: 'StandardConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<StandardEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createStandard mutation */
export interface StandardCreatePayload {
  __typename?: 'StandardCreatePayload'
  /** Created standard */
  standard: Standard
}

/** Return response for deleteStandard mutation */
export interface StandardDeletePayload {
  __typename?: 'StandardDeletePayload'
  /** Deleted standard ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface StandardEdge {
  __typename?: 'StandardEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<Standard>
}

export interface StandardHistory extends Node {
  __typename?: 'StandardHistory'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** long description of the standard with details of what is covered */
  description?: Maybe<Scalars['String']['output']>
  /** domains the standard covers, e.g. availability, confidentiality, etc. */
  domains?: Maybe<Array<Scalars['String']['output']>>
  /** unique identifier of the standard with version */
  framework?: Maybe<Scalars['String']['output']>
  /** indicates if the standard is freely distributable under a trial license, only for system owned standards */
  freeToUse?: Maybe<Scalars['Boolean']['output']>
  /** governing body of the standard, e.g. AICPA, etc. */
  governingBody?: Maybe<Scalars['String']['output']>
  /** URL to the logo of the governing body */
  governingBodyLogoURL?: Maybe<Scalars['String']['output']>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** indicates if the standard should be made available to all users, only for system owned standards */
  isPublic?: Maybe<Scalars['Boolean']['output']>
  /** link to the official standard documentation */
  link?: Maybe<Scalars['String']['output']>
  /** the long name of the standard body */
  name: Scalars['String']['output']
  operation: StandardHistoryOpType
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** revision of the object as a semver (e.g. v1.0.0), by default any update will bump the patch version, unless the revision_bump field is set */
  revision?: Maybe<Scalars['String']['output']>
  /** short name of the standard, e.g. SOC 2, ISO 27001, etc. */
  shortName?: Maybe<Scalars['String']['output']>
  /** type of the standard - cybersecurity, healthcare , financial, etc. */
  standardType?: Maybe<Scalars['String']['output']>
  /** status of the standard - active, draft, and archived */
  status?: Maybe<StandardHistoryStandardStatus>
  /** indicates if the record is owned by the the openlane system and not by an organization */
  systemOwned?: Maybe<Scalars['Boolean']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  /** version of the standard */
  version?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface StandardHistoryConnection {
  __typename?: 'StandardHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<StandardHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface StandardHistoryEdge {
  __typename?: 'StandardHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<StandardHistory>
}

/** StandardHistoryOpType is enum for the field operation */
export enum StandardHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for StandardHistory connections */
export interface StandardHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order StandardHistories. */
  field: StandardHistoryOrderField
}

/** Properties by which StandardHistory connections can be ordered. */
export enum StandardHistoryOrderField {
  STATUS = 'STATUS',
  created_at = 'created_at',
  framework = 'framework',
  governing_body = 'governing_body',
  name = 'name',
  revision = 'revision',
  short_name = 'short_name',
  standard_type = 'standard_type',
  updated_at = 'updated_at',
}

/** StandardHistoryStandardStatus is enum for the field status */
export enum StandardHistoryStandardStatus {
  ACTIVE = 'ACTIVE',
  ARCHIVED = 'ARCHIVED',
  DRAFT = 'DRAFT',
}

/**
 * StandardHistoryWhereInput is used for filtering StandardHistory objects.
 * Input was generated by ent.
 */
export interface StandardHistoryWhereInput {
  and?: InputMaybe<Array<StandardHistoryWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>
  descriptionContains?: InputMaybe<Scalars['String']['input']>
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>
  descriptionGT?: InputMaybe<Scalars['String']['input']>
  descriptionGTE?: InputMaybe<Scalars['String']['input']>
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  descriptionLT?: InputMaybe<Scalars['String']['input']>
  descriptionLTE?: InputMaybe<Scalars['String']['input']>
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** framework field predicates */
  framework?: InputMaybe<Scalars['String']['input']>
  frameworkContains?: InputMaybe<Scalars['String']['input']>
  frameworkContainsFold?: InputMaybe<Scalars['String']['input']>
  frameworkEqualFold?: InputMaybe<Scalars['String']['input']>
  frameworkGT?: InputMaybe<Scalars['String']['input']>
  frameworkGTE?: InputMaybe<Scalars['String']['input']>
  frameworkHasPrefix?: InputMaybe<Scalars['String']['input']>
  frameworkHasSuffix?: InputMaybe<Scalars['String']['input']>
  frameworkIn?: InputMaybe<Array<Scalars['String']['input']>>
  frameworkIsNil?: InputMaybe<Scalars['Boolean']['input']>
  frameworkLT?: InputMaybe<Scalars['String']['input']>
  frameworkLTE?: InputMaybe<Scalars['String']['input']>
  frameworkNEQ?: InputMaybe<Scalars['String']['input']>
  frameworkNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  frameworkNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** free_to_use field predicates */
  freeToUse?: InputMaybe<Scalars['Boolean']['input']>
  freeToUseIsNil?: InputMaybe<Scalars['Boolean']['input']>
  freeToUseNEQ?: InputMaybe<Scalars['Boolean']['input']>
  freeToUseNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** governing_body field predicates */
  governingBody?: InputMaybe<Scalars['String']['input']>
  governingBodyContains?: InputMaybe<Scalars['String']['input']>
  governingBodyContainsFold?: InputMaybe<Scalars['String']['input']>
  governingBodyEqualFold?: InputMaybe<Scalars['String']['input']>
  governingBodyGT?: InputMaybe<Scalars['String']['input']>
  governingBodyGTE?: InputMaybe<Scalars['String']['input']>
  governingBodyHasPrefix?: InputMaybe<Scalars['String']['input']>
  governingBodyHasSuffix?: InputMaybe<Scalars['String']['input']>
  governingBodyIn?: InputMaybe<Array<Scalars['String']['input']>>
  governingBodyIsNil?: InputMaybe<Scalars['Boolean']['input']>
  governingBodyLT?: InputMaybe<Scalars['String']['input']>
  governingBodyLTE?: InputMaybe<Scalars['String']['input']>
  /** governing_body_logo_url field predicates */
  governingBodyLogoURL?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLContains?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLContainsFold?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLEqualFold?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLGT?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLGTE?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLHasPrefix?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLHasSuffix?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLIn?: InputMaybe<Array<Scalars['String']['input']>>
  governingBodyLogoURLIsNil?: InputMaybe<Scalars['Boolean']['input']>
  governingBodyLogoURLLT?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLLTE?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLNEQ?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  governingBodyLogoURLNotNil?: InputMaybe<Scalars['Boolean']['input']>
  governingBodyNEQ?: InputMaybe<Scalars['String']['input']>
  governingBodyNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  governingBodyNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** is_public field predicates */
  isPublic?: InputMaybe<Scalars['Boolean']['input']>
  isPublicIsNil?: InputMaybe<Scalars['Boolean']['input']>
  isPublicNEQ?: InputMaybe<Scalars['Boolean']['input']>
  isPublicNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** link field predicates */
  link?: InputMaybe<Scalars['String']['input']>
  linkContains?: InputMaybe<Scalars['String']['input']>
  linkContainsFold?: InputMaybe<Scalars['String']['input']>
  linkEqualFold?: InputMaybe<Scalars['String']['input']>
  linkGT?: InputMaybe<Scalars['String']['input']>
  linkGTE?: InputMaybe<Scalars['String']['input']>
  linkHasPrefix?: InputMaybe<Scalars['String']['input']>
  linkHasSuffix?: InputMaybe<Scalars['String']['input']>
  linkIn?: InputMaybe<Array<Scalars['String']['input']>>
  linkIsNil?: InputMaybe<Scalars['Boolean']['input']>
  linkLT?: InputMaybe<Scalars['String']['input']>
  linkLTE?: InputMaybe<Scalars['String']['input']>
  linkNEQ?: InputMaybe<Scalars['String']['input']>
  linkNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  linkNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<StandardHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<StandardHistoryOpType>
  operationIn?: InputMaybe<Array<StandardHistoryOpType>>
  operationNEQ?: InputMaybe<StandardHistoryOpType>
  operationNotIn?: InputMaybe<Array<StandardHistoryOpType>>
  or?: InputMaybe<Array<StandardHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** revision field predicates */
  revision?: InputMaybe<Scalars['String']['input']>
  revisionContains?: InputMaybe<Scalars['String']['input']>
  revisionContainsFold?: InputMaybe<Scalars['String']['input']>
  revisionEqualFold?: InputMaybe<Scalars['String']['input']>
  revisionGT?: InputMaybe<Scalars['String']['input']>
  revisionGTE?: InputMaybe<Scalars['String']['input']>
  revisionHasPrefix?: InputMaybe<Scalars['String']['input']>
  revisionHasSuffix?: InputMaybe<Scalars['String']['input']>
  revisionIn?: InputMaybe<Array<Scalars['String']['input']>>
  revisionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  revisionLT?: InputMaybe<Scalars['String']['input']>
  revisionLTE?: InputMaybe<Scalars['String']['input']>
  revisionNEQ?: InputMaybe<Scalars['String']['input']>
  revisionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  revisionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** short_name field predicates */
  shortName?: InputMaybe<Scalars['String']['input']>
  shortNameContains?: InputMaybe<Scalars['String']['input']>
  shortNameContainsFold?: InputMaybe<Scalars['String']['input']>
  shortNameEqualFold?: InputMaybe<Scalars['String']['input']>
  shortNameGT?: InputMaybe<Scalars['String']['input']>
  shortNameGTE?: InputMaybe<Scalars['String']['input']>
  shortNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  shortNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  shortNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  shortNameIsNil?: InputMaybe<Scalars['Boolean']['input']>
  shortNameLT?: InputMaybe<Scalars['String']['input']>
  shortNameLTE?: InputMaybe<Scalars['String']['input']>
  shortNameNEQ?: InputMaybe<Scalars['String']['input']>
  shortNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  shortNameNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** standard_type field predicates */
  standardType?: InputMaybe<Scalars['String']['input']>
  standardTypeContains?: InputMaybe<Scalars['String']['input']>
  standardTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  standardTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  standardTypeGT?: InputMaybe<Scalars['String']['input']>
  standardTypeGTE?: InputMaybe<Scalars['String']['input']>
  standardTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  standardTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  standardTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  standardTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  standardTypeLT?: InputMaybe<Scalars['String']['input']>
  standardTypeLTE?: InputMaybe<Scalars['String']['input']>
  standardTypeNEQ?: InputMaybe<Scalars['String']['input']>
  standardTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  standardTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<StandardHistoryStandardStatus>
  statusIn?: InputMaybe<Array<StandardHistoryStandardStatus>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusNEQ?: InputMaybe<StandardHistoryStandardStatus>
  statusNotIn?: InputMaybe<Array<StandardHistoryStandardStatus>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** system_owned field predicates */
  systemOwned?: InputMaybe<Scalars['Boolean']['input']>
  systemOwnedIsNil?: InputMaybe<Scalars['Boolean']['input']>
  systemOwnedNEQ?: InputMaybe<Scalars['Boolean']['input']>
  systemOwnedNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** version field predicates */
  version?: InputMaybe<Scalars['String']['input']>
  versionContains?: InputMaybe<Scalars['String']['input']>
  versionContainsFold?: InputMaybe<Scalars['String']['input']>
  versionEqualFold?: InputMaybe<Scalars['String']['input']>
  versionGT?: InputMaybe<Scalars['String']['input']>
  versionGTE?: InputMaybe<Scalars['String']['input']>
  versionHasPrefix?: InputMaybe<Scalars['String']['input']>
  versionHasSuffix?: InputMaybe<Scalars['String']['input']>
  versionIn?: InputMaybe<Array<Scalars['String']['input']>>
  versionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  versionLT?: InputMaybe<Scalars['String']['input']>
  versionLTE?: InputMaybe<Scalars['String']['input']>
  versionNEQ?: InputMaybe<Scalars['String']['input']>
  versionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  versionNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for Standard connections */
export interface StandardOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Standards. */
  field: StandardOrderField
}

/** Properties by which Standard connections can be ordered. */
export enum StandardOrderField {
  STATUS = 'STATUS',
  created_at = 'created_at',
  framework = 'framework',
  governing_body = 'governing_body',
  name = 'name',
  revision = 'revision',
  short_name = 'short_name',
  standard_type = 'standard_type',
  updated_at = 'updated_at',
}

export interface StandardSearchResult {
  __typename?: 'StandardSearchResult'
  standards?: Maybe<Array<Standard>>
}

/** StandardStandardStatus is enum for the field status */
export enum StandardStandardStatus {
  ACTIVE = 'ACTIVE',
  ARCHIVED = 'ARCHIVED',
  DRAFT = 'DRAFT',
}

/** Return response for updateStandard mutation */
export interface StandardUpdatePayload {
  __typename?: 'StandardUpdatePayload'
  /** Updated standard */
  standard: Standard
}

/**
 * StandardWhereInput is used for filtering Standard objects.
 * Input was generated by ent.
 */
export interface StandardWhereInput {
  and?: InputMaybe<Array<StandardWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>
  descriptionContains?: InputMaybe<Scalars['String']['input']>
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>
  descriptionGT?: InputMaybe<Scalars['String']['input']>
  descriptionGTE?: InputMaybe<Scalars['String']['input']>
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  descriptionLT?: InputMaybe<Scalars['String']['input']>
  descriptionLTE?: InputMaybe<Scalars['String']['input']>
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** framework field predicates */
  framework?: InputMaybe<Scalars['String']['input']>
  frameworkContains?: InputMaybe<Scalars['String']['input']>
  frameworkContainsFold?: InputMaybe<Scalars['String']['input']>
  frameworkEqualFold?: InputMaybe<Scalars['String']['input']>
  frameworkGT?: InputMaybe<Scalars['String']['input']>
  frameworkGTE?: InputMaybe<Scalars['String']['input']>
  frameworkHasPrefix?: InputMaybe<Scalars['String']['input']>
  frameworkHasSuffix?: InputMaybe<Scalars['String']['input']>
  frameworkIn?: InputMaybe<Array<Scalars['String']['input']>>
  frameworkIsNil?: InputMaybe<Scalars['Boolean']['input']>
  frameworkLT?: InputMaybe<Scalars['String']['input']>
  frameworkLTE?: InputMaybe<Scalars['String']['input']>
  frameworkNEQ?: InputMaybe<Scalars['String']['input']>
  frameworkNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  frameworkNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** free_to_use field predicates */
  freeToUse?: InputMaybe<Scalars['Boolean']['input']>
  freeToUseIsNil?: InputMaybe<Scalars['Boolean']['input']>
  freeToUseNEQ?: InputMaybe<Scalars['Boolean']['input']>
  freeToUseNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** governing_body field predicates */
  governingBody?: InputMaybe<Scalars['String']['input']>
  governingBodyContains?: InputMaybe<Scalars['String']['input']>
  governingBodyContainsFold?: InputMaybe<Scalars['String']['input']>
  governingBodyEqualFold?: InputMaybe<Scalars['String']['input']>
  governingBodyGT?: InputMaybe<Scalars['String']['input']>
  governingBodyGTE?: InputMaybe<Scalars['String']['input']>
  governingBodyHasPrefix?: InputMaybe<Scalars['String']['input']>
  governingBodyHasSuffix?: InputMaybe<Scalars['String']['input']>
  governingBodyIn?: InputMaybe<Array<Scalars['String']['input']>>
  governingBodyIsNil?: InputMaybe<Scalars['Boolean']['input']>
  governingBodyLT?: InputMaybe<Scalars['String']['input']>
  governingBodyLTE?: InputMaybe<Scalars['String']['input']>
  /** governing_body_logo_url field predicates */
  governingBodyLogoURL?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLContains?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLContainsFold?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLEqualFold?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLGT?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLGTE?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLHasPrefix?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLHasSuffix?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLIn?: InputMaybe<Array<Scalars['String']['input']>>
  governingBodyLogoURLIsNil?: InputMaybe<Scalars['Boolean']['input']>
  governingBodyLogoURLLT?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLLTE?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLNEQ?: InputMaybe<Scalars['String']['input']>
  governingBodyLogoURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  governingBodyLogoURLNotNil?: InputMaybe<Scalars['Boolean']['input']>
  governingBodyNEQ?: InputMaybe<Scalars['String']['input']>
  governingBodyNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  governingBodyNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** controls edge predicates */
  hasControls?: InputMaybe<Scalars['Boolean']['input']>
  hasControlsWith?: InputMaybe<Array<ControlWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** is_public field predicates */
  isPublic?: InputMaybe<Scalars['Boolean']['input']>
  isPublicIsNil?: InputMaybe<Scalars['Boolean']['input']>
  isPublicNEQ?: InputMaybe<Scalars['Boolean']['input']>
  isPublicNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** link field predicates */
  link?: InputMaybe<Scalars['String']['input']>
  linkContains?: InputMaybe<Scalars['String']['input']>
  linkContainsFold?: InputMaybe<Scalars['String']['input']>
  linkEqualFold?: InputMaybe<Scalars['String']['input']>
  linkGT?: InputMaybe<Scalars['String']['input']>
  linkGTE?: InputMaybe<Scalars['String']['input']>
  linkHasPrefix?: InputMaybe<Scalars['String']['input']>
  linkHasSuffix?: InputMaybe<Scalars['String']['input']>
  linkIn?: InputMaybe<Array<Scalars['String']['input']>>
  linkIsNil?: InputMaybe<Scalars['Boolean']['input']>
  linkLT?: InputMaybe<Scalars['String']['input']>
  linkLTE?: InputMaybe<Scalars['String']['input']>
  linkNEQ?: InputMaybe<Scalars['String']['input']>
  linkNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  linkNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<StandardWhereInput>
  or?: InputMaybe<Array<StandardWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** revision field predicates */
  revision?: InputMaybe<Scalars['String']['input']>
  revisionContains?: InputMaybe<Scalars['String']['input']>
  revisionContainsFold?: InputMaybe<Scalars['String']['input']>
  revisionEqualFold?: InputMaybe<Scalars['String']['input']>
  revisionGT?: InputMaybe<Scalars['String']['input']>
  revisionGTE?: InputMaybe<Scalars['String']['input']>
  revisionHasPrefix?: InputMaybe<Scalars['String']['input']>
  revisionHasSuffix?: InputMaybe<Scalars['String']['input']>
  revisionIn?: InputMaybe<Array<Scalars['String']['input']>>
  revisionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  revisionLT?: InputMaybe<Scalars['String']['input']>
  revisionLTE?: InputMaybe<Scalars['String']['input']>
  revisionNEQ?: InputMaybe<Scalars['String']['input']>
  revisionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  revisionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** short_name field predicates */
  shortName?: InputMaybe<Scalars['String']['input']>
  shortNameContains?: InputMaybe<Scalars['String']['input']>
  shortNameContainsFold?: InputMaybe<Scalars['String']['input']>
  shortNameEqualFold?: InputMaybe<Scalars['String']['input']>
  shortNameGT?: InputMaybe<Scalars['String']['input']>
  shortNameGTE?: InputMaybe<Scalars['String']['input']>
  shortNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  shortNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  shortNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  shortNameIsNil?: InputMaybe<Scalars['Boolean']['input']>
  shortNameLT?: InputMaybe<Scalars['String']['input']>
  shortNameLTE?: InputMaybe<Scalars['String']['input']>
  shortNameNEQ?: InputMaybe<Scalars['String']['input']>
  shortNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  shortNameNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** standard_type field predicates */
  standardType?: InputMaybe<Scalars['String']['input']>
  standardTypeContains?: InputMaybe<Scalars['String']['input']>
  standardTypeContainsFold?: InputMaybe<Scalars['String']['input']>
  standardTypeEqualFold?: InputMaybe<Scalars['String']['input']>
  standardTypeGT?: InputMaybe<Scalars['String']['input']>
  standardTypeGTE?: InputMaybe<Scalars['String']['input']>
  standardTypeHasPrefix?: InputMaybe<Scalars['String']['input']>
  standardTypeHasSuffix?: InputMaybe<Scalars['String']['input']>
  standardTypeIn?: InputMaybe<Array<Scalars['String']['input']>>
  standardTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  standardTypeLT?: InputMaybe<Scalars['String']['input']>
  standardTypeLTE?: InputMaybe<Scalars['String']['input']>
  standardTypeNEQ?: InputMaybe<Scalars['String']['input']>
  standardTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  standardTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<StandardStandardStatus>
  statusIn?: InputMaybe<Array<StandardStandardStatus>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusNEQ?: InputMaybe<StandardStandardStatus>
  statusNotIn?: InputMaybe<Array<StandardStandardStatus>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** system_owned field predicates */
  systemOwned?: InputMaybe<Scalars['Boolean']['input']>
  systemOwnedIsNil?: InputMaybe<Scalars['Boolean']['input']>
  systemOwnedNEQ?: InputMaybe<Scalars['Boolean']['input']>
  systemOwnedNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** version field predicates */
  version?: InputMaybe<Scalars['String']['input']>
  versionContains?: InputMaybe<Scalars['String']['input']>
  versionContainsFold?: InputMaybe<Scalars['String']['input']>
  versionEqualFold?: InputMaybe<Scalars['String']['input']>
  versionGT?: InputMaybe<Scalars['String']['input']>
  versionGTE?: InputMaybe<Scalars['String']['input']>
  versionHasPrefix?: InputMaybe<Scalars['String']['input']>
  versionHasSuffix?: InputMaybe<Scalars['String']['input']>
  versionIn?: InputMaybe<Array<Scalars['String']['input']>>
  versionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  versionLT?: InputMaybe<Scalars['String']['input']>
  versionLTE?: InputMaybe<Scalars['String']['input']>
  versionNEQ?: InputMaybe<Scalars['String']['input']>
  versionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  versionNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface Subcontrol extends Node {
  __typename?: 'Subcontrol'
  actionPlans: ActionPlanConnection
  /** methods used to verify the control implementation during an audit */
  assessmentMethods?: Maybe<Array<Scalars['AssessmentMethod']['output']>>
  /** objectives of the audit assessment for the control */
  assessmentObjectives?: Maybe<Array<Scalars['AssessmentObjective']['output']>>
  /** external auditor id of the control, can be used to map to external audit partner mappings */
  auditorReferenceID?: Maybe<Scalars['String']['output']>
  /** category of the control */
  category?: Maybe<Scalars['String']['output']>
  /** category id of the control */
  categoryID?: Maybe<Scalars['String']['output']>
  control: Control
  /** the id of the parent control */
  controlID: Scalars['ID']['output']
  controlImplementations: ControlImplementationConnection
  controlObjectives: ControlObjectiveConnection
  /** the group of users who are responsible for the control, will be assigned tasks, approval, etc. */
  controlOwner?: Maybe<Group>
  /** the id of the group that owns the control */
  controlOwnerID?: Maybe<Scalars['ID']['output']>
  /** questions to ask to verify the control */
  controlQuestions?: Maybe<Array<Scalars['String']['output']>>
  /** type of the control e.g. preventive, detective, corrective, or deterrent. */
  controlType?: Maybe<SubcontrolControlType>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** temporary delegate for the control, used for temporary control ownership */
  delegate?: Maybe<Group>
  /** the id of the group that is temporarily delegated to own the control */
  delegateID?: Maybe<Scalars['ID']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** description of what the control is supposed to accomplish */
  description?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  evidence: EvidenceConnection
  /** examples of evidence for the control */
  exampleEvidence?: Maybe<Array<Scalars['ExampleEvidence']['output']>>
  id: Scalars['ID']['output']
  /** implementation guidance for the control */
  implementationGuidance?: Maybe<Array<Scalars['ImplementationGuidance']['output']>>
  internalPolicies: InternalPolicyConnection
  /** mapped categories of the control to other standards */
  mappedCategories?: Maybe<Array<Scalars['String']['output']>>
  mappedControls: MappedControlConnection
  narratives: NarrativeConnection
  owner?: Maybe<Organization>
  /** the ID of the organization owner of the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  procedures: ProcedureConnection
  /** the unique reference code for the control */
  refCode: Scalars['String']['output']
  /** internal reference id of the control, can be used for internal tracking */
  referenceID?: Maybe<Scalars['String']['output']>
  /** references for the control */
  references?: Maybe<Array<Scalars['Reference']['output']>>
  risks: RiskConnection
  /** source of the control, e.g. framework, template, custom, etc. */
  source?: Maybe<SubcontrolControlSource>
  /** status of the control */
  status?: Maybe<SubcontrolControlStatus>
  /** subcategory of the control */
  subcategory?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  tasks: TaskConnection
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

export interface SubcontrolActionPlansArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ActionPlanOrder>>
  where?: InputMaybe<ActionPlanWhereInput>
}

export interface SubcontrolControlImplementationsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlImplementationOrder>>
  where?: InputMaybe<ControlImplementationWhereInput>
}

export interface SubcontrolControlObjectivesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlObjectiveOrder>>
  where?: InputMaybe<ControlObjectiveWhereInput>
}

export interface SubcontrolEvidenceArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EvidenceOrder>>
  where?: InputMaybe<EvidenceWhereInput>
}

export interface SubcontrolInternalPoliciesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<InternalPolicyOrder>>
  where?: InputMaybe<InternalPolicyWhereInput>
}

export interface SubcontrolMappedControlsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<MappedControlOrder>>
  where?: InputMaybe<MappedControlWhereInput>
}

export interface SubcontrolNarrativesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<NarrativeOrder>>
  where?: InputMaybe<NarrativeWhereInput>
}

export interface SubcontrolProceduresArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProcedureOrder>>
  where?: InputMaybe<ProcedureWhereInput>
}

export interface SubcontrolRisksArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<RiskOrder>>
  where?: InputMaybe<RiskWhereInput>
}

export interface SubcontrolTasksArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<TaskOrder>>
  where?: InputMaybe<TaskWhereInput>
}

/** Return response for createBulkSubcontrol mutation */
export interface SubcontrolBulkCreatePayload {
  __typename?: 'SubcontrolBulkCreatePayload'
  /** Created subcontrols */
  subcontrols?: Maybe<Array<Subcontrol>>
}

/** A connection to a list of items. */
export interface SubcontrolConnection {
  __typename?: 'SubcontrolConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<SubcontrolEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** SubcontrolControlSource is enum for the field source */
export enum SubcontrolControlSource {
  FRAMEWORK = 'FRAMEWORK',
  IMPORTED = 'IMPORTED',
  TEMPLATE = 'TEMPLATE',
  USER_DEFINED = 'USER_DEFINED',
}

/** SubcontrolControlStatus is enum for the field status */
export enum SubcontrolControlStatus {
  APPROVED = 'APPROVED',
  ARCHIVED = 'ARCHIVED',
  CHANGES_REQUESTED = 'CHANGES_REQUESTED',
  NEEDS_APPROVAL = 'NEEDS_APPROVAL',
  NULL = 'NULL',
  PREPARING = 'PREPARING',
}

/** SubcontrolControlType is enum for the field control_type */
export enum SubcontrolControlType {
  CORRECTIVE = 'CORRECTIVE',
  DETECTIVE = 'DETECTIVE',
  DETERRENT = 'DETERRENT',
  PREVENTATIVE = 'PREVENTATIVE',
}

/** Return response for createSubcontrol mutation */
export interface SubcontrolCreatePayload {
  __typename?: 'SubcontrolCreatePayload'
  /** Created subcontrol */
  subcontrol: Subcontrol
}

/** Return response for deleteSubcontrol mutation */
export interface SubcontrolDeletePayload {
  __typename?: 'SubcontrolDeletePayload'
  /** Deleted subcontrol ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface SubcontrolEdge {
  __typename?: 'SubcontrolEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<Subcontrol>
}

export interface SubcontrolHistory extends Node {
  __typename?: 'SubcontrolHistory'
  /** methods used to verify the control implementation during an audit */
  assessmentMethods?: Maybe<Array<Scalars['AssessmentMethod']['output']>>
  /** objectives of the audit assessment for the control */
  assessmentObjectives?: Maybe<Array<Scalars['AssessmentObjective']['output']>>
  /** external auditor id of the control, can be used to map to external audit partner mappings */
  auditorReferenceID?: Maybe<Scalars['String']['output']>
  /** category of the control */
  category?: Maybe<Scalars['String']['output']>
  /** category id of the control */
  categoryID?: Maybe<Scalars['String']['output']>
  /** the id of the parent control */
  controlID: Scalars['String']['output']
  /** the id of the group that owns the control */
  controlOwnerID?: Maybe<Scalars['String']['output']>
  /** questions to ask to verify the control */
  controlQuestions?: Maybe<Array<Scalars['String']['output']>>
  /** type of the control e.g. preventive, detective, corrective, or deterrent. */
  controlType?: Maybe<SubcontrolHistoryControlType>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** the id of the group that is temporarily delegated to own the control */
  delegateID?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** description of what the control is supposed to accomplish */
  description?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  /** examples of evidence for the control */
  exampleEvidence?: Maybe<Array<Scalars['ExampleEvidence']['output']>>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** implementation guidance for the control */
  implementationGuidance?: Maybe<Array<Scalars['ImplementationGuidance']['output']>>
  /** mapped categories of the control to other standards */
  mappedCategories?: Maybe<Array<Scalars['String']['output']>>
  operation: SubcontrolHistoryOpType
  /** the ID of the organization owner of the object */
  ownerID?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** the unique reference code for the control */
  refCode: Scalars['String']['output']
  /** internal reference id of the control, can be used for internal tracking */
  referenceID?: Maybe<Scalars['String']['output']>
  /** references for the control */
  references?: Maybe<Array<Scalars['Reference']['output']>>
  /** source of the control, e.g. framework, template, custom, etc. */
  source?: Maybe<SubcontrolHistoryControlSource>
  /** status of the control */
  status?: Maybe<SubcontrolHistoryControlStatus>
  /** subcategory of the control */
  subcategory?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface SubcontrolHistoryConnection {
  __typename?: 'SubcontrolHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<SubcontrolHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** SubcontrolHistoryControlSource is enum for the field source */
export enum SubcontrolHistoryControlSource {
  FRAMEWORK = 'FRAMEWORK',
  IMPORTED = 'IMPORTED',
  TEMPLATE = 'TEMPLATE',
  USER_DEFINED = 'USER_DEFINED',
}

/** SubcontrolHistoryControlStatus is enum for the field status */
export enum SubcontrolHistoryControlStatus {
  APPROVED = 'APPROVED',
  ARCHIVED = 'ARCHIVED',
  CHANGES_REQUESTED = 'CHANGES_REQUESTED',
  NEEDS_APPROVAL = 'NEEDS_APPROVAL',
  NULL = 'NULL',
  PREPARING = 'PREPARING',
}

/** SubcontrolHistoryControlType is enum for the field control_type */
export enum SubcontrolHistoryControlType {
  CORRECTIVE = 'CORRECTIVE',
  DETECTIVE = 'DETECTIVE',
  DETERRENT = 'DETERRENT',
  PREVENTATIVE = 'PREVENTATIVE',
}

/** An edge in a connection. */
export interface SubcontrolHistoryEdge {
  __typename?: 'SubcontrolHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<SubcontrolHistory>
}

/** SubcontrolHistoryOpType is enum for the field operation */
export enum SubcontrolHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for SubcontrolHistory connections */
export interface SubcontrolHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order SubcontrolHistories. */
  field: SubcontrolHistoryOrderField
}

/** Properties by which SubcontrolHistory connections can be ordered. */
export enum SubcontrolHistoryOrderField {
  CONTROL_TYPE = 'CONTROL_TYPE',
  SOURCE = 'SOURCE',
  STATUS = 'STATUS',
  category = 'category',
  created_at = 'created_at',
  ref_code = 'ref_code',
  subcategory = 'subcategory',
  updated_at = 'updated_at',
}

/**
 * SubcontrolHistoryWhereInput is used for filtering SubcontrolHistory objects.
 * Input was generated by ent.
 */
export interface SubcontrolHistoryWhereInput {
  and?: InputMaybe<Array<SubcontrolHistoryWhereInput>>
  /** auditor_reference_id field predicates */
  auditorReferenceID?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDContains?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDContainsFold?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDEqualFold?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDGT?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDGTE?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  auditorReferenceIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  auditorReferenceIDLT?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDLTE?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDNEQ?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  auditorReferenceIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** category field predicates */
  category?: InputMaybe<Scalars['String']['input']>
  categoryContains?: InputMaybe<Scalars['String']['input']>
  categoryContainsFold?: InputMaybe<Scalars['String']['input']>
  categoryEqualFold?: InputMaybe<Scalars['String']['input']>
  categoryGT?: InputMaybe<Scalars['String']['input']>
  categoryGTE?: InputMaybe<Scalars['String']['input']>
  categoryHasPrefix?: InputMaybe<Scalars['String']['input']>
  categoryHasSuffix?: InputMaybe<Scalars['String']['input']>
  /** category_id field predicates */
  categoryID?: InputMaybe<Scalars['String']['input']>
  categoryIDContains?: InputMaybe<Scalars['String']['input']>
  categoryIDContainsFold?: InputMaybe<Scalars['String']['input']>
  categoryIDEqualFold?: InputMaybe<Scalars['String']['input']>
  categoryIDGT?: InputMaybe<Scalars['String']['input']>
  categoryIDGTE?: InputMaybe<Scalars['String']['input']>
  categoryIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  categoryIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  categoryIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  categoryIDLT?: InputMaybe<Scalars['String']['input']>
  categoryIDLTE?: InputMaybe<Scalars['String']['input']>
  categoryIDNEQ?: InputMaybe<Scalars['String']['input']>
  categoryIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  categoryIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryIsNil?: InputMaybe<Scalars['Boolean']['input']>
  categoryLT?: InputMaybe<Scalars['String']['input']>
  categoryLTE?: InputMaybe<Scalars['String']['input']>
  categoryNEQ?: InputMaybe<Scalars['String']['input']>
  categoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** control_id field predicates */
  controlID?: InputMaybe<Scalars['String']['input']>
  controlIDContains?: InputMaybe<Scalars['String']['input']>
  controlIDContainsFold?: InputMaybe<Scalars['String']['input']>
  controlIDEqualFold?: InputMaybe<Scalars['String']['input']>
  controlIDGT?: InputMaybe<Scalars['String']['input']>
  controlIDGTE?: InputMaybe<Scalars['String']['input']>
  controlIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  controlIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  controlIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  controlIDLT?: InputMaybe<Scalars['String']['input']>
  controlIDLTE?: InputMaybe<Scalars['String']['input']>
  controlIDNEQ?: InputMaybe<Scalars['String']['input']>
  controlIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** control_owner_id field predicates */
  controlOwnerID?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDContains?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDGT?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDGTE?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  controlOwnerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  controlOwnerIDLT?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDLTE?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDNEQ?: InputMaybe<Scalars['String']['input']>
  controlOwnerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  controlOwnerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** control_type field predicates */
  controlType?: InputMaybe<SubcontrolHistoryControlType>
  controlTypeIn?: InputMaybe<Array<SubcontrolHistoryControlType>>
  controlTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  controlTypeNEQ?: InputMaybe<SubcontrolHistoryControlType>
  controlTypeNotIn?: InputMaybe<Array<SubcontrolHistoryControlType>>
  controlTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** delegate_id field predicates */
  delegateID?: InputMaybe<Scalars['String']['input']>
  delegateIDContains?: InputMaybe<Scalars['String']['input']>
  delegateIDContainsFold?: InputMaybe<Scalars['String']['input']>
  delegateIDEqualFold?: InputMaybe<Scalars['String']['input']>
  delegateIDGT?: InputMaybe<Scalars['String']['input']>
  delegateIDGTE?: InputMaybe<Scalars['String']['input']>
  delegateIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  delegateIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  delegateIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  delegateIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  delegateIDLT?: InputMaybe<Scalars['String']['input']>
  delegateIDLTE?: InputMaybe<Scalars['String']['input']>
  delegateIDNEQ?: InputMaybe<Scalars['String']['input']>
  delegateIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  delegateIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>
  descriptionContains?: InputMaybe<Scalars['String']['input']>
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>
  descriptionGT?: InputMaybe<Scalars['String']['input']>
  descriptionGTE?: InputMaybe<Scalars['String']['input']>
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  descriptionLT?: InputMaybe<Scalars['String']['input']>
  descriptionLTE?: InputMaybe<Scalars['String']['input']>
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<SubcontrolHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<SubcontrolHistoryOpType>
  operationIn?: InputMaybe<Array<SubcontrolHistoryOpType>>
  operationNEQ?: InputMaybe<SubcontrolHistoryOpType>
  operationNotIn?: InputMaybe<Array<SubcontrolHistoryOpType>>
  or?: InputMaybe<Array<SubcontrolHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  /** ref_code field predicates */
  refCode?: InputMaybe<Scalars['String']['input']>
  refCodeContains?: InputMaybe<Scalars['String']['input']>
  refCodeContainsFold?: InputMaybe<Scalars['String']['input']>
  refCodeEqualFold?: InputMaybe<Scalars['String']['input']>
  refCodeGT?: InputMaybe<Scalars['String']['input']>
  refCodeGTE?: InputMaybe<Scalars['String']['input']>
  refCodeHasPrefix?: InputMaybe<Scalars['String']['input']>
  refCodeHasSuffix?: InputMaybe<Scalars['String']['input']>
  refCodeIn?: InputMaybe<Array<Scalars['String']['input']>>
  refCodeLT?: InputMaybe<Scalars['String']['input']>
  refCodeLTE?: InputMaybe<Scalars['String']['input']>
  refCodeNEQ?: InputMaybe<Scalars['String']['input']>
  refCodeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** reference_id field predicates */
  referenceID?: InputMaybe<Scalars['String']['input']>
  referenceIDContains?: InputMaybe<Scalars['String']['input']>
  referenceIDContainsFold?: InputMaybe<Scalars['String']['input']>
  referenceIDEqualFold?: InputMaybe<Scalars['String']['input']>
  referenceIDGT?: InputMaybe<Scalars['String']['input']>
  referenceIDGTE?: InputMaybe<Scalars['String']['input']>
  referenceIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  referenceIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  referenceIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  referenceIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  referenceIDLT?: InputMaybe<Scalars['String']['input']>
  referenceIDLTE?: InputMaybe<Scalars['String']['input']>
  referenceIDNEQ?: InputMaybe<Scalars['String']['input']>
  referenceIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  referenceIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** source field predicates */
  source?: InputMaybe<SubcontrolHistoryControlSource>
  sourceIn?: InputMaybe<Array<SubcontrolHistoryControlSource>>
  sourceIsNil?: InputMaybe<Scalars['Boolean']['input']>
  sourceNEQ?: InputMaybe<SubcontrolHistoryControlSource>
  sourceNotIn?: InputMaybe<Array<SubcontrolHistoryControlSource>>
  sourceNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<SubcontrolHistoryControlStatus>
  statusIn?: InputMaybe<Array<SubcontrolHistoryControlStatus>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusNEQ?: InputMaybe<SubcontrolHistoryControlStatus>
  statusNotIn?: InputMaybe<Array<SubcontrolHistoryControlStatus>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** subcategory field predicates */
  subcategory?: InputMaybe<Scalars['String']['input']>
  subcategoryContains?: InputMaybe<Scalars['String']['input']>
  subcategoryContainsFold?: InputMaybe<Scalars['String']['input']>
  subcategoryEqualFold?: InputMaybe<Scalars['String']['input']>
  subcategoryGT?: InputMaybe<Scalars['String']['input']>
  subcategoryGTE?: InputMaybe<Scalars['String']['input']>
  subcategoryHasPrefix?: InputMaybe<Scalars['String']['input']>
  subcategoryHasSuffix?: InputMaybe<Scalars['String']['input']>
  subcategoryIn?: InputMaybe<Array<Scalars['String']['input']>>
  subcategoryIsNil?: InputMaybe<Scalars['Boolean']['input']>
  subcategoryLT?: InputMaybe<Scalars['String']['input']>
  subcategoryLTE?: InputMaybe<Scalars['String']['input']>
  subcategoryNEQ?: InputMaybe<Scalars['String']['input']>
  subcategoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  subcategoryNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for Subcontrol connections */
export interface SubcontrolOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Subcontrols. */
  field: SubcontrolOrderField
}

/** Properties by which Subcontrol connections can be ordered. */
export enum SubcontrolOrderField {
  CONTROL_TYPE = 'CONTROL_TYPE',
  SOURCE = 'SOURCE',
  STATUS = 'STATUS',
  category = 'category',
  created_at = 'created_at',
  ref_code = 'ref_code',
  subcategory = 'subcategory',
  updated_at = 'updated_at',
}

export interface SubcontrolSearchResult {
  __typename?: 'SubcontrolSearchResult'
  subcontrols?: Maybe<Array<Subcontrol>>
}

/** Return response for updateSubcontrol mutation */
export interface SubcontrolUpdatePayload {
  __typename?: 'SubcontrolUpdatePayload'
  /** Updated subcontrol */
  subcontrol: Subcontrol
}

/**
 * SubcontrolWhereInput is used for filtering Subcontrol objects.
 * Input was generated by ent.
 */
export interface SubcontrolWhereInput {
  and?: InputMaybe<Array<SubcontrolWhereInput>>
  /** auditor_reference_id field predicates */
  auditorReferenceID?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDContains?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDContainsFold?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDEqualFold?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDGT?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDGTE?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  auditorReferenceIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  auditorReferenceIDLT?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDLTE?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDNEQ?: InputMaybe<Scalars['String']['input']>
  auditorReferenceIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  auditorReferenceIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** category field predicates */
  category?: InputMaybe<Scalars['String']['input']>
  categoryContains?: InputMaybe<Scalars['String']['input']>
  categoryContainsFold?: InputMaybe<Scalars['String']['input']>
  categoryEqualFold?: InputMaybe<Scalars['String']['input']>
  categoryGT?: InputMaybe<Scalars['String']['input']>
  categoryGTE?: InputMaybe<Scalars['String']['input']>
  categoryHasPrefix?: InputMaybe<Scalars['String']['input']>
  categoryHasSuffix?: InputMaybe<Scalars['String']['input']>
  /** category_id field predicates */
  categoryID?: InputMaybe<Scalars['String']['input']>
  categoryIDContains?: InputMaybe<Scalars['String']['input']>
  categoryIDContainsFold?: InputMaybe<Scalars['String']['input']>
  categoryIDEqualFold?: InputMaybe<Scalars['String']['input']>
  categoryIDGT?: InputMaybe<Scalars['String']['input']>
  categoryIDGTE?: InputMaybe<Scalars['String']['input']>
  categoryIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  categoryIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  categoryIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  categoryIDLT?: InputMaybe<Scalars['String']['input']>
  categoryIDLTE?: InputMaybe<Scalars['String']['input']>
  categoryIDNEQ?: InputMaybe<Scalars['String']['input']>
  categoryIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  categoryIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryIsNil?: InputMaybe<Scalars['Boolean']['input']>
  categoryLT?: InputMaybe<Scalars['String']['input']>
  categoryLTE?: InputMaybe<Scalars['String']['input']>
  categoryNEQ?: InputMaybe<Scalars['String']['input']>
  categoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** control_id field predicates */
  controlID?: InputMaybe<Scalars['ID']['input']>
  controlIDContains?: InputMaybe<Scalars['ID']['input']>
  controlIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  controlIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  controlIDGT?: InputMaybe<Scalars['ID']['input']>
  controlIDGTE?: InputMaybe<Scalars['ID']['input']>
  controlIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  controlIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  controlIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  controlIDLT?: InputMaybe<Scalars['ID']['input']>
  controlIDLTE?: InputMaybe<Scalars['ID']['input']>
  controlIDNEQ?: InputMaybe<Scalars['ID']['input']>
  controlIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** control_owner_id field predicates */
  controlOwnerID?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDContains?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDGT?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDGTE?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  controlOwnerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  controlOwnerIDLT?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDLTE?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  controlOwnerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  controlOwnerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** control_type field predicates */
  controlType?: InputMaybe<SubcontrolControlType>
  controlTypeIn?: InputMaybe<Array<SubcontrolControlType>>
  controlTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>
  controlTypeNEQ?: InputMaybe<SubcontrolControlType>
  controlTypeNotIn?: InputMaybe<Array<SubcontrolControlType>>
  controlTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** delegate_id field predicates */
  delegateID?: InputMaybe<Scalars['ID']['input']>
  delegateIDContains?: InputMaybe<Scalars['ID']['input']>
  delegateIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  delegateIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  delegateIDGT?: InputMaybe<Scalars['ID']['input']>
  delegateIDGTE?: InputMaybe<Scalars['ID']['input']>
  delegateIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  delegateIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  delegateIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  delegateIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  delegateIDLT?: InputMaybe<Scalars['ID']['input']>
  delegateIDLTE?: InputMaybe<Scalars['ID']['input']>
  delegateIDNEQ?: InputMaybe<Scalars['ID']['input']>
  delegateIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  delegateIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>
  descriptionContains?: InputMaybe<Scalars['String']['input']>
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>
  descriptionGT?: InputMaybe<Scalars['String']['input']>
  descriptionGTE?: InputMaybe<Scalars['String']['input']>
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  descriptionLT?: InputMaybe<Scalars['String']['input']>
  descriptionLTE?: InputMaybe<Scalars['String']['input']>
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** action_plans edge predicates */
  hasActionPlans?: InputMaybe<Scalars['Boolean']['input']>
  hasActionPlansWith?: InputMaybe<Array<ActionPlanWhereInput>>
  /** control edge predicates */
  hasControl?: InputMaybe<Scalars['Boolean']['input']>
  /** control_implementations edge predicates */
  hasControlImplementations?: InputMaybe<Scalars['Boolean']['input']>
  hasControlImplementationsWith?: InputMaybe<Array<ControlImplementationWhereInput>>
  /** control_objectives edge predicates */
  hasControlObjectives?: InputMaybe<Scalars['Boolean']['input']>
  hasControlObjectivesWith?: InputMaybe<Array<ControlObjectiveWhereInput>>
  /** control_owner edge predicates */
  hasControlOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasControlOwnerWith?: InputMaybe<Array<GroupWhereInput>>
  hasControlWith?: InputMaybe<Array<ControlWhereInput>>
  /** delegate edge predicates */
  hasDelegate?: InputMaybe<Scalars['Boolean']['input']>
  hasDelegateWith?: InputMaybe<Array<GroupWhereInput>>
  /** evidence edge predicates */
  hasEvidence?: InputMaybe<Scalars['Boolean']['input']>
  hasEvidenceWith?: InputMaybe<Array<EvidenceWhereInput>>
  /** internal_policies edge predicates */
  hasInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>
  hasInternalPoliciesWith?: InputMaybe<Array<InternalPolicyWhereInput>>
  /** mapped_controls edge predicates */
  hasMappedControls?: InputMaybe<Scalars['Boolean']['input']>
  hasMappedControlsWith?: InputMaybe<Array<MappedControlWhereInput>>
  /** narratives edge predicates */
  hasNarratives?: InputMaybe<Scalars['Boolean']['input']>
  hasNarrativesWith?: InputMaybe<Array<NarrativeWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** procedures edge predicates */
  hasProcedures?: InputMaybe<Scalars['Boolean']['input']>
  hasProceduresWith?: InputMaybe<Array<ProcedureWhereInput>>
  /** risks edge predicates */
  hasRisks?: InputMaybe<Scalars['Boolean']['input']>
  hasRisksWith?: InputMaybe<Array<RiskWhereInput>>
  /** tasks edge predicates */
  hasTasks?: InputMaybe<Scalars['Boolean']['input']>
  hasTasksWith?: InputMaybe<Array<TaskWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<SubcontrolWhereInput>
  or?: InputMaybe<Array<SubcontrolWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref_code field predicates */
  refCode?: InputMaybe<Scalars['String']['input']>
  refCodeContains?: InputMaybe<Scalars['String']['input']>
  refCodeContainsFold?: InputMaybe<Scalars['String']['input']>
  refCodeEqualFold?: InputMaybe<Scalars['String']['input']>
  refCodeGT?: InputMaybe<Scalars['String']['input']>
  refCodeGTE?: InputMaybe<Scalars['String']['input']>
  refCodeHasPrefix?: InputMaybe<Scalars['String']['input']>
  refCodeHasSuffix?: InputMaybe<Scalars['String']['input']>
  refCodeIn?: InputMaybe<Array<Scalars['String']['input']>>
  refCodeLT?: InputMaybe<Scalars['String']['input']>
  refCodeLTE?: InputMaybe<Scalars['String']['input']>
  refCodeNEQ?: InputMaybe<Scalars['String']['input']>
  refCodeNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** reference_id field predicates */
  referenceID?: InputMaybe<Scalars['String']['input']>
  referenceIDContains?: InputMaybe<Scalars['String']['input']>
  referenceIDContainsFold?: InputMaybe<Scalars['String']['input']>
  referenceIDEqualFold?: InputMaybe<Scalars['String']['input']>
  referenceIDGT?: InputMaybe<Scalars['String']['input']>
  referenceIDGTE?: InputMaybe<Scalars['String']['input']>
  referenceIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  referenceIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  referenceIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  referenceIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  referenceIDLT?: InputMaybe<Scalars['String']['input']>
  referenceIDLTE?: InputMaybe<Scalars['String']['input']>
  referenceIDNEQ?: InputMaybe<Scalars['String']['input']>
  referenceIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  referenceIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** source field predicates */
  source?: InputMaybe<SubcontrolControlSource>
  sourceIn?: InputMaybe<Array<SubcontrolControlSource>>
  sourceIsNil?: InputMaybe<Scalars['Boolean']['input']>
  sourceNEQ?: InputMaybe<SubcontrolControlSource>
  sourceNotIn?: InputMaybe<Array<SubcontrolControlSource>>
  sourceNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<SubcontrolControlStatus>
  statusIn?: InputMaybe<Array<SubcontrolControlStatus>>
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>
  statusNEQ?: InputMaybe<SubcontrolControlStatus>
  statusNotIn?: InputMaybe<Array<SubcontrolControlStatus>>
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** subcategory field predicates */
  subcategory?: InputMaybe<Scalars['String']['input']>
  subcategoryContains?: InputMaybe<Scalars['String']['input']>
  subcategoryContainsFold?: InputMaybe<Scalars['String']['input']>
  subcategoryEqualFold?: InputMaybe<Scalars['String']['input']>
  subcategoryGT?: InputMaybe<Scalars['String']['input']>
  subcategoryGTE?: InputMaybe<Scalars['String']['input']>
  subcategoryHasPrefix?: InputMaybe<Scalars['String']['input']>
  subcategoryHasSuffix?: InputMaybe<Scalars['String']['input']>
  subcategoryIn?: InputMaybe<Array<Scalars['String']['input']>>
  subcategoryIsNil?: InputMaybe<Scalars['Boolean']['input']>
  subcategoryLT?: InputMaybe<Scalars['String']['input']>
  subcategoryLTE?: InputMaybe<Scalars['String']['input']>
  subcategoryNEQ?: InputMaybe<Scalars['String']['input']>
  subcategoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  subcategoryNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface Subscriber extends Node {
  __typename?: 'Subscriber'
  /** indicates if the subscriber is active or not, active users will have at least one verified contact method */
  active: Scalars['Boolean']['output']
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** email address of the subscriber */
  email: Scalars['String']['output']
  events: EventConnection
  id: Scalars['ID']['output']
  owner?: Maybe<Organization>
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  /** phone number of the subscriber */
  phoneNumber?: Maybe<Scalars['String']['output']>
  /** the number of attempts made to perform email send of the subscription, maximum of 5 */
  sendAttempts: Scalars['Int']['output']
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  /** indicates if the subscriber has unsubscribed from communications */
  unsubscribed: Scalars['Boolean']['output']
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  /** indicates if the email address has been verified */
  verifiedEmail: Scalars['Boolean']['output']
  /** indicates if the phone number has been verified */
  verifiedPhone: Scalars['Boolean']['output']
}

export interface SubscriberEventsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EventOrder>>
  where?: InputMaybe<EventWhereInput>
}

/** Return response for createBulkSubscriber mutation */
export interface SubscriberBulkCreatePayload {
  __typename?: 'SubscriberBulkCreatePayload'
  /** Created subscribers */
  subscribers?: Maybe<Array<Subscriber>>
}

/** A connection to a list of items. */
export interface SubscriberConnection {
  __typename?: 'SubscriberConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<SubscriberEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createSubscriber mutation */
export interface SubscriberCreatePayload {
  __typename?: 'SubscriberCreatePayload'
  /** Created subscriber */
  subscriber: Subscriber
}

/** Return response for deleteSubscriber mutation */
export interface SubscriberDeletePayload {
  __typename?: 'SubscriberDeletePayload'
  /** Deleted subscriber email */
  email: Scalars['String']['output']
}

/** An edge in a connection. */
export interface SubscriberEdge {
  __typename?: 'SubscriberEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<Subscriber>
}

/** Ordering options for Subscriber connections */
export interface SubscriberOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Subscribers. */
  field: SubscriberOrderField
}

/** Properties by which Subscriber connections can be ordered. */
export enum SubscriberOrderField {
  active = 'active',
  created_at = 'created_at',
  email = 'email',
  send_attempts = 'send_attempts',
  unsubscribed = 'unsubscribed',
  updated_at = 'updated_at',
}

export interface SubscriberSearchResult {
  __typename?: 'SubscriberSearchResult'
  subscribers?: Maybe<Array<Subscriber>>
}

/** Return response for updateSubscriber mutation */
export interface SubscriberUpdatePayload {
  __typename?: 'SubscriberUpdatePayload'
  /** Updated subscriber */
  subscriber: Subscriber
}

/**
 * SubscriberWhereInput is used for filtering Subscriber objects.
 * Input was generated by ent.
 */
export interface SubscriberWhereInput {
  /** active field predicates */
  active?: InputMaybe<Scalars['Boolean']['input']>
  activeNEQ?: InputMaybe<Scalars['Boolean']['input']>
  and?: InputMaybe<Array<SubscriberWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** email field predicates */
  email?: InputMaybe<Scalars['String']['input']>
  emailContains?: InputMaybe<Scalars['String']['input']>
  emailContainsFold?: InputMaybe<Scalars['String']['input']>
  emailEqualFold?: InputMaybe<Scalars['String']['input']>
  emailGT?: InputMaybe<Scalars['String']['input']>
  emailGTE?: InputMaybe<Scalars['String']['input']>
  emailHasPrefix?: InputMaybe<Scalars['String']['input']>
  emailHasSuffix?: InputMaybe<Scalars['String']['input']>
  emailIn?: InputMaybe<Array<Scalars['String']['input']>>
  emailLT?: InputMaybe<Scalars['String']['input']>
  emailLTE?: InputMaybe<Scalars['String']['input']>
  emailNEQ?: InputMaybe<Scalars['String']['input']>
  emailNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<SubscriberWhereInput>
  or?: InputMaybe<Array<SubscriberWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** phone_number field predicates */
  phoneNumber?: InputMaybe<Scalars['String']['input']>
  phoneNumberContains?: InputMaybe<Scalars['String']['input']>
  phoneNumberContainsFold?: InputMaybe<Scalars['String']['input']>
  phoneNumberEqualFold?: InputMaybe<Scalars['String']['input']>
  phoneNumberGT?: InputMaybe<Scalars['String']['input']>
  phoneNumberGTE?: InputMaybe<Scalars['String']['input']>
  phoneNumberHasPrefix?: InputMaybe<Scalars['String']['input']>
  phoneNumberHasSuffix?: InputMaybe<Scalars['String']['input']>
  phoneNumberIn?: InputMaybe<Array<Scalars['String']['input']>>
  phoneNumberIsNil?: InputMaybe<Scalars['Boolean']['input']>
  phoneNumberLT?: InputMaybe<Scalars['String']['input']>
  phoneNumberLTE?: InputMaybe<Scalars['String']['input']>
  phoneNumberNEQ?: InputMaybe<Scalars['String']['input']>
  phoneNumberNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  phoneNumberNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** send_attempts field predicates */
  sendAttempts?: InputMaybe<Scalars['Int']['input']>
  sendAttemptsGT?: InputMaybe<Scalars['Int']['input']>
  sendAttemptsGTE?: InputMaybe<Scalars['Int']['input']>
  sendAttemptsIn?: InputMaybe<Array<Scalars['Int']['input']>>
  sendAttemptsLT?: InputMaybe<Scalars['Int']['input']>
  sendAttemptsLTE?: InputMaybe<Scalars['Int']['input']>
  sendAttemptsNEQ?: InputMaybe<Scalars['Int']['input']>
  sendAttemptsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>
  /** unsubscribed field predicates */
  unsubscribed?: InputMaybe<Scalars['Boolean']['input']>
  unsubscribedNEQ?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** verified_email field predicates */
  verifiedEmail?: InputMaybe<Scalars['Boolean']['input']>
  verifiedEmailNEQ?: InputMaybe<Scalars['Boolean']['input']>
  /** verified_phone field predicates */
  verifiedPhone?: InputMaybe<Scalars['Boolean']['input']>
  verifiedPhoneNEQ?: InputMaybe<Scalars['Boolean']['input']>
}

export interface TfaSetting extends Node {
  __typename?: 'TFASetting'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  id: Scalars['ID']['output']
  owner?: Maybe<User>
  /** specifies a user may complete authentication by verifying a TOTP code delivered through an authenticator app */
  totpAllowed?: Maybe<Scalars['Boolean']['output']>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  /** specifies if the TFA device has been verified */
  verified: Scalars['Boolean']['output']
}

/** A connection to a list of items. */
export interface TfaSettingConnection {
  __typename?: 'TFASettingConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<TfaSettingEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createTFASetting mutation */
export interface TfaSettingCreatePayload {
  __typename?: 'TFASettingCreatePayload'
  qrCode?: Maybe<Scalars['String']['output']>
  tfaSecret?: Maybe<Scalars['String']['output']>
  /** Created tfaSetting */
  tfaSetting: TfaSetting
}

/** An edge in a connection. */
export interface TfaSettingEdge {
  __typename?: 'TFASettingEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<TfaSetting>
}

/** Ordering options for TFASetting connections */
export interface TfaSettingOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order TFASettings. */
  field: TfaSettingOrderField
}

/** Properties by which TFASetting connections can be ordered. */
export enum TfaSettingOrderField {
  created_at = 'created_at',
  updated_at = 'updated_at',
}

/** Return response for updateTFASetting mutation */
export interface TfaSettingUpdatePayload {
  __typename?: 'TFASettingUpdatePayload'
  qrCode?: Maybe<Scalars['String']['output']>
  recoveryCodes?: Maybe<Array<Scalars['String']['output']>>
  tfaSecret?: Maybe<Scalars['String']['output']>
  /** Updated tfaSetting */
  tfaSetting: TfaSetting
}

/**
 * TFASettingWhereInput is used for filtering TFASetting objects.
 * Input was generated by ent.
 */
export interface TfaSettingWhereInput {
  and?: InputMaybe<Array<TfaSettingWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<UserWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<TfaSettingWhereInput>
  or?: InputMaybe<Array<TfaSettingWhereInput>>
  /** totp_allowed field predicates */
  totpAllowed?: InputMaybe<Scalars['Boolean']['input']>
  totpAllowedIsNil?: InputMaybe<Scalars['Boolean']['input']>
  totpAllowedNEQ?: InputMaybe<Scalars['Boolean']['input']>
  totpAllowedNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** verified field predicates */
  verified?: InputMaybe<Scalars['Boolean']['input']>
  verifiedNEQ?: InputMaybe<Scalars['Boolean']['input']>
}

export interface Task extends Node {
  __typename?: 'Task'
  assignee?: Maybe<User>
  /** the id of the user who was assigned the task */
  assigneeID?: Maybe<Scalars['ID']['output']>
  assigner?: Maybe<User>
  /** the id of the user who assigned the task, can be left empty if created by the system or a service token */
  assignerID?: Maybe<Scalars['ID']['output']>
  /** the category of the task, e.g. evidence upload, risk review, policy review, etc. */
  category?: Maybe<Scalars['String']['output']>
  comments: NoteConnection
  /** the completion date of the task */
  completed?: Maybe<Scalars['Time']['output']>
  controlObjectives: ControlObjectiveConnection
  controls: ControlConnection
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** the description of the task */
  description?: Maybe<Scalars['String']['output']>
  /** the details of the task */
  details?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  /** the due date of the task */
  due?: Maybe<Scalars['Time']['output']>
  evidence: EvidenceConnection
  groups: GroupConnection
  id: Scalars['ID']['output']
  internalPolicies: InternalPolicyConnection
  owner?: Maybe<Organization>
  /** the ID of the organization owner of the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  procedures: ProcedureConnection
  programs: ProgramConnection
  /** the status of the task */
  status: TaskTaskStatus
  subcontrols: SubcontrolConnection
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  /** the title of the task */
  title: Scalars['String']['output']
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

export interface TaskCommentsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<NoteOrder>>
  where?: InputMaybe<NoteWhereInput>
}

export interface TaskControlObjectivesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlObjectiveOrder>>
  where?: InputMaybe<ControlObjectiveWhereInput>
}

export interface TaskControlsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ControlOrder>>
  where?: InputMaybe<ControlWhereInput>
}

export interface TaskEvidenceArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EvidenceOrder>>
  where?: InputMaybe<EvidenceWhereInput>
}

export interface TaskGroupsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<GroupOrder>>
  where?: InputMaybe<GroupWhereInput>
}

export interface TaskInternalPoliciesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<InternalPolicyOrder>>
  where?: InputMaybe<InternalPolicyWhereInput>
}

export interface TaskProceduresArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProcedureOrder>>
  where?: InputMaybe<ProcedureWhereInput>
}

export interface TaskProgramsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ProgramOrder>>
  where?: InputMaybe<ProgramWhereInput>
}

export interface TaskSubcontrolsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<SubcontrolOrder>>
  where?: InputMaybe<SubcontrolWhereInput>
}

/** Return response for createBulkTask mutation */
export interface TaskBulkCreatePayload {
  __typename?: 'TaskBulkCreatePayload'
  /** Created tasks */
  tasks?: Maybe<Array<Task>>
}

/** A connection to a list of items. */
export interface TaskConnection {
  __typename?: 'TaskConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<TaskEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createTask mutation */
export interface TaskCreatePayload {
  __typename?: 'TaskCreatePayload'
  /** Created task */
  task: Task
}

/** Return response for deleteTask mutation */
export interface TaskDeletePayload {
  __typename?: 'TaskDeletePayload'
  /** Deleted task ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface TaskEdge {
  __typename?: 'TaskEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<Task>
}

export interface TaskHistory extends Node {
  __typename?: 'TaskHistory'
  /** the id of the user who was assigned the task */
  assigneeID?: Maybe<Scalars['String']['output']>
  /** the id of the user who assigned the task, can be left empty if created by the system or a service token */
  assignerID?: Maybe<Scalars['String']['output']>
  /** the category of the task, e.g. evidence upload, risk review, policy review, etc. */
  category?: Maybe<Scalars['String']['output']>
  /** the completion date of the task */
  completed?: Maybe<Scalars['Time']['output']>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** the description of the task */
  description?: Maybe<Scalars['String']['output']>
  /** the details of the task */
  details?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  /** the due date of the task */
  due?: Maybe<Scalars['Time']['output']>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  operation: TaskHistoryOpType
  /** the ID of the organization owner of the object */
  ownerID?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** the status of the task */
  status: TaskHistoryTaskStatus
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  /** the title of the task */
  title: Scalars['String']['output']
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface TaskHistoryConnection {
  __typename?: 'TaskHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<TaskHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface TaskHistoryEdge {
  __typename?: 'TaskHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<TaskHistory>
}

/** TaskHistoryOpType is enum for the field operation */
export enum TaskHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for TaskHistory connections */
export interface TaskHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order TaskHistories. */
  field: TaskHistoryOrderField
}

/** Properties by which TaskHistory connections can be ordered. */
export enum TaskHistoryOrderField {
  STATUS = 'STATUS',
  category = 'category',
  completed = 'completed',
  created_at = 'created_at',
  due = 'due',
  title = 'title',
  updated_at = 'updated_at',
}

/** TaskHistoryTaskStatus is enum for the field status */
export enum TaskHistoryTaskStatus {
  COMPLETED = 'COMPLETED',
  IN_PROGRESS = 'IN_PROGRESS',
  IN_REVIEW = 'IN_REVIEW',
  OPEN = 'OPEN',
  WONT_DO = 'WONT_DO',
}

/**
 * TaskHistoryWhereInput is used for filtering TaskHistory objects.
 * Input was generated by ent.
 */
export interface TaskHistoryWhereInput {
  and?: InputMaybe<Array<TaskHistoryWhereInput>>
  /** assignee_id field predicates */
  assigneeID?: InputMaybe<Scalars['String']['input']>
  assigneeIDContains?: InputMaybe<Scalars['String']['input']>
  assigneeIDContainsFold?: InputMaybe<Scalars['String']['input']>
  assigneeIDEqualFold?: InputMaybe<Scalars['String']['input']>
  assigneeIDGT?: InputMaybe<Scalars['String']['input']>
  assigneeIDGTE?: InputMaybe<Scalars['String']['input']>
  assigneeIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  assigneeIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  assigneeIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  assigneeIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  assigneeIDLT?: InputMaybe<Scalars['String']['input']>
  assigneeIDLTE?: InputMaybe<Scalars['String']['input']>
  assigneeIDNEQ?: InputMaybe<Scalars['String']['input']>
  assigneeIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  assigneeIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** assigner_id field predicates */
  assignerID?: InputMaybe<Scalars['String']['input']>
  assignerIDContains?: InputMaybe<Scalars['String']['input']>
  assignerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  assignerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  assignerIDGT?: InputMaybe<Scalars['String']['input']>
  assignerIDGTE?: InputMaybe<Scalars['String']['input']>
  assignerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  assignerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  assignerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  assignerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  assignerIDLT?: InputMaybe<Scalars['String']['input']>
  assignerIDLTE?: InputMaybe<Scalars['String']['input']>
  assignerIDNEQ?: InputMaybe<Scalars['String']['input']>
  assignerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  assignerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** category field predicates */
  category?: InputMaybe<Scalars['String']['input']>
  categoryContains?: InputMaybe<Scalars['String']['input']>
  categoryContainsFold?: InputMaybe<Scalars['String']['input']>
  categoryEqualFold?: InputMaybe<Scalars['String']['input']>
  categoryGT?: InputMaybe<Scalars['String']['input']>
  categoryGTE?: InputMaybe<Scalars['String']['input']>
  categoryHasPrefix?: InputMaybe<Scalars['String']['input']>
  categoryHasSuffix?: InputMaybe<Scalars['String']['input']>
  categoryIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryIsNil?: InputMaybe<Scalars['Boolean']['input']>
  categoryLT?: InputMaybe<Scalars['String']['input']>
  categoryLTE?: InputMaybe<Scalars['String']['input']>
  categoryNEQ?: InputMaybe<Scalars['String']['input']>
  categoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** completed field predicates */
  completed?: InputMaybe<Scalars['Time']['input']>
  completedGT?: InputMaybe<Scalars['Time']['input']>
  completedGTE?: InputMaybe<Scalars['Time']['input']>
  completedIn?: InputMaybe<Array<Scalars['Time']['input']>>
  completedIsNil?: InputMaybe<Scalars['Boolean']['input']>
  completedLT?: InputMaybe<Scalars['Time']['input']>
  completedLTE?: InputMaybe<Scalars['Time']['input']>
  completedNEQ?: InputMaybe<Scalars['Time']['input']>
  completedNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  completedNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>
  descriptionContains?: InputMaybe<Scalars['String']['input']>
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>
  descriptionGT?: InputMaybe<Scalars['String']['input']>
  descriptionGTE?: InputMaybe<Scalars['String']['input']>
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  descriptionLT?: InputMaybe<Scalars['String']['input']>
  descriptionLTE?: InputMaybe<Scalars['String']['input']>
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** details field predicates */
  details?: InputMaybe<Scalars['String']['input']>
  detailsContains?: InputMaybe<Scalars['String']['input']>
  detailsContainsFold?: InputMaybe<Scalars['String']['input']>
  detailsEqualFold?: InputMaybe<Scalars['String']['input']>
  detailsGT?: InputMaybe<Scalars['String']['input']>
  detailsGTE?: InputMaybe<Scalars['String']['input']>
  detailsHasPrefix?: InputMaybe<Scalars['String']['input']>
  detailsHasSuffix?: InputMaybe<Scalars['String']['input']>
  detailsIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsIsNil?: InputMaybe<Scalars['Boolean']['input']>
  detailsLT?: InputMaybe<Scalars['String']['input']>
  detailsLTE?: InputMaybe<Scalars['String']['input']>
  detailsNEQ?: InputMaybe<Scalars['String']['input']>
  detailsNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** due field predicates */
  due?: InputMaybe<Scalars['Time']['input']>
  dueGT?: InputMaybe<Scalars['Time']['input']>
  dueGTE?: InputMaybe<Scalars['Time']['input']>
  dueIn?: InputMaybe<Array<Scalars['Time']['input']>>
  dueIsNil?: InputMaybe<Scalars['Boolean']['input']>
  dueLT?: InputMaybe<Scalars['Time']['input']>
  dueLTE?: InputMaybe<Scalars['Time']['input']>
  dueNEQ?: InputMaybe<Scalars['Time']['input']>
  dueNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  dueNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<TaskHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<TaskHistoryOpType>
  operationIn?: InputMaybe<Array<TaskHistoryOpType>>
  operationNEQ?: InputMaybe<TaskHistoryOpType>
  operationNotIn?: InputMaybe<Array<TaskHistoryOpType>>
  or?: InputMaybe<Array<TaskHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<TaskHistoryTaskStatus>
  statusIn?: InputMaybe<Array<TaskHistoryTaskStatus>>
  statusNEQ?: InputMaybe<TaskHistoryTaskStatus>
  statusNotIn?: InputMaybe<Array<TaskHistoryTaskStatus>>
  /** title field predicates */
  title?: InputMaybe<Scalars['String']['input']>
  titleContains?: InputMaybe<Scalars['String']['input']>
  titleContainsFold?: InputMaybe<Scalars['String']['input']>
  titleEqualFold?: InputMaybe<Scalars['String']['input']>
  titleGT?: InputMaybe<Scalars['String']['input']>
  titleGTE?: InputMaybe<Scalars['String']['input']>
  titleHasPrefix?: InputMaybe<Scalars['String']['input']>
  titleHasSuffix?: InputMaybe<Scalars['String']['input']>
  titleIn?: InputMaybe<Array<Scalars['String']['input']>>
  titleLT?: InputMaybe<Scalars['String']['input']>
  titleLTE?: InputMaybe<Scalars['String']['input']>
  titleNEQ?: InputMaybe<Scalars['String']['input']>
  titleNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for Task connections */
export interface TaskOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Tasks. */
  field: TaskOrderField
}

/** Properties by which Task connections can be ordered. */
export enum TaskOrderField {
  STATUS = 'STATUS',
  category = 'category',
  completed = 'completed',
  created_at = 'created_at',
  due = 'due',
  title = 'title',
  updated_at = 'updated_at',
}

export interface TaskSearchResult {
  __typename?: 'TaskSearchResult'
  tasks?: Maybe<Array<Task>>
}

/** TaskTaskStatus is enum for the field status */
export enum TaskTaskStatus {
  COMPLETED = 'COMPLETED',
  IN_PROGRESS = 'IN_PROGRESS',
  IN_REVIEW = 'IN_REVIEW',
  OPEN = 'OPEN',
  WONT_DO = 'WONT_DO',
}

/** Return response for updateTask mutation */
export interface TaskUpdatePayload {
  __typename?: 'TaskUpdatePayload'
  /** Updated task */
  task: Task
}

/**
 * TaskWhereInput is used for filtering Task objects.
 * Input was generated by ent.
 */
export interface TaskWhereInput {
  and?: InputMaybe<Array<TaskWhereInput>>
  /** assignee_id field predicates */
  assigneeID?: InputMaybe<Scalars['ID']['input']>
  assigneeIDContains?: InputMaybe<Scalars['ID']['input']>
  assigneeIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  assigneeIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  assigneeIDGT?: InputMaybe<Scalars['ID']['input']>
  assigneeIDGTE?: InputMaybe<Scalars['ID']['input']>
  assigneeIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  assigneeIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  assigneeIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  assigneeIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  assigneeIDLT?: InputMaybe<Scalars['ID']['input']>
  assigneeIDLTE?: InputMaybe<Scalars['ID']['input']>
  assigneeIDNEQ?: InputMaybe<Scalars['ID']['input']>
  assigneeIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  assigneeIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** assigner_id field predicates */
  assignerID?: InputMaybe<Scalars['ID']['input']>
  assignerIDContains?: InputMaybe<Scalars['ID']['input']>
  assignerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  assignerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  assignerIDGT?: InputMaybe<Scalars['ID']['input']>
  assignerIDGTE?: InputMaybe<Scalars['ID']['input']>
  assignerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  assignerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  assignerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  assignerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  assignerIDLT?: InputMaybe<Scalars['ID']['input']>
  assignerIDLTE?: InputMaybe<Scalars['ID']['input']>
  assignerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  assignerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  assignerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** category field predicates */
  category?: InputMaybe<Scalars['String']['input']>
  categoryContains?: InputMaybe<Scalars['String']['input']>
  categoryContainsFold?: InputMaybe<Scalars['String']['input']>
  categoryEqualFold?: InputMaybe<Scalars['String']['input']>
  categoryGT?: InputMaybe<Scalars['String']['input']>
  categoryGTE?: InputMaybe<Scalars['String']['input']>
  categoryHasPrefix?: InputMaybe<Scalars['String']['input']>
  categoryHasSuffix?: InputMaybe<Scalars['String']['input']>
  categoryIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryIsNil?: InputMaybe<Scalars['Boolean']['input']>
  categoryLT?: InputMaybe<Scalars['String']['input']>
  categoryLTE?: InputMaybe<Scalars['String']['input']>
  categoryNEQ?: InputMaybe<Scalars['String']['input']>
  categoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  categoryNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** completed field predicates */
  completed?: InputMaybe<Scalars['Time']['input']>
  completedGT?: InputMaybe<Scalars['Time']['input']>
  completedGTE?: InputMaybe<Scalars['Time']['input']>
  completedIn?: InputMaybe<Array<Scalars['Time']['input']>>
  completedIsNil?: InputMaybe<Scalars['Boolean']['input']>
  completedLT?: InputMaybe<Scalars['Time']['input']>
  completedLTE?: InputMaybe<Scalars['Time']['input']>
  completedNEQ?: InputMaybe<Scalars['Time']['input']>
  completedNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  completedNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>
  descriptionContains?: InputMaybe<Scalars['String']['input']>
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>
  descriptionGT?: InputMaybe<Scalars['String']['input']>
  descriptionGTE?: InputMaybe<Scalars['String']['input']>
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  descriptionLT?: InputMaybe<Scalars['String']['input']>
  descriptionLTE?: InputMaybe<Scalars['String']['input']>
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** details field predicates */
  details?: InputMaybe<Scalars['String']['input']>
  detailsContains?: InputMaybe<Scalars['String']['input']>
  detailsContainsFold?: InputMaybe<Scalars['String']['input']>
  detailsEqualFold?: InputMaybe<Scalars['String']['input']>
  detailsGT?: InputMaybe<Scalars['String']['input']>
  detailsGTE?: InputMaybe<Scalars['String']['input']>
  detailsHasPrefix?: InputMaybe<Scalars['String']['input']>
  detailsHasSuffix?: InputMaybe<Scalars['String']['input']>
  detailsIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsIsNil?: InputMaybe<Scalars['Boolean']['input']>
  detailsLT?: InputMaybe<Scalars['String']['input']>
  detailsLTE?: InputMaybe<Scalars['String']['input']>
  detailsNEQ?: InputMaybe<Scalars['String']['input']>
  detailsNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  detailsNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** due field predicates */
  due?: InputMaybe<Scalars['Time']['input']>
  dueGT?: InputMaybe<Scalars['Time']['input']>
  dueGTE?: InputMaybe<Scalars['Time']['input']>
  dueIn?: InputMaybe<Array<Scalars['Time']['input']>>
  dueIsNil?: InputMaybe<Scalars['Boolean']['input']>
  dueLT?: InputMaybe<Scalars['Time']['input']>
  dueLTE?: InputMaybe<Scalars['Time']['input']>
  dueNEQ?: InputMaybe<Scalars['Time']['input']>
  dueNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  dueNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** assignee edge predicates */
  hasAssignee?: InputMaybe<Scalars['Boolean']['input']>
  hasAssigneeWith?: InputMaybe<Array<UserWhereInput>>
  /** assigner edge predicates */
  hasAssigner?: InputMaybe<Scalars['Boolean']['input']>
  hasAssignerWith?: InputMaybe<Array<UserWhereInput>>
  /** comments edge predicates */
  hasComments?: InputMaybe<Scalars['Boolean']['input']>
  hasCommentsWith?: InputMaybe<Array<NoteWhereInput>>
  /** control_objectives edge predicates */
  hasControlObjectives?: InputMaybe<Scalars['Boolean']['input']>
  hasControlObjectivesWith?: InputMaybe<Array<ControlObjectiveWhereInput>>
  /** controls edge predicates */
  hasControls?: InputMaybe<Scalars['Boolean']['input']>
  hasControlsWith?: InputMaybe<Array<ControlWhereInput>>
  /** evidence edge predicates */
  hasEvidence?: InputMaybe<Scalars['Boolean']['input']>
  hasEvidenceWith?: InputMaybe<Array<EvidenceWhereInput>>
  /** groups edge predicates */
  hasGroups?: InputMaybe<Scalars['Boolean']['input']>
  hasGroupsWith?: InputMaybe<Array<GroupWhereInput>>
  /** internal_policies edge predicates */
  hasInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>
  hasInternalPoliciesWith?: InputMaybe<Array<InternalPolicyWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** procedures edge predicates */
  hasProcedures?: InputMaybe<Scalars['Boolean']['input']>
  hasProceduresWith?: InputMaybe<Array<ProcedureWhereInput>>
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>
  /** subcontrols edge predicates */
  hasSubcontrols?: InputMaybe<Scalars['Boolean']['input']>
  hasSubcontrolsWith?: InputMaybe<Array<SubcontrolWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  not?: InputMaybe<TaskWhereInput>
  or?: InputMaybe<Array<TaskWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<TaskTaskStatus>
  statusIn?: InputMaybe<Array<TaskTaskStatus>>
  statusNEQ?: InputMaybe<TaskTaskStatus>
  statusNotIn?: InputMaybe<Array<TaskTaskStatus>>
  /** title field predicates */
  title?: InputMaybe<Scalars['String']['input']>
  titleContains?: InputMaybe<Scalars['String']['input']>
  titleContainsFold?: InputMaybe<Scalars['String']['input']>
  titleEqualFold?: InputMaybe<Scalars['String']['input']>
  titleGT?: InputMaybe<Scalars['String']['input']>
  titleGTE?: InputMaybe<Scalars['String']['input']>
  titleHasPrefix?: InputMaybe<Scalars['String']['input']>
  titleHasSuffix?: InputMaybe<Scalars['String']['input']>
  titleIn?: InputMaybe<Array<Scalars['String']['input']>>
  titleLT?: InputMaybe<Scalars['String']['input']>
  titleLTE?: InputMaybe<Scalars['String']['input']>
  titleNEQ?: InputMaybe<Scalars['String']['input']>
  titleNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export interface Template extends Node {
  __typename?: 'Template'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** the description of the template */
  description?: Maybe<Scalars['String']['output']>
  documents: DocumentDataConnection
  files: FileConnection
  id: Scalars['ID']['output']
  /** the jsonschema object of the template */
  jsonconfig: Scalars['Map']['output']
  /** the name of the template */
  name: Scalars['String']['output']
  owner?: Maybe<Organization>
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['ID']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  /** the type of the template, either a provided template or an implementation (document) */
  templateType: TemplateDocumentType
  /** the uischema for the template to render in the UI */
  uischema?: Maybe<Scalars['Map']['output']>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

export interface TemplateDocumentsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<DocumentDataOrder>>
  where?: InputMaybe<DocumentDataWhereInput>
}

export interface TemplateFilesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<FileOrder>>
  where?: InputMaybe<FileWhereInput>
}

/** Return response for createBulkTemplate mutation */
export interface TemplateBulkCreatePayload {
  __typename?: 'TemplateBulkCreatePayload'
  /** Created templates */
  templates?: Maybe<Array<Template>>
}

/** A connection to a list of items. */
export interface TemplateConnection {
  __typename?: 'TemplateConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<TemplateEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createTemplate mutation */
export interface TemplateCreatePayload {
  __typename?: 'TemplateCreatePayload'
  /** Created template */
  template: Template
}

/** Return response for deleteTemplate mutation */
export interface TemplateDeletePayload {
  __typename?: 'TemplateDeletePayload'
  /** Deleted template ID */
  deletedID: Scalars['ID']['output']
}

/** TemplateDocumentType is enum for the field template_type */
export enum TemplateDocumentType {
  DOCUMENT = 'DOCUMENT',
  ROOTTEMPLATE = 'ROOTTEMPLATE',
}

/** An edge in a connection. */
export interface TemplateEdge {
  __typename?: 'TemplateEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<Template>
}

export interface TemplateHistory extends Node {
  __typename?: 'TemplateHistory'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** the description of the template */
  description?: Maybe<Scalars['String']['output']>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** the jsonschema object of the template */
  jsonconfig: Scalars['Map']['output']
  /** the name of the template */
  name: Scalars['String']['output']
  operation: TemplateHistoryOpType
  /** the organization id that owns the object */
  ownerID?: Maybe<Scalars['String']['output']>
  ref?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  /** the type of the template, either a provided template or an implementation (document) */
  templateType: TemplateHistoryDocumentType
  /** the uischema for the template to render in the UI */
  uischema?: Maybe<Scalars['Map']['output']>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface TemplateHistoryConnection {
  __typename?: 'TemplateHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<TemplateHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** TemplateHistoryDocumentType is enum for the field template_type */
export enum TemplateHistoryDocumentType {
  DOCUMENT = 'DOCUMENT',
  ROOTTEMPLATE = 'ROOTTEMPLATE',
}

/** An edge in a connection. */
export interface TemplateHistoryEdge {
  __typename?: 'TemplateHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<TemplateHistory>
}

/** TemplateHistoryOpType is enum for the field operation */
export enum TemplateHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for TemplateHistory connections */
export interface TemplateHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order TemplateHistories. */
  field: TemplateHistoryOrderField
}

/** Properties by which TemplateHistory connections can be ordered. */
export enum TemplateHistoryOrderField {
  TEMPLATE_TYPE = 'TEMPLATE_TYPE',
  created_at = 'created_at',
  name = 'name',
  updated_at = 'updated_at',
}

/**
 * TemplateHistoryWhereInput is used for filtering TemplateHistory objects.
 * Input was generated by ent.
 */
export interface TemplateHistoryWhereInput {
  and?: InputMaybe<Array<TemplateHistoryWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>
  descriptionContains?: InputMaybe<Scalars['String']['input']>
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>
  descriptionGT?: InputMaybe<Scalars['String']['input']>
  descriptionGTE?: InputMaybe<Scalars['String']['input']>
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  descriptionLT?: InputMaybe<Scalars['String']['input']>
  descriptionLTE?: InputMaybe<Scalars['String']['input']>
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<TemplateHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<TemplateHistoryOpType>
  operationIn?: InputMaybe<Array<TemplateHistoryOpType>>
  operationNEQ?: InputMaybe<TemplateHistoryOpType>
  operationNotIn?: InputMaybe<Array<TemplateHistoryOpType>>
  or?: InputMaybe<Array<TemplateHistoryWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>
  ownerIDContains?: InputMaybe<Scalars['String']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>
  ownerIDGT?: InputMaybe<Scalars['String']['input']>
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['String']['input']>
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** template_type field predicates */
  templateType?: InputMaybe<TemplateHistoryDocumentType>
  templateTypeIn?: InputMaybe<Array<TemplateHistoryDocumentType>>
  templateTypeNEQ?: InputMaybe<TemplateHistoryDocumentType>
  templateTypeNotIn?: InputMaybe<Array<TemplateHistoryDocumentType>>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for Template connections */
export interface TemplateOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Templates. */
  field: TemplateOrderField
}

/** Properties by which Template connections can be ordered. */
export enum TemplateOrderField {
  TEMPLATE_TYPE = 'TEMPLATE_TYPE',
  created_at = 'created_at',
  name = 'name',
  updated_at = 'updated_at',
}

export interface TemplateSearchResult {
  __typename?: 'TemplateSearchResult'
  templates?: Maybe<Array<Template>>
}

/** Return response for updateTemplate mutation */
export interface TemplateUpdatePayload {
  __typename?: 'TemplateUpdatePayload'
  /** Updated template */
  template: Template
}

/**
 * TemplateWhereInput is used for filtering Template objects.
 * Input was generated by ent.
 */
export interface TemplateWhereInput {
  and?: InputMaybe<Array<TemplateWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>
  descriptionContains?: InputMaybe<Scalars['String']['input']>
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>
  descriptionGT?: InputMaybe<Scalars['String']['input']>
  descriptionGTE?: InputMaybe<Scalars['String']['input']>
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>
  descriptionLT?: InputMaybe<Scalars['String']['input']>
  descriptionLTE?: InputMaybe<Scalars['String']['input']>
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** documents edge predicates */
  hasDocuments?: InputMaybe<Scalars['Boolean']['input']>
  hasDocumentsWith?: InputMaybe<Array<DocumentDataWhereInput>>
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>
  nameContains?: InputMaybe<Scalars['String']['input']>
  nameContainsFold?: InputMaybe<Scalars['String']['input']>
  nameEqualFold?: InputMaybe<Scalars['String']['input']>
  nameGT?: InputMaybe<Scalars['String']['input']>
  nameGTE?: InputMaybe<Scalars['String']['input']>
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>
  nameLT?: InputMaybe<Scalars['String']['input']>
  nameLTE?: InputMaybe<Scalars['String']['input']>
  nameNEQ?: InputMaybe<Scalars['String']['input']>
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  not?: InputMaybe<TemplateWhereInput>
  or?: InputMaybe<Array<TemplateWhereInput>>
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** template_type field predicates */
  templateType?: InputMaybe<TemplateDocumentType>
  templateTypeIn?: InputMaybe<Array<TemplateDocumentType>>
  templateTypeNEQ?: InputMaybe<TemplateDocumentType>
  templateTypeNotIn?: InputMaybe<Array<TemplateDocumentType>>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/**
 * UpdateAPITokenInput is used for update APIToken object.
 * Input was generated by ent.
 */
export interface UpdateApiTokenInput {
  appendScopes?: InputMaybe<Array<Scalars['String']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>
  clearIsActive?: InputMaybe<Scalars['Boolean']['input']>
  clearLastUsedAt?: InputMaybe<Scalars['Boolean']['input']>
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>
  clearRevokedAt?: InputMaybe<Scalars['Boolean']['input']>
  clearRevokedBy?: InputMaybe<Scalars['Boolean']['input']>
  clearRevokedReason?: InputMaybe<Scalars['Boolean']['input']>
  clearScopes?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  /** a description of the token's purpose */
  description?: InputMaybe<Scalars['String']['input']>
  /** whether the token is active */
  isActive?: InputMaybe<Scalars['Boolean']['input']>
  lastUsedAt?: InputMaybe<Scalars['Time']['input']>
  /** the name associated with the token */
  name?: InputMaybe<Scalars['String']['input']>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** when the token was revoked */
  revokedAt?: InputMaybe<Scalars['Time']['input']>
  /** the user who revoked the token */
  revokedBy?: InputMaybe<Scalars['String']['input']>
  /** the reason the token was revoked */
  revokedReason?: InputMaybe<Scalars['String']['input']>
  scopes?: InputMaybe<Array<Scalars['String']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * UpdateActionPlanInput is used for update ActionPlan object.
 * Input was generated by ent.
 */
export interface UpdateActionPlanInput {
  RevisionBump?: InputMaybe<Scalars['VersionBump']['input']>
  /** type of the action_plan, e.g. compliance, operational, health and safety, etc. */
  actionPlanType?: InputMaybe<Scalars['String']['input']>
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  /** whether approval is required for edits to the action_plan */
  approvalRequired?: InputMaybe<Scalars['Boolean']['input']>
  approverID?: InputMaybe<Scalars['ID']['input']>
  clearActionPlanType?: InputMaybe<Scalars['Boolean']['input']>
  clearApprovalRequired?: InputMaybe<Scalars['Boolean']['input']>
  clearApprover?: InputMaybe<Scalars['Boolean']['input']>
  clearControls?: InputMaybe<Scalars['Boolean']['input']>
  clearDelegate?: InputMaybe<Scalars['Boolean']['input']>
  clearDetails?: InputMaybe<Scalars['Boolean']['input']>
  clearDueDate?: InputMaybe<Scalars['Boolean']['input']>
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>
  clearPriority?: InputMaybe<Scalars['Boolean']['input']>
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>
  clearReviewDue?: InputMaybe<Scalars['Boolean']['input']>
  clearReviewFrequency?: InputMaybe<Scalars['Boolean']['input']>
  clearRevision?: InputMaybe<Scalars['Boolean']['input']>
  clearRisks?: InputMaybe<Scalars['Boolean']['input']>
  clearSource?: InputMaybe<Scalars['Boolean']['input']>
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearUsers?: InputMaybe<Scalars['Boolean']['input']>
  delegateID?: InputMaybe<Scalars['ID']['input']>
  /** details of the action_plan */
  details?: InputMaybe<Scalars['String']['input']>
  /** due date of the action plan */
  dueDate?: InputMaybe<Scalars['Time']['input']>
  /** the name of the action_plan */
  name?: InputMaybe<Scalars['String']['input']>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** priority of the action plan */
  priority?: InputMaybe<ActionPlanPriority>
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the date the action_plan should be reviewed, calculated based on the review_frequency if not directly set */
  reviewDue?: InputMaybe<Scalars['Time']['input']>
  /** the frequency at which the action_plan should be reviewed, used to calculate the review_due date */
  reviewFrequency?: InputMaybe<ActionPlanFrequency>
  /** revision of the object as a semver (e.g. v1.0.0), by default any update will bump the patch version, unless the revision_bump field is set */
  revision?: InputMaybe<Scalars['String']['input']>
  /** source of the action plan */
  source?: InputMaybe<Scalars['String']['input']>
  /** status of the action_plan, e.g. draft, published, archived, etc. */
  status?: InputMaybe<ActionPlanDocumentStatus>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * UpdateContactInput is used for update Contact object.
 * Input was generated by ent.
 */
export interface UpdateContactInput {
  addEntityIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the address of the contact */
  address?: InputMaybe<Scalars['String']['input']>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  clearAddress?: InputMaybe<Scalars['Boolean']['input']>
  clearCompany?: InputMaybe<Scalars['Boolean']['input']>
  clearEmail?: InputMaybe<Scalars['Boolean']['input']>
  clearEntities?: InputMaybe<Scalars['Boolean']['input']>
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>
  clearPhoneNumber?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearTitle?: InputMaybe<Scalars['Boolean']['input']>
  /** the company of the contact */
  company?: InputMaybe<Scalars['String']['input']>
  /** the email of the contact */
  email?: InputMaybe<Scalars['String']['input']>
  /** the full name of the contact */
  fullName?: InputMaybe<Scalars['String']['input']>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** the phone number of the contact */
  phoneNumber?: InputMaybe<Scalars['String']['input']>
  removeEntityIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** status of the contact */
  status?: InputMaybe<ContactUserStatus>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  /** the title of the contact */
  title?: InputMaybe<Scalars['String']['input']>
}

/**
 * UpdateControlImplementationInput is used for update ControlImplementation object.
 * Input was generated by ent.
 */
export interface UpdateControlImplementationInput {
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  clearControls?: InputMaybe<Scalars['Boolean']['input']>
  clearDetails?: InputMaybe<Scalars['Boolean']['input']>
  clearImplementationDate?: InputMaybe<Scalars['Boolean']['input']>
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>
  clearSubcontrols?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearVerificationDate?: InputMaybe<Scalars['Boolean']['input']>
  clearVerified?: InputMaybe<Scalars['Boolean']['input']>
  /** details of the control implementation */
  details?: InputMaybe<Scalars['String']['input']>
  /** date the control was implemented */
  implementationDate?: InputMaybe<Scalars['Time']['input']>
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** status of the %s, e.g. draft, published, archived, etc. */
  status?: InputMaybe<ControlImplementationDocumentStatus>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  /** date the control implementation was verified */
  verificationDate?: InputMaybe<Scalars['Time']['input']>
  /** set to true if the control implementation has been verified */
  verified?: InputMaybe<Scalars['Boolean']['input']>
}

/**
 * UpdateControlInput is used for update Control object.
 * Input was generated by ent.
 */
export interface UpdateControlInput {
  addActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlImplementationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEvidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addMappedControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendAssessmentMethods?: InputMaybe<Array<Scalars['AssessmentMethod']['input']>>
  appendAssessmentObjectives?: InputMaybe<Array<Scalars['AssessmentObjective']['input']>>
  appendControlQuestions?: InputMaybe<Array<Scalars['String']['input']>>
  appendExampleEvidence?: InputMaybe<Array<Scalars['ExampleEvidence']['input']>>
  appendImplementationGuidance?: InputMaybe<Array<Scalars['ImplementationGuidance']['input']>>
  appendMappedCategories?: InputMaybe<Array<Scalars['String']['input']>>
  appendReferences?: InputMaybe<Array<Scalars['Reference']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  /** methods used to verify the control implementation during an audit */
  assessmentMethods?: InputMaybe<Array<Scalars['AssessmentMethod']['input']>>
  /** objectives of the audit assessment for the control */
  assessmentObjectives?: InputMaybe<Array<Scalars['AssessmentObjective']['input']>>
  /** external auditor id of the control, can be used to map to external audit partner mappings */
  auditorReferenceID?: InputMaybe<Scalars['String']['input']>
  /** category of the control */
  category?: InputMaybe<Scalars['String']['input']>
  /** category id of the control */
  categoryID?: InputMaybe<Scalars['String']['input']>
  clearActionPlans?: InputMaybe<Scalars['Boolean']['input']>
  clearAssessmentMethods?: InputMaybe<Scalars['Boolean']['input']>
  clearAssessmentObjectives?: InputMaybe<Scalars['Boolean']['input']>
  clearAuditorReferenceID?: InputMaybe<Scalars['Boolean']['input']>
  clearBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  clearCategory?: InputMaybe<Scalars['Boolean']['input']>
  clearCategoryID?: InputMaybe<Scalars['Boolean']['input']>
  clearControlImplementations?: InputMaybe<Scalars['Boolean']['input']>
  clearControlObjectives?: InputMaybe<Scalars['Boolean']['input']>
  clearControlOwner?: InputMaybe<Scalars['Boolean']['input']>
  clearControlQuestions?: InputMaybe<Scalars['Boolean']['input']>
  clearControlType?: InputMaybe<Scalars['Boolean']['input']>
  clearDelegate?: InputMaybe<Scalars['Boolean']['input']>
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>
  clearEditors?: InputMaybe<Scalars['Boolean']['input']>
  clearEvidence?: InputMaybe<Scalars['Boolean']['input']>
  clearExampleEvidence?: InputMaybe<Scalars['Boolean']['input']>
  clearImplementationGuidance?: InputMaybe<Scalars['Boolean']['input']>
  clearInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>
  clearMappedCategories?: InputMaybe<Scalars['Boolean']['input']>
  clearMappedControls?: InputMaybe<Scalars['Boolean']['input']>
  clearNarratives?: InputMaybe<Scalars['Boolean']['input']>
  clearProcedures?: InputMaybe<Scalars['Boolean']['input']>
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>
  clearReferenceID?: InputMaybe<Scalars['Boolean']['input']>
  clearReferences?: InputMaybe<Scalars['Boolean']['input']>
  clearRisks?: InputMaybe<Scalars['Boolean']['input']>
  clearSource?: InputMaybe<Scalars['Boolean']['input']>
  clearStandard?: InputMaybe<Scalars['Boolean']['input']>
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>
  clearSubcategory?: InputMaybe<Scalars['Boolean']['input']>
  clearSubcontrols?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearTasks?: InputMaybe<Scalars['Boolean']['input']>
  clearViewers?: InputMaybe<Scalars['Boolean']['input']>
  controlOwnerID?: InputMaybe<Scalars['ID']['input']>
  /** questions to ask to verify the control */
  controlQuestions?: InputMaybe<Array<Scalars['String']['input']>>
  /** type of the control e.g. preventive, detective, corrective, or deterrent. */
  controlType?: InputMaybe<ControlControlType>
  delegateID?: InputMaybe<Scalars['ID']['input']>
  /** description of what the control is supposed to accomplish */
  description?: InputMaybe<Scalars['String']['input']>
  /** examples of evidence for the control */
  exampleEvidence?: InputMaybe<Array<Scalars['ExampleEvidence']['input']>>
  /** implementation guidance for the control */
  implementationGuidance?: InputMaybe<Array<Scalars['ImplementationGuidance']['input']>>
  /** mapped categories of the control to other standards */
  mappedCategories?: InputMaybe<Array<Scalars['String']['input']>>
  /** the unique reference code for the control */
  refCode?: InputMaybe<Scalars['String']['input']>
  /** internal reference id of the control, can be used for internal tracking */
  referenceID?: InputMaybe<Scalars['String']['input']>
  /** references for the control */
  references?: InputMaybe<Array<Scalars['Reference']['input']>>
  removeActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlImplementationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEvidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeMappedControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** source of the control, e.g. framework, template, custom, etc. */
  source?: InputMaybe<ControlControlSource>
  standardID?: InputMaybe<Scalars['ID']['input']>
  /** status of the control */
  status?: InputMaybe<ControlControlStatus>
  /** subcategory of the control */
  subcategory?: InputMaybe<Scalars['String']['input']>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * UpdateControlObjectiveInput is used for update ControlObjective object.
 * Input was generated by ent.
 */
export interface UpdateControlObjectiveInput {
  RevisionBump?: InputMaybe<Scalars['VersionBump']['input']>
  addBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEvidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  /** category of the control */
  category?: InputMaybe<Scalars['String']['input']>
  clearBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  clearCategory?: InputMaybe<Scalars['Boolean']['input']>
  clearControlObjectiveType?: InputMaybe<Scalars['Boolean']['input']>
  clearControls?: InputMaybe<Scalars['Boolean']['input']>
  clearDesiredOutcome?: InputMaybe<Scalars['Boolean']['input']>
  clearEditors?: InputMaybe<Scalars['Boolean']['input']>
  clearEvidence?: InputMaybe<Scalars['Boolean']['input']>
  clearInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>
  clearNarratives?: InputMaybe<Scalars['Boolean']['input']>
  clearProcedures?: InputMaybe<Scalars['Boolean']['input']>
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>
  clearRevision?: InputMaybe<Scalars['Boolean']['input']>
  clearRisks?: InputMaybe<Scalars['Boolean']['input']>
  clearSource?: InputMaybe<Scalars['Boolean']['input']>
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>
  clearSubcategory?: InputMaybe<Scalars['Boolean']['input']>
  clearSubcontrols?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearTasks?: InputMaybe<Scalars['Boolean']['input']>
  clearViewers?: InputMaybe<Scalars['Boolean']['input']>
  /** type of the control objective e.g. compliance, financial, operational, etc. */
  controlObjectiveType?: InputMaybe<Scalars['String']['input']>
  /** the desired outcome or target of the control objective */
  desiredOutcome?: InputMaybe<Scalars['String']['input']>
  /** the name of the control objective */
  name?: InputMaybe<Scalars['String']['input']>
  removeBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEvidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** revision of the object as a semver (e.g. v1.0.0), by default any update will bump the patch version, unless the revision_bump field is set */
  revision?: InputMaybe<Scalars['String']['input']>
  /** source of the control, e.g. framework, template, custom, etc. */
  source?: InputMaybe<ControlObjectiveControlSource>
  /** status of the control objective */
  status?: InputMaybe<Scalars['String']['input']>
  /** subcategory of the control */
  subcategory?: InputMaybe<Scalars['String']['input']>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * UpdateDocumentDataInput is used for update DocumentData object.
 * Input was generated by ent.
 */
export interface UpdateDocumentDataInput {
  addEntityIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  clearEntities?: InputMaybe<Scalars['Boolean']['input']>
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  /** the json data of the document */
  data?: InputMaybe<Scalars['Map']['input']>
  removeEntityIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  templateID?: InputMaybe<Scalars['ID']['input']>
}

/**
 * UpdateEntityInput is used for update Entity object.
 * Input was generated by ent.
 */
export interface UpdateEntityInput {
  addContactIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addDocumentIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addNoteIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendDomains?: InputMaybe<Array<Scalars['String']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  clearContacts?: InputMaybe<Scalars['Boolean']['input']>
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>
  clearDisplayName?: InputMaybe<Scalars['Boolean']['input']>
  clearDocuments?: InputMaybe<Scalars['Boolean']['input']>
  clearDomains?: InputMaybe<Scalars['Boolean']['input']>
  clearEntityType?: InputMaybe<Scalars['Boolean']['input']>
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>
  clearName?: InputMaybe<Scalars['Boolean']['input']>
  clearNotes?: InputMaybe<Scalars['Boolean']['input']>
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  /** An optional description of the entity */
  description?: InputMaybe<Scalars['String']['input']>
  /** The entity's displayed 'friendly' name */
  displayName?: InputMaybe<Scalars['String']['input']>
  /** domains associated with the entity */
  domains?: InputMaybe<Array<Scalars['String']['input']>>
  entityTypeID?: InputMaybe<Scalars['ID']['input']>
  /** the name of the entity */
  name?: InputMaybe<Scalars['String']['input']>
  note?: InputMaybe<CreateNoteInput>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  removeContactIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeDocumentIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeNoteIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** status of the entity */
  status?: InputMaybe<Scalars['String']['input']>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * UpdateEntityTypeInput is used for update EntityType object.
 * Input was generated by ent.
 */
export interface UpdateEntityTypeInput {
  addEntityIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  clearEntities?: InputMaybe<Scalars['Boolean']['input']>
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  /** the name of the entity */
  name?: InputMaybe<Scalars['String']['input']>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  removeEntityIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * UpdateEventInput is used for update Event object.
 * Input was generated by ent.
 */
export interface UpdateEventInput {
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addInviteIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addOrgSubscriptionIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addPersonalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addSecretIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addSubscriberIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  clearCorrelationID?: InputMaybe<Scalars['Boolean']['input']>
  clearEventID?: InputMaybe<Scalars['Boolean']['input']>
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>
  clearGroups?: InputMaybe<Scalars['Boolean']['input']>
  clearIntegrations?: InputMaybe<Scalars['Boolean']['input']>
  clearInvites?: InputMaybe<Scalars['Boolean']['input']>
  clearMetadata?: InputMaybe<Scalars['Boolean']['input']>
  clearOrgSubscriptions?: InputMaybe<Scalars['Boolean']['input']>
  clearOrganizations?: InputMaybe<Scalars['Boolean']['input']>
  clearPersonalAccessTokens?: InputMaybe<Scalars['Boolean']['input']>
  clearSecrets?: InputMaybe<Scalars['Boolean']['input']>
  clearSubscribers?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearUsers?: InputMaybe<Scalars['Boolean']['input']>
  correlationID?: InputMaybe<Scalars['String']['input']>
  eventID?: InputMaybe<Scalars['String']['input']>
  eventType?: InputMaybe<Scalars['String']['input']>
  metadata?: InputMaybe<Scalars['Map']['input']>
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeInviteIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeOrgSubscriptionIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removePersonalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeSecretIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeSubscriberIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * UpdateEvidenceInput is used for update Evidence object.
 * Input was generated by ent.
 */
export interface UpdateEvidenceInput {
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  clearCollectionProcedure?: InputMaybe<Scalars['Boolean']['input']>
  clearControlObjectives?: InputMaybe<Scalars['Boolean']['input']>
  clearControls?: InputMaybe<Scalars['Boolean']['input']>
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>
  clearIsAutomated?: InputMaybe<Scalars['Boolean']['input']>
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>
  clearRenewalDate?: InputMaybe<Scalars['Boolean']['input']>
  clearSource?: InputMaybe<Scalars['Boolean']['input']>
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>
  clearSubcontrols?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearTasks?: InputMaybe<Scalars['Boolean']['input']>
  clearURL?: InputMaybe<Scalars['Boolean']['input']>
  /** description of how the evidence was collected */
  collectionProcedure?: InputMaybe<Scalars['String']['input']>
  /** the date the evidence was retrieved */
  creationDate?: InputMaybe<Scalars['Time']['input']>
  /** the description of the evidence, what is contained in the uploaded file(s) or url(s) */
  description?: InputMaybe<Scalars['String']['input']>
  /** whether the evidence was automatically generated */
  isAutomated?: InputMaybe<Scalars['Boolean']['input']>
  /** the name of the evidence */
  name?: InputMaybe<Scalars['String']['input']>
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the date the evidence should be renewed, defaults to a year from entry date */
  renewalDate?: InputMaybe<Scalars['Time']['input']>
  /** the source of the evidence, e.g. system the evidence was retrieved from (splunk, github, etc) */
  source?: InputMaybe<Scalars['String']['input']>
  /** the status of the evidence, ready, approved, needs renewal, missing artifact, rejected */
  status?: InputMaybe<EvidenceEvidenceStatus>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  /** the url of the evidence if not uploaded directly to the system */
  url?: InputMaybe<Scalars['String']['input']>
}

/**
 * UpdateFileInput is used for update File object.
 * Input was generated by ent.
 */
export interface UpdateFileInput {
  addContactIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addDocumentIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEntityIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEvidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addOrganizationSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addTemplateIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addUserSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  /** the category type of the file, if any (e.g. evidence, invoice, etc.) */
  categoryType?: InputMaybe<Scalars['String']['input']>
  clearCategoryType?: InputMaybe<Scalars['Boolean']['input']>
  clearContact?: InputMaybe<Scalars['Boolean']['input']>
  clearDetectedMimeType?: InputMaybe<Scalars['Boolean']['input']>
  clearDocument?: InputMaybe<Scalars['Boolean']['input']>
  clearEntity?: InputMaybe<Scalars['Boolean']['input']>
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>
  clearEvidence?: InputMaybe<Scalars['Boolean']['input']>
  clearGroups?: InputMaybe<Scalars['Boolean']['input']>
  clearMd5Hash?: InputMaybe<Scalars['Boolean']['input']>
  clearOrganization?: InputMaybe<Scalars['Boolean']['input']>
  clearOrganizationSetting?: InputMaybe<Scalars['Boolean']['input']>
  clearPersistedFileSize?: InputMaybe<Scalars['Boolean']['input']>
  clearProgram?: InputMaybe<Scalars['Boolean']['input']>
  clearProvidedFileSize?: InputMaybe<Scalars['Boolean']['input']>
  clearStoragePath?: InputMaybe<Scalars['Boolean']['input']>
  clearStorageScheme?: InputMaybe<Scalars['Boolean']['input']>
  clearStorageVolume?: InputMaybe<Scalars['Boolean']['input']>
  clearStoreKey?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearTemplate?: InputMaybe<Scalars['Boolean']['input']>
  clearURI?: InputMaybe<Scalars['Boolean']['input']>
  clearUser?: InputMaybe<Scalars['Boolean']['input']>
  clearUserSetting?: InputMaybe<Scalars['Boolean']['input']>
  /** the content type of the HTTP request - may be different than MIME type as multipart-form can transmit multiple files and different types */
  detectedContentType?: InputMaybe<Scalars['String']['input']>
  /** the mime type detected by the system */
  detectedMimeType?: InputMaybe<Scalars['String']['input']>
  /** the computed md5 hash of the file calculated after we received the contents of the file, but before the file was written to permanent storage */
  md5Hash?: InputMaybe<Scalars['String']['input']>
  persistedFileSize?: InputMaybe<Scalars['Int']['input']>
  /** the extension of the file provided */
  providedFileExtension?: InputMaybe<Scalars['String']['input']>
  /** the name of the file provided in the payload key without the extension */
  providedFileName?: InputMaybe<Scalars['String']['input']>
  /** the computed size of the file in the original http request */
  providedFileSize?: InputMaybe<Scalars['Int']['input']>
  removeContactIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeDocumentIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEntityIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEvidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeOrganizationSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeTemplateIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeUserSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the storage path is the second-level directory of the file path, typically the correlating logical object ID the file is associated with; files can be stand alone objects and not always correlated to a logical one, so this path of the tree may be empty */
  storagePath?: InputMaybe<Scalars['String']['input']>
  /** the storage scheme of the file, e.g. file://, s3://, etc. */
  storageScheme?: InputMaybe<Scalars['String']['input']>
  /** the storage volume of the file which typically will be the organization ID the file belongs to - this is not a literal volume but the overlay file system mapping */
  storageVolume?: InputMaybe<Scalars['String']['input']>
  /** the key parsed out of a multipart-form request; if we allow multiple files to be uploaded we may want our API specifications to require the use of different keys allowing us to perform easier conditional evaluation on the key and what to do with the file based on key */
  storeKey?: InputMaybe<Scalars['String']['input']>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  /** the full URI of the file */
  uri?: InputMaybe<Scalars['String']['input']>
}

/**
 * UpdateGroupInput is used for update Group object.
 * Input was generated by ent.
 */
export interface UpdateGroupInput {
  addControlBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlObjectiveBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlObjectiveEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlObjectiveViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addGroupMembers?: InputMaybe<Array<CreateGroupMembershipInput>>
  addIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addInternalPolicyBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addInternalPolicyEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addNarrativeBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addNarrativeEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addNarrativeViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProcedureBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProcedureEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProgramBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProgramEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProgramViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addRiskBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addRiskEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addRiskViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  clearControlBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  clearControlEditors?: InputMaybe<Scalars['Boolean']['input']>
  clearControlObjectiveBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  clearControlObjectiveEditors?: InputMaybe<Scalars['Boolean']['input']>
  clearControlObjectiveViewers?: InputMaybe<Scalars['Boolean']['input']>
  clearControlViewers?: InputMaybe<Scalars['Boolean']['input']>
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>
  clearIntegrations?: InputMaybe<Scalars['Boolean']['input']>
  clearInternalPolicyBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  clearInternalPolicyEditors?: InputMaybe<Scalars['Boolean']['input']>
  clearLogoURL?: InputMaybe<Scalars['Boolean']['input']>
  clearNarrativeBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  clearNarrativeEditors?: InputMaybe<Scalars['Boolean']['input']>
  clearNarrativeViewers?: InputMaybe<Scalars['Boolean']['input']>
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>
  clearProcedureBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  clearProcedureEditors?: InputMaybe<Scalars['Boolean']['input']>
  clearProgramBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  clearProgramEditors?: InputMaybe<Scalars['Boolean']['input']>
  clearProgramViewers?: InputMaybe<Scalars['Boolean']['input']>
  clearRiskBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  clearRiskEditors?: InputMaybe<Scalars['Boolean']['input']>
  clearRiskViewers?: InputMaybe<Scalars['Boolean']['input']>
  clearSetting?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearTasks?: InputMaybe<Scalars['Boolean']['input']>
  /** the groups description */
  description?: InputMaybe<Scalars['String']['input']>
  /** The group's displayed 'friendly' name */
  displayName?: InputMaybe<Scalars['String']['input']>
  /**
   * inheritGroupPermissions allows a group to be updated with the same permissions
   * as the specified group ID, existing permissions will be removed
   */
  inheritGroupPermissions?: InputMaybe<Scalars['ID']['input']>
  /** the URL to an image uploaded by the customer for the groups avatar image */
  logoURL?: InputMaybe<Scalars['String']['input']>
  /** the name of the group - must be unique within the organization */
  name?: InputMaybe<Scalars['String']['input']>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  removeControlBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlObjectiveBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlObjectiveEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlObjectiveViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeGroupMembers?: InputMaybe<Array<Scalars['ID']['input']>>
  removeIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeInternalPolicyBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeInternalPolicyEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeNarrativeBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeNarrativeEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeNarrativeViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProcedureBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProcedureEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProgramBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProgramEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProgramViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeRiskBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeRiskEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeRiskViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  settingID?: InputMaybe<Scalars['ID']['input']>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  updateGroupSettings?: InputMaybe<UpdateGroupSettingInput>
}

/**
 * UpdateGroupMembershipInput is used for update GroupMembership object.
 * Input was generated by ent.
 */
export interface UpdateGroupMembershipInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  role?: InputMaybe<GroupMembershipRole>
}

/**
 * UpdateGroupSettingInput is used for update GroupSetting object.
 * Input was generated by ent.
 */
export interface UpdateGroupSettingInput {
  clearGroup?: InputMaybe<Scalars['Boolean']['input']>
  clearSyncToGithub?: InputMaybe<Scalars['Boolean']['input']>
  clearSyncToSlack?: InputMaybe<Scalars['Boolean']['input']>
  groupID?: InputMaybe<Scalars['ID']['input']>
  /** the policy governing ability to freely join a group, whether it requires an invitation, application, or either */
  joinPolicy?: InputMaybe<GroupSettingJoinPolicy>
  /** whether to sync group members to github groups */
  syncToGithub?: InputMaybe<Scalars['Boolean']['input']>
  /** whether to sync group members to slack groups */
  syncToSlack?: InputMaybe<Scalars['Boolean']['input']>
  /** whether the group is visible to it's members / owners only or if it's searchable by anyone within the organization */
  visibility?: InputMaybe<GroupSettingVisibility>
}

/**
 * UpdateHushInput is used for update Hush object.
 * Input was generated by ent.
 */
export interface UpdateHushInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>
  clearIntegrations?: InputMaybe<Scalars['Boolean']['input']>
  clearKind?: InputMaybe<Scalars['Boolean']['input']>
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>
  /** a description of the hush value or purpose, such as github PAT */
  description?: InputMaybe<Scalars['String']['input']>
  /** the kind of secret, such as sshkey, certificate, api token, etc. */
  kind?: InputMaybe<Scalars['String']['input']>
  /** the logical name of the corresponding hush secret or it's general grouping */
  name?: InputMaybe<Scalars['String']['input']>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
}

/**
 * UpdateIntegrationInput is used for update Integration object.
 * Input was generated by ent.
 */
export interface UpdateIntegrationInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addSecretIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>
  clearKind?: InputMaybe<Scalars['Boolean']['input']>
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>
  clearSecrets?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  /** a description of the integration */
  description?: InputMaybe<Scalars['String']['input']>
  kind?: InputMaybe<Scalars['String']['input']>
  /** the name of the integration - must be unique within the organization */
  name?: InputMaybe<Scalars['String']['input']>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeSecretIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * UpdateInternalPolicyInput is used for update InternalPolicy object.
 * Input was generated by ent.
 */
export interface UpdateInternalPolicyInput {
  RevisionBump?: InputMaybe<Scalars['VersionBump']['input']>
  addBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  /** whether approval is required for edits to the policy */
  approvalRequired?: InputMaybe<Scalars['Boolean']['input']>
  approverID?: InputMaybe<Scalars['ID']['input']>
  clearApprovalRequired?: InputMaybe<Scalars['Boolean']['input']>
  clearApprover?: InputMaybe<Scalars['Boolean']['input']>
  clearBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  clearControlObjectives?: InputMaybe<Scalars['Boolean']['input']>
  clearControls?: InputMaybe<Scalars['Boolean']['input']>
  clearDelegate?: InputMaybe<Scalars['Boolean']['input']>
  clearDetails?: InputMaybe<Scalars['Boolean']['input']>
  clearEditors?: InputMaybe<Scalars['Boolean']['input']>
  clearNarratives?: InputMaybe<Scalars['Boolean']['input']>
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>
  clearPolicyType?: InputMaybe<Scalars['Boolean']['input']>
  clearProcedures?: InputMaybe<Scalars['Boolean']['input']>
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>
  clearReviewDue?: InputMaybe<Scalars['Boolean']['input']>
  clearReviewFrequency?: InputMaybe<Scalars['Boolean']['input']>
  clearRevision?: InputMaybe<Scalars['Boolean']['input']>
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearTasks?: InputMaybe<Scalars['Boolean']['input']>
  delegateID?: InputMaybe<Scalars['ID']['input']>
  /** details of the policy */
  details?: InputMaybe<Scalars['String']['input']>
  /** the name of the policy */
  name?: InputMaybe<Scalars['String']['input']>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** type of the policy, e.g. compliance, operational, health and safety, etc. */
  policyType?: InputMaybe<Scalars['String']['input']>
  removeBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the date the policy should be reviewed, calculated based on the review_frequency if not directly set */
  reviewDue?: InputMaybe<Scalars['Time']['input']>
  /** the frequency at which the policy should be reviewed, used to calculate the review_due date */
  reviewFrequency?: InputMaybe<InternalPolicyFrequency>
  /** revision of the object as a semver (e.g. v1.0.0), by default any update will bump the patch version, unless the revision_bump field is set */
  revision?: InputMaybe<Scalars['String']['input']>
  /** status of the policy, e.g. draft, published, archived, etc. */
  status?: InputMaybe<InternalPolicyDocumentStatus>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * UpdateInviteInput is used for update Invite object.
 * Input was generated by ent.
 */
export interface UpdateInviteInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>
  clearExpires?: InputMaybe<Scalars['Boolean']['input']>
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>
  /** the expiration date of the invitation token which defaults to 14 days in the future from creation */
  expires?: InputMaybe<Scalars['Time']['input']>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  role?: InputMaybe<InviteRole>
  /** the number of attempts made to perform email send of the invitation, maximum of 5 */
  sendAttempts?: InputMaybe<Scalars['Int']['input']>
  /** the status of the invitation */
  status?: InputMaybe<InviteInviteStatus>
}

/**
 * UpdateMappedControlInput is used for update MappedControl object.
 * Input was generated by ent.
 */
export interface UpdateMappedControlInput {
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  clearControls?: InputMaybe<Scalars['Boolean']['input']>
  clearMappingType?: InputMaybe<Scalars['Boolean']['input']>
  clearRelation?: InputMaybe<Scalars['Boolean']['input']>
  clearSubcontrols?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  /** the type of mapping between the two controls, e.g. subset, intersect, equal, superset */
  mappingType?: InputMaybe<Scalars['String']['input']>
  /** description of how the two controls are related */
  relation?: InputMaybe<Scalars['String']['input']>
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * UpdateNarrativeInput is used for update Narrative object.
 * Input was generated by ent.
 */
export interface UpdateNarrativeInput {
  addBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addSatisfyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  clearBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>
  clearDetails?: InputMaybe<Scalars['Boolean']['input']>
  clearEditors?: InputMaybe<Scalars['Boolean']['input']>
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>
  clearSatisfies?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearViewers?: InputMaybe<Scalars['Boolean']['input']>
  /** the description of the narrative */
  description?: InputMaybe<Scalars['String']['input']>
  /** text data for the narrative document */
  details?: InputMaybe<Scalars['String']['input']>
  /** the name of the narrative */
  name?: InputMaybe<Scalars['String']['input']>
  removeBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeSatisfyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * UpdateNoteInput is used for update Note object.
 * Input was generated by ent.
 */
export interface UpdateNoteInput {
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>
  clearTask?: InputMaybe<Scalars['Boolean']['input']>
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  taskID?: InputMaybe<Scalars['ID']['input']>
  /** the text of the note */
  text?: InputMaybe<Scalars['String']['input']>
}

/**
 * UpdateOrgMembershipInput is used for update OrgMembership object.
 * Input was generated by ent.
 */
export interface UpdateOrgMembershipInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  role?: InputMaybe<OrgMembershipRole>
}

/**
 * UpdateOrganizationInput is used for update Organization object.
 * Input was generated by ent.
 */
export interface UpdateOrganizationInput {
  addAPITokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addContactIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlImplementationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlObjectiveCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addDocumentIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEntityIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEntityTypeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEvidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addGroupCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addInternalPolicyCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addInviteIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addNarrativeCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addNoteIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addOrgMembers?: InputMaybe<Array<CreateOrgMembershipInput>>
  addOrgSubscriptionIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addPersonalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProcedureCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProgramCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addRiskCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addSecretIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addStandardIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addSubscriberIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addTemplateCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addTemplateIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  avatarFileID?: InputMaybe<Scalars['ID']['input']>
  /** URL of the user's remote avatar */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>
  /** The time the user's (local) avatar was last updated */
  avatarUpdatedAt?: InputMaybe<Scalars['Time']['input']>
  clearAPITokens?: InputMaybe<Scalars['Boolean']['input']>
  clearActionPlans?: InputMaybe<Scalars['Boolean']['input']>
  clearAvatarFile?: InputMaybe<Scalars['Boolean']['input']>
  clearAvatarRemoteURL?: InputMaybe<Scalars['Boolean']['input']>
  clearAvatarUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>
  clearContacts?: InputMaybe<Scalars['Boolean']['input']>
  clearControlCreators?: InputMaybe<Scalars['Boolean']['input']>
  clearControlImplementations?: InputMaybe<Scalars['Boolean']['input']>
  clearControlObjectiveCreators?: InputMaybe<Scalars['Boolean']['input']>
  clearControlObjectives?: InputMaybe<Scalars['Boolean']['input']>
  clearControls?: InputMaybe<Scalars['Boolean']['input']>
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>
  clearDocuments?: InputMaybe<Scalars['Boolean']['input']>
  clearEntities?: InputMaybe<Scalars['Boolean']['input']>
  clearEntityTypes?: InputMaybe<Scalars['Boolean']['input']>
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>
  clearEvidence?: InputMaybe<Scalars['Boolean']['input']>
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>
  clearGroupCreators?: InputMaybe<Scalars['Boolean']['input']>
  clearGroups?: InputMaybe<Scalars['Boolean']['input']>
  clearIntegrations?: InputMaybe<Scalars['Boolean']['input']>
  clearInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>
  clearInternalPolicyCreators?: InputMaybe<Scalars['Boolean']['input']>
  clearInvites?: InputMaybe<Scalars['Boolean']['input']>
  clearNarrativeCreators?: InputMaybe<Scalars['Boolean']['input']>
  clearNarratives?: InputMaybe<Scalars['Boolean']['input']>
  clearNotes?: InputMaybe<Scalars['Boolean']['input']>
  clearOrgSubscriptions?: InputMaybe<Scalars['Boolean']['input']>
  clearPersonalAccessTokens?: InputMaybe<Scalars['Boolean']['input']>
  clearProcedureCreators?: InputMaybe<Scalars['Boolean']['input']>
  clearProcedures?: InputMaybe<Scalars['Boolean']['input']>
  clearProgramCreators?: InputMaybe<Scalars['Boolean']['input']>
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>
  clearRiskCreators?: InputMaybe<Scalars['Boolean']['input']>
  clearRisks?: InputMaybe<Scalars['Boolean']['input']>
  clearSecrets?: InputMaybe<Scalars['Boolean']['input']>
  clearSetting?: InputMaybe<Scalars['Boolean']['input']>
  clearStandards?: InputMaybe<Scalars['Boolean']['input']>
  clearSubcontrols?: InputMaybe<Scalars['Boolean']['input']>
  clearSubscribers?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearTasks?: InputMaybe<Scalars['Boolean']['input']>
  clearTemplateCreators?: InputMaybe<Scalars['Boolean']['input']>
  clearTemplates?: InputMaybe<Scalars['Boolean']['input']>
  /** An optional description of the organization */
  description?: InputMaybe<Scalars['String']['input']>
  /** The organization's displayed 'friendly' name */
  displayName?: InputMaybe<Scalars['String']['input']>
  /** the name of the organization */
  name?: InputMaybe<Scalars['String']['input']>
  removeAPITokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeContactIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlImplementationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlObjectiveCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeDocumentIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEntityIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEntityTypeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEvidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeGroupCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeInternalPolicyCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeInviteIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeNarrativeCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeNoteIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeOrgMembers?: InputMaybe<Array<Scalars['ID']['input']>>
  removeOrgSubscriptionIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removePersonalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProcedureCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProgramCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeRiskCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeSecretIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeStandardIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeSubscriberIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeTemplateCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeTemplateIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  settingID?: InputMaybe<Scalars['ID']['input']>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  updateOrgSettings?: InputMaybe<UpdateOrganizationSettingInput>
}

/**
 * UpdateOrganizationSettingInput is used for update OrganizationSetting object.
 * Input was generated by ent.
 */
export interface UpdateOrganizationSettingInput {
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** domains allowed to access the organization, if empty all domains are allowed */
  allowedEmailDomains?: InputMaybe<Array<Scalars['String']['input']>>
  appendAllowedEmailDomains?: InputMaybe<Array<Scalars['String']['input']>>
  appendDomains?: InputMaybe<Array<Scalars['String']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  /** the billing address to send billing information to */
  billingAddress?: InputMaybe<Scalars['Address']['input']>
  /** Name of the person to contact for billing */
  billingContact?: InputMaybe<Scalars['String']['input']>
  /** Email address of the person to contact for billing */
  billingEmail?: InputMaybe<Scalars['String']['input']>
  /** should we send email notifications related to billing */
  billingNotificationsEnabled?: InputMaybe<Scalars['Boolean']['input']>
  /** Phone number to contact for billing */
  billingPhone?: InputMaybe<Scalars['String']['input']>
  clearAllowedEmailDomains?: InputMaybe<Scalars['Boolean']['input']>
  clearBillingAddress?: InputMaybe<Scalars['Boolean']['input']>
  clearBillingContact?: InputMaybe<Scalars['Boolean']['input']>
  clearBillingEmail?: InputMaybe<Scalars['Boolean']['input']>
  clearBillingPhone?: InputMaybe<Scalars['Boolean']['input']>
  clearDomains?: InputMaybe<Scalars['Boolean']['input']>
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>
  clearGeoLocation?: InputMaybe<Scalars['Boolean']['input']>
  clearOrganization?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearTaxIdentifier?: InputMaybe<Scalars['Boolean']['input']>
  /** domains associated with the organization */
  domains?: InputMaybe<Array<Scalars['String']['input']>>
  /** geographical location of the organization */
  geoLocation?: InputMaybe<OrganizationSettingRegion>
  organizationID?: InputMaybe<Scalars['ID']['input']>
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  /** Usually government-issued tax ID or business ID such as ABN in Australia */
  taxIdentifier?: InputMaybe<Scalars['String']['input']>
}

/**
 * UpdatePersonalAccessTokenInput is used for update PersonalAccessToken object.
 * Input was generated by ent.
 */
export interface UpdatePersonalAccessTokenInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendScopes?: InputMaybe<Array<Scalars['String']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>
  clearIsActive?: InputMaybe<Scalars['Boolean']['input']>
  clearLastUsedAt?: InputMaybe<Scalars['Boolean']['input']>
  clearOrganizations?: InputMaybe<Scalars['Boolean']['input']>
  clearScopes?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  /** a description of the token's purpose */
  description?: InputMaybe<Scalars['String']['input']>
  /** whether the token is active */
  isActive?: InputMaybe<Scalars['Boolean']['input']>
  lastUsedAt?: InputMaybe<Scalars['Time']['input']>
  /** the name associated with the token */
  name?: InputMaybe<Scalars['String']['input']>
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  scopes?: InputMaybe<Array<Scalars['String']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * UpdateProcedureInput is used for update Procedure object.
 * Input was generated by ent.
 */
export interface UpdateProcedureInput {
  RevisionBump?: InputMaybe<Scalars['VersionBump']['input']>
  addBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  /** whether approval is required for edits to the procedure */
  approvalRequired?: InputMaybe<Scalars['Boolean']['input']>
  approverID?: InputMaybe<Scalars['ID']['input']>
  clearApprovalRequired?: InputMaybe<Scalars['Boolean']['input']>
  clearApprover?: InputMaybe<Scalars['Boolean']['input']>
  clearBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  clearControls?: InputMaybe<Scalars['Boolean']['input']>
  clearDelegate?: InputMaybe<Scalars['Boolean']['input']>
  clearDetails?: InputMaybe<Scalars['Boolean']['input']>
  clearEditors?: InputMaybe<Scalars['Boolean']['input']>
  clearInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>
  clearNarratives?: InputMaybe<Scalars['Boolean']['input']>
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>
  clearProcedureType?: InputMaybe<Scalars['Boolean']['input']>
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>
  clearReviewDue?: InputMaybe<Scalars['Boolean']['input']>
  clearReviewFrequency?: InputMaybe<Scalars['Boolean']['input']>
  clearRevision?: InputMaybe<Scalars['Boolean']['input']>
  clearRisks?: InputMaybe<Scalars['Boolean']['input']>
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearTasks?: InputMaybe<Scalars['Boolean']['input']>
  delegateID?: InputMaybe<Scalars['ID']['input']>
  /** details of the procedure */
  details?: InputMaybe<Scalars['String']['input']>
  /** the name of the procedure */
  name?: InputMaybe<Scalars['String']['input']>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** type of the procedure, e.g. compliance, operational, health and safety, etc. */
  procedureType?: InputMaybe<Scalars['String']['input']>
  removeBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the date the procedure should be reviewed, calculated based on the review_frequency if not directly set */
  reviewDue?: InputMaybe<Scalars['Time']['input']>
  /** the frequency at which the procedure should be reviewed, used to calculate the review_due date */
  reviewFrequency?: InputMaybe<ProcedureFrequency>
  /** revision of the object as a semver (e.g. v1.0.0), by default any update will bump the patch version, unless the revision_bump field is set */
  revision?: InputMaybe<Scalars['String']['input']>
  /** status of the procedure, e.g. draft, published, archived, etc. */
  status?: InputMaybe<ProcedureDocumentStatus>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * UpdateProgramInput is used for update Program object.
 * Input was generated by ent.
 */
export interface UpdateProgramInput {
  addActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEvidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addNoteIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProgramMembers?: InputMaybe<Array<CreateProgramMembershipInput>>
  addRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  /** can the auditor read comments */
  auditorReadComments?: InputMaybe<Scalars['Boolean']['input']>
  /** is the program ready for the auditor */
  auditorReady?: InputMaybe<Scalars['Boolean']['input']>
  /** can the auditor write comments */
  auditorWriteComments?: InputMaybe<Scalars['Boolean']['input']>
  clearActionPlans?: InputMaybe<Scalars['Boolean']['input']>
  clearBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  clearControlObjectives?: InputMaybe<Scalars['Boolean']['input']>
  clearControls?: InputMaybe<Scalars['Boolean']['input']>
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>
  clearEditors?: InputMaybe<Scalars['Boolean']['input']>
  clearEndDate?: InputMaybe<Scalars['Boolean']['input']>
  clearEvidence?: InputMaybe<Scalars['Boolean']['input']>
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>
  clearInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>
  clearNarratives?: InputMaybe<Scalars['Boolean']['input']>
  clearNotes?: InputMaybe<Scalars['Boolean']['input']>
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>
  clearProcedures?: InputMaybe<Scalars['Boolean']['input']>
  clearRisks?: InputMaybe<Scalars['Boolean']['input']>
  clearStartDate?: InputMaybe<Scalars['Boolean']['input']>
  clearSubcontrols?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearTasks?: InputMaybe<Scalars['Boolean']['input']>
  clearViewers?: InputMaybe<Scalars['Boolean']['input']>
  /** the description of the program */
  description?: InputMaybe<Scalars['String']['input']>
  /** the end date of the period */
  endDate?: InputMaybe<Scalars['Time']['input']>
  /** the name of the program */
  name?: InputMaybe<Scalars['String']['input']>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  removeActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEvidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeNoteIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProgramMembers?: InputMaybe<Array<Scalars['ID']['input']>>
  removeRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the start date of the period */
  startDate?: InputMaybe<Scalars['Time']['input']>
  /** the status of the program */
  status?: InputMaybe<ProgramProgramStatus>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * UpdateProgramMembershipInput is used for update ProgramMembership object.
 * Input was generated by ent.
 */
export interface UpdateProgramMembershipInput {
  role?: InputMaybe<ProgramMembershipRole>
}

/**
 * UpdateRiskInput is used for update Risk object.
 * Input was generated by ent.
 */
export interface UpdateRiskInput {
  addActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  /** business costs associated with the risk */
  businessCosts?: InputMaybe<Scalars['String']['input']>
  /** category of the risk, e.g. human resources, operations, IT, etc. */
  category?: InputMaybe<Scalars['String']['input']>
  clearActionPlans?: InputMaybe<Scalars['Boolean']['input']>
  clearBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>
  clearBusinessCosts?: InputMaybe<Scalars['Boolean']['input']>
  clearCategory?: InputMaybe<Scalars['Boolean']['input']>
  clearControls?: InputMaybe<Scalars['Boolean']['input']>
  clearDelegate?: InputMaybe<Scalars['Boolean']['input']>
  clearDetails?: InputMaybe<Scalars['Boolean']['input']>
  clearEditors?: InputMaybe<Scalars['Boolean']['input']>
  clearImpact?: InputMaybe<Scalars['Boolean']['input']>
  clearLikelihood?: InputMaybe<Scalars['Boolean']['input']>
  clearMitigation?: InputMaybe<Scalars['Boolean']['input']>
  clearProcedures?: InputMaybe<Scalars['Boolean']['input']>
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>
  clearRiskType?: InputMaybe<Scalars['Boolean']['input']>
  clearScore?: InputMaybe<Scalars['Boolean']['input']>
  clearStakeholder?: InputMaybe<Scalars['Boolean']['input']>
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearViewers?: InputMaybe<Scalars['Boolean']['input']>
  delegateID?: InputMaybe<Scalars['ID']['input']>
  /** details of the risk */
  details?: InputMaybe<Scalars['String']['input']>
  /** impact of the risk -critical, high, medium, low */
  impact?: InputMaybe<RiskRiskImpact>
  /** likelihood of the risk occurring; unlikely, likely, highly likely */
  likelihood?: InputMaybe<RiskRiskLikelihood>
  /** mitigation for the risk */
  mitigation?: InputMaybe<Scalars['String']['input']>
  /** the name of the risk */
  name?: InputMaybe<Scalars['String']['input']>
  removeActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** type of the risk, e.g. strategic, operational, financial, external, etc. */
  riskType?: InputMaybe<Scalars['String']['input']>
  /** score of the risk based on impact and likelihood (1-4 unlikely, 5-9 likely, 10-16 highly likely, 17-20 critical) */
  score?: InputMaybe<Scalars['Int']['input']>
  stakeholderID?: InputMaybe<Scalars['ID']['input']>
  /** status of the risk - open, mitigated, ongoing, in-progress, and archived. */
  status?: InputMaybe<RiskRiskStatus>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * UpdateStandardInput is used for update Standard object.
 * Input was generated by ent.
 */
export interface UpdateStandardInput {
  RevisionBump?: InputMaybe<Scalars['VersionBump']['input']>
  appendDomains?: InputMaybe<Array<Scalars['String']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>
  clearDomains?: InputMaybe<Scalars['Boolean']['input']>
  clearFramework?: InputMaybe<Scalars['Boolean']['input']>
  clearFreeToUse?: InputMaybe<Scalars['Boolean']['input']>
  clearGoverningBody?: InputMaybe<Scalars['Boolean']['input']>
  clearGoverningBodyLogoURL?: InputMaybe<Scalars['Boolean']['input']>
  clearIsPublic?: InputMaybe<Scalars['Boolean']['input']>
  clearLink?: InputMaybe<Scalars['Boolean']['input']>
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>
  clearRevision?: InputMaybe<Scalars['Boolean']['input']>
  clearShortName?: InputMaybe<Scalars['Boolean']['input']>
  clearStandardType?: InputMaybe<Scalars['Boolean']['input']>
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearVersion?: InputMaybe<Scalars['Boolean']['input']>
  /** long description of the standard with details of what is covered */
  description?: InputMaybe<Scalars['String']['input']>
  /** domains the standard covers, e.g. availability, confidentiality, etc. */
  domains?: InputMaybe<Array<Scalars['String']['input']>>
  /** unique identifier of the standard with version */
  framework?: InputMaybe<Scalars['String']['input']>
  /** indicates if the standard is freely distributable under a trial license, only for system owned standards */
  freeToUse?: InputMaybe<Scalars['Boolean']['input']>
  /** governing body of the standard, e.g. AICPA, etc. */
  governingBody?: InputMaybe<Scalars['String']['input']>
  /** URL to the logo of the governing body */
  governingBodyLogoURL?: InputMaybe<Scalars['String']['input']>
  /** indicates if the standard should be made available to all users, only for system owned standards */
  isPublic?: InputMaybe<Scalars['Boolean']['input']>
  /** link to the official standard documentation */
  link?: InputMaybe<Scalars['String']['input']>
  /** the long name of the standard body */
  name?: InputMaybe<Scalars['String']['input']>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** revision of the object as a semver (e.g. v1.0.0), by default any update will bump the patch version, unless the revision_bump field is set */
  revision?: InputMaybe<Scalars['String']['input']>
  /** short name of the standard, e.g. SOC 2, ISO 27001, etc. */
  shortName?: InputMaybe<Scalars['String']['input']>
  /** type of the standard - cybersecurity, healthcare , financial, etc. */
  standardType?: InputMaybe<Scalars['String']['input']>
  /** status of the standard - active, draft, and archived */
  status?: InputMaybe<StandardStandardStatus>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  /** version of the standard */
  version?: InputMaybe<Scalars['String']['input']>
}

/**
 * UpdateSubcontrolInput is used for update Subcontrol object.
 * Input was generated by ent.
 */
export interface UpdateSubcontrolInput {
  addActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlImplementationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEvidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addMappedControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendAssessmentMethods?: InputMaybe<Array<Scalars['AssessmentMethod']['input']>>
  appendAssessmentObjectives?: InputMaybe<Array<Scalars['AssessmentObjective']['input']>>
  appendControlQuestions?: InputMaybe<Array<Scalars['String']['input']>>
  appendExampleEvidence?: InputMaybe<Array<Scalars['ExampleEvidence']['input']>>
  appendImplementationGuidance?: InputMaybe<Array<Scalars['ImplementationGuidance']['input']>>
  appendMappedCategories?: InputMaybe<Array<Scalars['String']['input']>>
  appendReferences?: InputMaybe<Array<Scalars['Reference']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  /** methods used to verify the control implementation during an audit */
  assessmentMethods?: InputMaybe<Array<Scalars['AssessmentMethod']['input']>>
  /** objectives of the audit assessment for the control */
  assessmentObjectives?: InputMaybe<Array<Scalars['AssessmentObjective']['input']>>
  /** external auditor id of the control, can be used to map to external audit partner mappings */
  auditorReferenceID?: InputMaybe<Scalars['String']['input']>
  /** category of the control */
  category?: InputMaybe<Scalars['String']['input']>
  /** category id of the control */
  categoryID?: InputMaybe<Scalars['String']['input']>
  clearActionPlans?: InputMaybe<Scalars['Boolean']['input']>
  clearAssessmentMethods?: InputMaybe<Scalars['Boolean']['input']>
  clearAssessmentObjectives?: InputMaybe<Scalars['Boolean']['input']>
  clearAuditorReferenceID?: InputMaybe<Scalars['Boolean']['input']>
  clearCategory?: InputMaybe<Scalars['Boolean']['input']>
  clearCategoryID?: InputMaybe<Scalars['Boolean']['input']>
  clearControlImplementations?: InputMaybe<Scalars['Boolean']['input']>
  clearControlObjectives?: InputMaybe<Scalars['Boolean']['input']>
  clearControlOwner?: InputMaybe<Scalars['Boolean']['input']>
  clearControlQuestions?: InputMaybe<Scalars['Boolean']['input']>
  clearControlType?: InputMaybe<Scalars['Boolean']['input']>
  clearDelegate?: InputMaybe<Scalars['Boolean']['input']>
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>
  clearEvidence?: InputMaybe<Scalars['Boolean']['input']>
  clearExampleEvidence?: InputMaybe<Scalars['Boolean']['input']>
  clearImplementationGuidance?: InputMaybe<Scalars['Boolean']['input']>
  clearInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>
  clearMappedCategories?: InputMaybe<Scalars['Boolean']['input']>
  clearMappedControls?: InputMaybe<Scalars['Boolean']['input']>
  clearNarratives?: InputMaybe<Scalars['Boolean']['input']>
  clearProcedures?: InputMaybe<Scalars['Boolean']['input']>
  clearReferenceID?: InputMaybe<Scalars['Boolean']['input']>
  clearReferences?: InputMaybe<Scalars['Boolean']['input']>
  clearRisks?: InputMaybe<Scalars['Boolean']['input']>
  clearSource?: InputMaybe<Scalars['Boolean']['input']>
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>
  clearSubcategory?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearTasks?: InputMaybe<Scalars['Boolean']['input']>
  controlID?: InputMaybe<Scalars['ID']['input']>
  controlOwnerID?: InputMaybe<Scalars['ID']['input']>
  /** questions to ask to verify the control */
  controlQuestions?: InputMaybe<Array<Scalars['String']['input']>>
  /** type of the control e.g. preventive, detective, corrective, or deterrent. */
  controlType?: InputMaybe<SubcontrolControlType>
  delegateID?: InputMaybe<Scalars['ID']['input']>
  /** description of what the control is supposed to accomplish */
  description?: InputMaybe<Scalars['String']['input']>
  /** examples of evidence for the control */
  exampleEvidence?: InputMaybe<Array<Scalars['ExampleEvidence']['input']>>
  /** implementation guidance for the control */
  implementationGuidance?: InputMaybe<Array<Scalars['ImplementationGuidance']['input']>>
  /** mapped categories of the control to other standards */
  mappedCategories?: InputMaybe<Array<Scalars['String']['input']>>
  /** the unique reference code for the control */
  refCode?: InputMaybe<Scalars['String']['input']>
  /** internal reference id of the control, can be used for internal tracking */
  referenceID?: InputMaybe<Scalars['String']['input']>
  /** references for the control */
  references?: InputMaybe<Array<Scalars['Reference']['input']>>
  removeActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlImplementationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEvidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeMappedControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** source of the control, e.g. framework, template, custom, etc. */
  source?: InputMaybe<SubcontrolControlSource>
  /** status of the control */
  status?: InputMaybe<SubcontrolControlStatus>
  /** subcategory of the control */
  subcategory?: InputMaybe<Scalars['String']['input']>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * UpdateSubscriberInput is used for update Subscriber object.
 * Input was generated by ent.
 */
export interface UpdateSubscriberInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>
  clearPhoneNumber?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  /** email address of the subscriber */
  email?: InputMaybe<Scalars['String']['input']>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  /** phone number of the subscriber */
  phoneNumber?: InputMaybe<Scalars['String']['input']>
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  /** indicates if the subscriber has unsubscribed from communications */
  unsubscribed?: InputMaybe<Scalars['Boolean']['input']>
}

/**
 * UpdateTFASettingInput is used for update TFASetting object.
 * Input was generated by ent.
 */
export interface UpdateTfaSettingInput {
  clearTotpAllowed?: InputMaybe<Scalars['Boolean']['input']>
  /** Whether to regenerate backup codes */
  regenBackupCodes?: InputMaybe<Scalars['Boolean']['input']>
  /** specifies a user may complete authentication by verifying a TOTP code delivered through an authenticator app */
  totpAllowed?: InputMaybe<Scalars['Boolean']['input']>
  /** specifies if the TFA device has been verified */
  verified?: InputMaybe<Scalars['Boolean']['input']>
}

/**
 * UpdateTaskInput is used for update Task object.
 * Input was generated by ent.
 */
export interface UpdateTaskInput {
  addComment?: InputMaybe<CreateNoteInput>
  addCommentIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEvidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  assigneeID?: InputMaybe<Scalars['ID']['input']>
  assignerID?: InputMaybe<Scalars['ID']['input']>
  /** the category of the task, e.g. evidence upload, risk review, policy review, etc. */
  category?: InputMaybe<Scalars['String']['input']>
  clearAssignee?: InputMaybe<Scalars['Boolean']['input']>
  clearAssigner?: InputMaybe<Scalars['Boolean']['input']>
  clearCategory?: InputMaybe<Scalars['Boolean']['input']>
  clearComments?: InputMaybe<Scalars['Boolean']['input']>
  clearCompleted?: InputMaybe<Scalars['Boolean']['input']>
  clearControlObjectives?: InputMaybe<Scalars['Boolean']['input']>
  clearControls?: InputMaybe<Scalars['Boolean']['input']>
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>
  clearDetails?: InputMaybe<Scalars['Boolean']['input']>
  clearDue?: InputMaybe<Scalars['Boolean']['input']>
  clearEvidence?: InputMaybe<Scalars['Boolean']['input']>
  clearGroups?: InputMaybe<Scalars['Boolean']['input']>
  clearInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>
  clearProcedures?: InputMaybe<Scalars['Boolean']['input']>
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>
  clearSubcontrols?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  /** the completion date of the task */
  completed?: InputMaybe<Scalars['Time']['input']>
  deleteComment?: InputMaybe<Scalars['ID']['input']>
  /** the description of the task */
  description?: InputMaybe<Scalars['String']['input']>
  /** the details of the task */
  details?: InputMaybe<Scalars['String']['input']>
  /** the due date of the task */
  due?: InputMaybe<Scalars['Time']['input']>
  removeCommentIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEvidenceIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the status of the task */
  status?: InputMaybe<TaskTaskStatus>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  /** the title of the task */
  title?: InputMaybe<Scalars['String']['input']>
}

/**
 * UpdateTemplateInput is used for update Template object.
 * Input was generated by ent.
 */
export interface UpdateTemplateInput {
  addDocumentIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>
  clearDocuments?: InputMaybe<Scalars['Boolean']['input']>
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearUischema?: InputMaybe<Scalars['Boolean']['input']>
  /** the description of the template */
  description?: InputMaybe<Scalars['String']['input']>
  /** the jsonschema object of the template */
  jsonconfig?: InputMaybe<Scalars['Map']['input']>
  /** the name of the template */
  name?: InputMaybe<Scalars['String']['input']>
  ownerID?: InputMaybe<Scalars['ID']['input']>
  removeDocumentIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  /** the type of the template, either a provided template or an implementation (document) */
  templateType?: InputMaybe<TemplateDocumentType>
  /** the uischema for the template to render in the UI */
  uischema?: InputMaybe<Scalars['Map']['input']>
}

/**
 * UpdateUserInput is used for update User object.
 * Input was generated by ent.
 */
export interface UpdateUserInput {
  addActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addAssigneeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addAssignerTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEmailVerificationTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addPasswordResetTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addPersonalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addTfaSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  addWebauthnIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  /** auth provider used to register the account */
  authProvider?: InputMaybe<UserAuthProvider>
  avatarFileID?: InputMaybe<Scalars['ID']['input']>
  /** URL of the user's remote avatar */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>
  /** The time the user's (local) avatar was last updated */
  avatarUpdatedAt?: InputMaybe<Scalars['Time']['input']>
  clearActionPlans?: InputMaybe<Scalars['Boolean']['input']>
  clearAssigneeTasks?: InputMaybe<Scalars['Boolean']['input']>
  clearAssignerTasks?: InputMaybe<Scalars['Boolean']['input']>
  clearAvatarFile?: InputMaybe<Scalars['Boolean']['input']>
  clearAvatarRemoteURL?: InputMaybe<Scalars['Boolean']['input']>
  clearAvatarUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>
  clearEmailVerificationTokens?: InputMaybe<Scalars['Boolean']['input']>
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>
  clearFirstName?: InputMaybe<Scalars['Boolean']['input']>
  clearGroups?: InputMaybe<Scalars['Boolean']['input']>
  clearLastName?: InputMaybe<Scalars['Boolean']['input']>
  clearLastSeen?: InputMaybe<Scalars['Boolean']['input']>
  clearOrganizations?: InputMaybe<Scalars['Boolean']['input']>
  clearPassword?: InputMaybe<Scalars['Boolean']['input']>
  clearPasswordResetTokens?: InputMaybe<Scalars['Boolean']['input']>
  clearPersonalAccessTokens?: InputMaybe<Scalars['Boolean']['input']>
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>
  clearRole?: InputMaybe<Scalars['Boolean']['input']>
  clearSub?: InputMaybe<Scalars['Boolean']['input']>
  clearSubcontrols?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearTfaSettings?: InputMaybe<Scalars['Boolean']['input']>
  clearWebauthn?: InputMaybe<Scalars['Boolean']['input']>
  /** The user's displayed 'friendly' name */
  displayName?: InputMaybe<Scalars['String']['input']>
  email?: InputMaybe<Scalars['String']['input']>
  firstName?: InputMaybe<Scalars['String']['input']>
  lastName?: InputMaybe<Scalars['String']['input']>
  /** the time the user was last seen */
  lastSeen?: InputMaybe<Scalars['Time']['input']>
  /** user password hash */
  password?: InputMaybe<Scalars['String']['input']>
  removeActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeAssigneeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeAssignerTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEmailVerificationTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removePasswordResetTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removePersonalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeTfaSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  removeWebauthnIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** the user's role */
  role?: InputMaybe<UserRole>
  settingID?: InputMaybe<Scalars['ID']['input']>
  /** the Subject of the user JWT */
  sub?: InputMaybe<Scalars['String']['input']>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
}

/**
 * UpdateUserSettingInput is used for update UserSetting object.
 * Input was generated by ent.
 */
export interface UpdateUserSettingInput {
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>
  clearDefaultOrg?: InputMaybe<Scalars['Boolean']['input']>
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>
  clearIsTfaEnabled?: InputMaybe<Scalars['Boolean']['input']>
  clearIsWebauthnAllowed?: InputMaybe<Scalars['Boolean']['input']>
  clearSilencedAt?: InputMaybe<Scalars['Boolean']['input']>
  clearSuspendedAt?: InputMaybe<Scalars['Boolean']['input']>
  clearTags?: InputMaybe<Scalars['Boolean']['input']>
  clearUser?: InputMaybe<Scalars['Boolean']['input']>
  defaultOrgID?: InputMaybe<Scalars['ID']['input']>
  /** whether the user has confirmed their email address */
  emailConfirmed?: InputMaybe<Scalars['Boolean']['input']>
  /** whether the user has two factor authentication enabled */
  isTfaEnabled?: InputMaybe<Scalars['Boolean']['input']>
  /** specifies a user may complete authentication by verifying a WebAuthn capable device */
  isWebauthnAllowed?: InputMaybe<Scalars['Boolean']['input']>
  /** user account is locked if unconfirmed or explicitly locked */
  locked?: InputMaybe<Scalars['Boolean']['input']>
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>
  /** The time notifications regarding the user were silenced */
  silencedAt?: InputMaybe<Scalars['Time']['input']>
  /** status of the user account */
  status?: InputMaybe<UserSettingUserStatus>
  /** The time the user was suspended */
  suspendedAt?: InputMaybe<Scalars['Time']['input']>
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>
  userID?: InputMaybe<Scalars['ID']['input']>
}

export interface User extends Node {
  __typename?: 'User'
  actionPlans: ActionPlanConnection
  assigneeTasks: TaskConnection
  assignerTasks: TaskConnection
  /** auth provider used to register the account */
  authProvider: UserAuthProvider
  avatarFile?: Maybe<File>
  /** The user's local avatar file id, takes precedence over the avatar remote URL */
  avatarLocalFileID?: Maybe<Scalars['ID']['output']>
  /** URL of the user's remote avatar */
  avatarRemoteURL?: Maybe<Scalars['String']['output']>
  /** The time the user's (local) avatar was last updated */
  avatarUpdatedAt?: Maybe<Scalars['Time']['output']>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  /** The user's displayed 'friendly' name */
  displayName: Scalars['String']['output']
  email: Scalars['String']['output']
  events: EventConnection
  files: FileConnection
  firstName?: Maybe<Scalars['String']['output']>
  groupMemberships: GroupMembershipConnection
  groups: GroupConnection
  id: Scalars['ID']['output']
  lastName?: Maybe<Scalars['String']['output']>
  /** the time the user was last seen */
  lastSeen?: Maybe<Scalars['Time']['output']>
  orgMemberships: OrgMembershipConnection
  organizations: OrganizationConnection
  personalAccessTokens: PersonalAccessTokenConnection
  programMemberships?: Maybe<Array<ProgramMembership>>
  programs?: Maybe<Array<Program>>
  /** the user's role */
  role?: Maybe<UserRole>
  setting: UserSetting
  /** the Subject of the user JWT */
  sub?: Maybe<Scalars['String']['output']>
  subcontrols: SubcontrolConnection
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  tfaSettings: TfaSettingConnection
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

export interface UserActionPlansArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<ActionPlanOrder>>
  where?: InputMaybe<ActionPlanWhereInput>
}

export interface UserAssigneeTasksArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<TaskOrder>>
  where?: InputMaybe<TaskWhereInput>
}

export interface UserAssignerTasksArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<TaskOrder>>
  where?: InputMaybe<TaskWhereInput>
}

export interface UserEventsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<EventOrder>>
  where?: InputMaybe<EventWhereInput>
}

export interface UserFilesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<FileOrder>>
  where?: InputMaybe<FileWhereInput>
}

export interface UserGroupMembershipsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<GroupMembershipOrder>>
  where?: InputMaybe<GroupMembershipWhereInput>
}

export interface UserGroupsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<GroupOrder>>
  where?: InputMaybe<GroupWhereInput>
}

export interface UserOrgMembershipsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<OrgMembershipOrder>>
  where?: InputMaybe<OrgMembershipWhereInput>
}

export interface UserOrganizationsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<OrganizationOrder>>
  where?: InputMaybe<OrganizationWhereInput>
}

export interface UserPersonalAccessTokensArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<PersonalAccessTokenOrder>>
  where?: InputMaybe<PersonalAccessTokenWhereInput>
}

export interface UserSubcontrolsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<SubcontrolOrder>>
  where?: InputMaybe<SubcontrolWhereInput>
}

export interface UserTfaSettingsArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<TfaSettingOrder>>
  where?: InputMaybe<TfaSettingWhereInput>
}

/** UserAuthProvider is enum for the field auth_provider */
export enum UserAuthProvider {
  CREDENTIALS = 'CREDENTIALS',
  GITHUB = 'GITHUB',
  GOOGLE = 'GOOGLE',
  WEBAUTHN = 'WEBAUTHN',
}

/** Return response for createBulkUser mutation */
export interface UserBulkCreatePayload {
  __typename?: 'UserBulkCreatePayload'
  /** Created users */
  users?: Maybe<Array<User>>
}

/** A connection to a list of items. */
export interface UserConnection {
  __typename?: 'UserConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<UserEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createUser mutation */
export interface UserCreatePayload {
  __typename?: 'UserCreatePayload'
  /** Created user */
  user: User
}

/** Return response for deleteUser mutation */
export interface UserDeletePayload {
  __typename?: 'UserDeletePayload'
  /** Deleted user ID */
  deletedID: Scalars['ID']['output']
}

/** An edge in a connection. */
export interface UserEdge {
  __typename?: 'UserEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<User>
}

export interface UserHistory extends Node {
  __typename?: 'UserHistory'
  /** auth provider used to register the account */
  authProvider: UserHistoryAuthProvider
  /** The user's local avatar file id, takes precedence over the avatar remote URL */
  avatarLocalFileID?: Maybe<Scalars['String']['output']>
  /** URL of the user's remote avatar */
  avatarRemoteURL?: Maybe<Scalars['String']['output']>
  /** The time the user's (local) avatar was last updated */
  avatarUpdatedAt?: Maybe<Scalars['Time']['output']>
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** a shortened prefixed id field to use as a human readable identifier */
  displayID: Scalars['String']['output']
  /** The user's displayed 'friendly' name */
  displayName: Scalars['String']['output']
  email: Scalars['String']['output']
  firstName?: Maybe<Scalars['String']['output']>
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  lastName?: Maybe<Scalars['String']['output']>
  /** the time the user was last seen */
  lastSeen?: Maybe<Scalars['Time']['output']>
  operation: UserHistoryOpType
  ref?: Maybe<Scalars['String']['output']>
  /** the user's role */
  role?: Maybe<UserHistoryRole>
  /** the Subject of the user JWT */
  sub?: Maybe<Scalars['String']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
}

/** UserHistoryAuthProvider is enum for the field auth_provider */
export enum UserHistoryAuthProvider {
  CREDENTIALS = 'CREDENTIALS',
  GITHUB = 'GITHUB',
  GOOGLE = 'GOOGLE',
  WEBAUTHN = 'WEBAUTHN',
}

/** A connection to a list of items. */
export interface UserHistoryConnection {
  __typename?: 'UserHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<UserHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface UserHistoryEdge {
  __typename?: 'UserHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<UserHistory>
}

/** UserHistoryOpType is enum for the field operation */
export enum UserHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for UserHistory connections */
export interface UserHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order UserHistories. */
  field: UserHistoryOrderField
}

/** Properties by which UserHistory connections can be ordered. */
export enum UserHistoryOrderField {
  created_at = 'created_at',
  display_name = 'display_name',
  first_name = 'first_name',
  last_name = 'last_name',
  updated_at = 'updated_at',
}

/** UserHistoryRole is enum for the field role */
export enum UserHistoryRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER',
  USER = 'USER',
}

/**
 * UserHistoryWhereInput is used for filtering UserHistory objects.
 * Input was generated by ent.
 */
export interface UserHistoryWhereInput {
  and?: InputMaybe<Array<UserHistoryWhereInput>>
  /** auth_provider field predicates */
  authProvider?: InputMaybe<UserHistoryAuthProvider>
  authProviderIn?: InputMaybe<Array<UserHistoryAuthProvider>>
  authProviderNEQ?: InputMaybe<UserHistoryAuthProvider>
  authProviderNotIn?: InputMaybe<Array<UserHistoryAuthProvider>>
  /** avatar_local_file_id field predicates */
  avatarLocalFileID?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDContains?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDContainsFold?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDEqualFold?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDGT?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDGTE?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  avatarLocalFileIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  avatarLocalFileIDLT?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDLTE?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDNEQ?: InputMaybe<Scalars['String']['input']>
  avatarLocalFileIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  avatarLocalFileIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** avatar_remote_url field predicates */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLContains?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLContainsFold?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLEqualFold?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLGT?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLGTE?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLHasPrefix?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLHasSuffix?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLIn?: InputMaybe<Array<Scalars['String']['input']>>
  avatarRemoteURLIsNil?: InputMaybe<Scalars['Boolean']['input']>
  avatarRemoteURLLT?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLLTE?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLNEQ?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  avatarRemoteURLNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** avatar_updated_at field predicates */
  avatarUpdatedAt?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtGT?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  avatarUpdatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  avatarUpdatedAtLT?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  avatarUpdatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>
  displayNameContains?: InputMaybe<Scalars['String']['input']>
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>
  displayNameGT?: InputMaybe<Scalars['String']['input']>
  displayNameGTE?: InputMaybe<Scalars['String']['input']>
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayNameLT?: InputMaybe<Scalars['String']['input']>
  displayNameLTE?: InputMaybe<Scalars['String']['input']>
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** email field predicates */
  email?: InputMaybe<Scalars['String']['input']>
  emailContains?: InputMaybe<Scalars['String']['input']>
  emailContainsFold?: InputMaybe<Scalars['String']['input']>
  emailEqualFold?: InputMaybe<Scalars['String']['input']>
  emailGT?: InputMaybe<Scalars['String']['input']>
  emailGTE?: InputMaybe<Scalars['String']['input']>
  emailHasPrefix?: InputMaybe<Scalars['String']['input']>
  emailHasSuffix?: InputMaybe<Scalars['String']['input']>
  emailIn?: InputMaybe<Array<Scalars['String']['input']>>
  emailLT?: InputMaybe<Scalars['String']['input']>
  emailLTE?: InputMaybe<Scalars['String']['input']>
  emailNEQ?: InputMaybe<Scalars['String']['input']>
  emailNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** first_name field predicates */
  firstName?: InputMaybe<Scalars['String']['input']>
  firstNameContains?: InputMaybe<Scalars['String']['input']>
  firstNameContainsFold?: InputMaybe<Scalars['String']['input']>
  firstNameEqualFold?: InputMaybe<Scalars['String']['input']>
  firstNameGT?: InputMaybe<Scalars['String']['input']>
  firstNameGTE?: InputMaybe<Scalars['String']['input']>
  firstNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  firstNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  firstNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  firstNameIsNil?: InputMaybe<Scalars['Boolean']['input']>
  firstNameLT?: InputMaybe<Scalars['String']['input']>
  firstNameLTE?: InputMaybe<Scalars['String']['input']>
  firstNameNEQ?: InputMaybe<Scalars['String']['input']>
  firstNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  firstNameNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** last_name field predicates */
  lastName?: InputMaybe<Scalars['String']['input']>
  lastNameContains?: InputMaybe<Scalars['String']['input']>
  lastNameContainsFold?: InputMaybe<Scalars['String']['input']>
  lastNameEqualFold?: InputMaybe<Scalars['String']['input']>
  lastNameGT?: InputMaybe<Scalars['String']['input']>
  lastNameGTE?: InputMaybe<Scalars['String']['input']>
  lastNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  lastNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  lastNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  lastNameIsNil?: InputMaybe<Scalars['Boolean']['input']>
  lastNameLT?: InputMaybe<Scalars['String']['input']>
  lastNameLTE?: InputMaybe<Scalars['String']['input']>
  lastNameNEQ?: InputMaybe<Scalars['String']['input']>
  lastNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  lastNameNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** last_seen field predicates */
  lastSeen?: InputMaybe<Scalars['Time']['input']>
  lastSeenGT?: InputMaybe<Scalars['Time']['input']>
  lastSeenGTE?: InputMaybe<Scalars['Time']['input']>
  lastSeenIn?: InputMaybe<Array<Scalars['Time']['input']>>
  lastSeenIsNil?: InputMaybe<Scalars['Boolean']['input']>
  lastSeenLT?: InputMaybe<Scalars['Time']['input']>
  lastSeenLTE?: InputMaybe<Scalars['Time']['input']>
  lastSeenNEQ?: InputMaybe<Scalars['Time']['input']>
  lastSeenNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  lastSeenNotNil?: InputMaybe<Scalars['Boolean']['input']>
  not?: InputMaybe<UserHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<UserHistoryOpType>
  operationIn?: InputMaybe<Array<UserHistoryOpType>>
  operationNEQ?: InputMaybe<UserHistoryOpType>
  operationNotIn?: InputMaybe<Array<UserHistoryOpType>>
  or?: InputMaybe<Array<UserHistoryWhereInput>>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** role field predicates */
  role?: InputMaybe<UserHistoryRole>
  roleIn?: InputMaybe<Array<UserHistoryRole>>
  roleIsNil?: InputMaybe<Scalars['Boolean']['input']>
  roleNEQ?: InputMaybe<UserHistoryRole>
  roleNotIn?: InputMaybe<Array<UserHistoryRole>>
  roleNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** sub field predicates */
  sub?: InputMaybe<Scalars['String']['input']>
  subContains?: InputMaybe<Scalars['String']['input']>
  subContainsFold?: InputMaybe<Scalars['String']['input']>
  subEqualFold?: InputMaybe<Scalars['String']['input']>
  subGT?: InputMaybe<Scalars['String']['input']>
  subGTE?: InputMaybe<Scalars['String']['input']>
  subHasPrefix?: InputMaybe<Scalars['String']['input']>
  subHasSuffix?: InputMaybe<Scalars['String']['input']>
  subIn?: InputMaybe<Array<Scalars['String']['input']>>
  subIsNil?: InputMaybe<Scalars['Boolean']['input']>
  subLT?: InputMaybe<Scalars['String']['input']>
  subLTE?: InputMaybe<Scalars['String']['input']>
  subNEQ?: InputMaybe<Scalars['String']['input']>
  subNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  subNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for User connections */
export interface UserOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order Users. */
  field: UserOrderField
}

/** Properties by which User connections can be ordered. */
export enum UserOrderField {
  created_at = 'created_at',
  display_name = 'display_name',
  first_name = 'first_name',
  last_name = 'last_name',
  updated_at = 'updated_at',
}

/** UserRole is enum for the field role */
export enum UserRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER',
  USER = 'USER',
}

export interface UserSearchResult {
  __typename?: 'UserSearchResult'
  users?: Maybe<Array<User>>
}

export interface UserSetting extends Node {
  __typename?: 'UserSetting'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  /** organization to load on user login */
  defaultOrg?: Maybe<Organization>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** whether the user has confirmed their email address */
  emailConfirmed: Scalars['Boolean']['output']
  files: FileConnection
  id: Scalars['ID']['output']
  /** whether the user has two factor authentication enabled */
  isTfaEnabled?: Maybe<Scalars['Boolean']['output']>
  /** specifies a user may complete authentication by verifying a WebAuthn capable device */
  isWebauthnAllowed?: Maybe<Scalars['Boolean']['output']>
  /** user account is locked if unconfirmed or explicitly locked */
  locked: Scalars['Boolean']['output']
  /** The time notifications regarding the user were silenced */
  silencedAt?: Maybe<Scalars['Time']['output']>
  /** status of the user account */
  status: UserSettingUserStatus
  /** The time the user was suspended */
  suspendedAt?: Maybe<Scalars['Time']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  user?: Maybe<User>
  userID?: Maybe<Scalars['ID']['output']>
}

export interface UserSettingFilesArgs {
  after?: InputMaybe<Scalars['Cursor']['input']>
  before?: InputMaybe<Scalars['Cursor']['input']>
  first?: InputMaybe<Scalars['Int']['input']>
  last?: InputMaybe<Scalars['Int']['input']>
  orderBy?: InputMaybe<Array<FileOrder>>
  where?: InputMaybe<FileWhereInput>
}

/** Return response for createBulkUserSetting mutation */
export interface UserSettingBulkCreatePayload {
  __typename?: 'UserSettingBulkCreatePayload'
  /** Created userSettings */
  userSettings?: Maybe<Array<UserSetting>>
}

/** A connection to a list of items. */
export interface UserSettingConnection {
  __typename?: 'UserSettingConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<UserSettingEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** Return response for createUserSetting mutation */
export interface UserSettingCreatePayload {
  __typename?: 'UserSettingCreatePayload'
  /** Created userSetting */
  userSetting: UserSetting
}

/** An edge in a connection. */
export interface UserSettingEdge {
  __typename?: 'UserSettingEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<UserSetting>
}

export interface UserSettingHistory extends Node {
  __typename?: 'UserSettingHistory'
  createdAt?: Maybe<Scalars['Time']['output']>
  createdBy?: Maybe<Scalars['String']['output']>
  deletedAt?: Maybe<Scalars['Time']['output']>
  deletedBy?: Maybe<Scalars['String']['output']>
  /** whether the user has confirmed their email address */
  emailConfirmed: Scalars['Boolean']['output']
  historyTime: Scalars['Time']['output']
  id: Scalars['ID']['output']
  /** whether the user has two factor authentication enabled */
  isTfaEnabled?: Maybe<Scalars['Boolean']['output']>
  /** specifies a user may complete authentication by verifying a WebAuthn capable device */
  isWebauthnAllowed?: Maybe<Scalars['Boolean']['output']>
  /** user account is locked if unconfirmed or explicitly locked */
  locked: Scalars['Boolean']['output']
  operation: UserSettingHistoryOpType
  ref?: Maybe<Scalars['String']['output']>
  /** The time notifications regarding the user were silenced */
  silencedAt?: Maybe<Scalars['Time']['output']>
  /** status of the user account */
  status: UserSettingHistoryUserStatus
  /** The time the user was suspended */
  suspendedAt?: Maybe<Scalars['Time']['output']>
  /** tags associated with the object */
  tags?: Maybe<Array<Scalars['String']['output']>>
  updatedAt?: Maybe<Scalars['Time']['output']>
  updatedBy?: Maybe<Scalars['String']['output']>
  userID?: Maybe<Scalars['String']['output']>
}

/** A connection to a list of items. */
export interface UserSettingHistoryConnection {
  __typename?: 'UserSettingHistoryConnection'
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<UserSettingHistoryEdge>>>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output']
}

/** An edge in a connection. */
export interface UserSettingHistoryEdge {
  __typename?: 'UserSettingHistoryEdge'
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output']
  /** The item at the end of the edge. */
  node?: Maybe<UserSettingHistory>
}

/** UserSettingHistoryOpType is enum for the field operation */
export enum UserSettingHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE',
}

/** Ordering options for UserSettingHistory connections */
export interface UserSettingHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order UserSettingHistories. */
  field: UserSettingHistoryOrderField
}

/** Properties by which UserSettingHistory connections can be ordered. */
export enum UserSettingHistoryOrderField {
  created_at = 'created_at',
  updated_at = 'updated_at',
}

/** UserSettingHistoryUserStatus is enum for the field status */
export enum UserSettingHistoryUserStatus {
  ACTIVE = 'ACTIVE',
  DEACTIVATED = 'DEACTIVATED',
  INACTIVE = 'INACTIVE',
  ONBOARDING = 'ONBOARDING',
  SUSPENDED = 'SUSPENDED',
}

/**
 * UserSettingHistoryWhereInput is used for filtering UserSettingHistory objects.
 * Input was generated by ent.
 */
export interface UserSettingHistoryWhereInput {
  and?: InputMaybe<Array<UserSettingHistoryWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** email_confirmed field predicates */
  emailConfirmed?: InputMaybe<Scalars['Boolean']['input']>
  emailConfirmedNEQ?: InputMaybe<Scalars['Boolean']['input']>
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** is_tfa_enabled field predicates */
  isTfaEnabled?: InputMaybe<Scalars['Boolean']['input']>
  isTfaEnabledIsNil?: InputMaybe<Scalars['Boolean']['input']>
  isTfaEnabledNEQ?: InputMaybe<Scalars['Boolean']['input']>
  isTfaEnabledNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** is_webauthn_allowed field predicates */
  isWebauthnAllowed?: InputMaybe<Scalars['Boolean']['input']>
  isWebauthnAllowedIsNil?: InputMaybe<Scalars['Boolean']['input']>
  isWebauthnAllowedNEQ?: InputMaybe<Scalars['Boolean']['input']>
  isWebauthnAllowedNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** locked field predicates */
  locked?: InputMaybe<Scalars['Boolean']['input']>
  lockedNEQ?: InputMaybe<Scalars['Boolean']['input']>
  not?: InputMaybe<UserSettingHistoryWhereInput>
  /** operation field predicates */
  operation?: InputMaybe<UserSettingHistoryOpType>
  operationIn?: InputMaybe<Array<UserSettingHistoryOpType>>
  operationNEQ?: InputMaybe<UserSettingHistoryOpType>
  operationNotIn?: InputMaybe<Array<UserSettingHistoryOpType>>
  or?: InputMaybe<Array<UserSettingHistoryWhereInput>>
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>
  refContains?: InputMaybe<Scalars['String']['input']>
  refContainsFold?: InputMaybe<Scalars['String']['input']>
  refEqualFold?: InputMaybe<Scalars['String']['input']>
  refGT?: InputMaybe<Scalars['String']['input']>
  refGTE?: InputMaybe<Scalars['String']['input']>
  refHasPrefix?: InputMaybe<Scalars['String']['input']>
  refHasSuffix?: InputMaybe<Scalars['String']['input']>
  refIn?: InputMaybe<Array<Scalars['String']['input']>>
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>
  refLT?: InputMaybe<Scalars['String']['input']>
  refLTE?: InputMaybe<Scalars['String']['input']>
  refNEQ?: InputMaybe<Scalars['String']['input']>
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** silenced_at field predicates */
  silencedAt?: InputMaybe<Scalars['Time']['input']>
  silencedAtGT?: InputMaybe<Scalars['Time']['input']>
  silencedAtGTE?: InputMaybe<Scalars['Time']['input']>
  silencedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  silencedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  silencedAtLT?: InputMaybe<Scalars['Time']['input']>
  silencedAtLTE?: InputMaybe<Scalars['Time']['input']>
  silencedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  silencedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  silencedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<UserSettingHistoryUserStatus>
  statusIn?: InputMaybe<Array<UserSettingHistoryUserStatus>>
  statusNEQ?: InputMaybe<UserSettingHistoryUserStatus>
  statusNotIn?: InputMaybe<Array<UserSettingHistoryUserStatus>>
  /** suspended_at field predicates */
  suspendedAt?: InputMaybe<Scalars['Time']['input']>
  suspendedAtGT?: InputMaybe<Scalars['Time']['input']>
  suspendedAtGTE?: InputMaybe<Scalars['Time']['input']>
  suspendedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  suspendedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  suspendedAtLT?: InputMaybe<Scalars['Time']['input']>
  suspendedAtLTE?: InputMaybe<Scalars['Time']['input']>
  suspendedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  suspendedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  suspendedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** user_id field predicates */
  userID?: InputMaybe<Scalars['String']['input']>
  userIDContains?: InputMaybe<Scalars['String']['input']>
  userIDContainsFold?: InputMaybe<Scalars['String']['input']>
  userIDEqualFold?: InputMaybe<Scalars['String']['input']>
  userIDGT?: InputMaybe<Scalars['String']['input']>
  userIDGTE?: InputMaybe<Scalars['String']['input']>
  userIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  userIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  userIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  userIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  userIDLT?: InputMaybe<Scalars['String']['input']>
  userIDLTE?: InputMaybe<Scalars['String']['input']>
  userIDNEQ?: InputMaybe<Scalars['String']['input']>
  userIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  userIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Ordering options for UserSetting connections */
export interface UserSettingOrder {
  /** The ordering direction. */
  direction?: OrderDirection
  /** The field by which to order UserSettings. */
  field: UserSettingOrderField
}

/** Properties by which UserSetting connections can be ordered. */
export enum UserSettingOrderField {
  created_at = 'created_at',
  updated_at = 'updated_at',
}

export interface UserSettingSearchResult {
  __typename?: 'UserSettingSearchResult'
  userSettings?: Maybe<Array<UserSetting>>
}

/** Return response for updateUserSetting mutation */
export interface UserSettingUpdatePayload {
  __typename?: 'UserSettingUpdatePayload'
  /** Updated userSetting */
  userSetting: UserSetting
}

/** UserSettingUserStatus is enum for the field status */
export enum UserSettingUserStatus {
  ACTIVE = 'ACTIVE',
  DEACTIVATED = 'DEACTIVATED',
  INACTIVE = 'INACTIVE',
  ONBOARDING = 'ONBOARDING',
  SUSPENDED = 'SUSPENDED',
}

/**
 * UserSettingWhereInput is used for filtering UserSetting objects.
 * Input was generated by ent.
 */
export interface UserSettingWhereInput {
  and?: InputMaybe<Array<UserSettingWhereInput>>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** email_confirmed field predicates */
  emailConfirmed?: InputMaybe<Scalars['Boolean']['input']>
  emailConfirmedNEQ?: InputMaybe<Scalars['Boolean']['input']>
  /** default_org edge predicates */
  hasDefaultOrg?: InputMaybe<Scalars['Boolean']['input']>
  hasDefaultOrgWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>
  /** user edge predicates */
  hasUser?: InputMaybe<Scalars['Boolean']['input']>
  hasUserWith?: InputMaybe<Array<UserWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** is_tfa_enabled field predicates */
  isTfaEnabled?: InputMaybe<Scalars['Boolean']['input']>
  isTfaEnabledIsNil?: InputMaybe<Scalars['Boolean']['input']>
  isTfaEnabledNEQ?: InputMaybe<Scalars['Boolean']['input']>
  isTfaEnabledNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** is_webauthn_allowed field predicates */
  isWebauthnAllowed?: InputMaybe<Scalars['Boolean']['input']>
  isWebauthnAllowedIsNil?: InputMaybe<Scalars['Boolean']['input']>
  isWebauthnAllowedNEQ?: InputMaybe<Scalars['Boolean']['input']>
  isWebauthnAllowedNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** locked field predicates */
  locked?: InputMaybe<Scalars['Boolean']['input']>
  lockedNEQ?: InputMaybe<Scalars['Boolean']['input']>
  not?: InputMaybe<UserSettingWhereInput>
  or?: InputMaybe<Array<UserSettingWhereInput>>
  /** silenced_at field predicates */
  silencedAt?: InputMaybe<Scalars['Time']['input']>
  silencedAtGT?: InputMaybe<Scalars['Time']['input']>
  silencedAtGTE?: InputMaybe<Scalars['Time']['input']>
  silencedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  silencedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  silencedAtLT?: InputMaybe<Scalars['Time']['input']>
  silencedAtLTE?: InputMaybe<Scalars['Time']['input']>
  silencedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  silencedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  silencedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** status field predicates */
  status?: InputMaybe<UserSettingUserStatus>
  statusIn?: InputMaybe<Array<UserSettingUserStatus>>
  statusNEQ?: InputMaybe<UserSettingUserStatus>
  statusNotIn?: InputMaybe<Array<UserSettingUserStatus>>
  /** suspended_at field predicates */
  suspendedAt?: InputMaybe<Scalars['Time']['input']>
  suspendedAtGT?: InputMaybe<Scalars['Time']['input']>
  suspendedAtGTE?: InputMaybe<Scalars['Time']['input']>
  suspendedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  suspendedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  suspendedAtLT?: InputMaybe<Scalars['Time']['input']>
  suspendedAtLTE?: InputMaybe<Scalars['Time']['input']>
  suspendedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  suspendedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  suspendedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** user_id field predicates */
  userID?: InputMaybe<Scalars['ID']['input']>
  userIDContains?: InputMaybe<Scalars['ID']['input']>
  userIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  userIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  userIDGT?: InputMaybe<Scalars['ID']['input']>
  userIDGTE?: InputMaybe<Scalars['ID']['input']>
  userIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  userIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  userIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  userIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  userIDLT?: InputMaybe<Scalars['ID']['input']>
  userIDLTE?: InputMaybe<Scalars['ID']['input']>
  userIDNEQ?: InputMaybe<Scalars['ID']['input']>
  userIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  userIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

/** Return response for updateUser mutation */
export interface UserUpdatePayload {
  __typename?: 'UserUpdatePayload'
  /** Updated user */
  user: User
}

/**
 * UserWhereInput is used for filtering User objects.
 * Input was generated by ent.
 */
export interface UserWhereInput {
  and?: InputMaybe<Array<UserWhereInput>>
  /** auth_provider field predicates */
  authProvider?: InputMaybe<UserAuthProvider>
  authProviderIn?: InputMaybe<Array<UserAuthProvider>>
  authProviderNEQ?: InputMaybe<UserAuthProvider>
  authProviderNotIn?: InputMaybe<Array<UserAuthProvider>>
  /** avatar_local_file_id field predicates */
  avatarLocalFileID?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDContains?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDContainsFold?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDEqualFold?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDGT?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDGTE?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDHasPrefix?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDHasSuffix?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDIn?: InputMaybe<Array<Scalars['ID']['input']>>
  avatarLocalFileIDIsNil?: InputMaybe<Scalars['Boolean']['input']>
  avatarLocalFileIDLT?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDLTE?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDNEQ?: InputMaybe<Scalars['ID']['input']>
  avatarLocalFileIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  avatarLocalFileIDNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** avatar_remote_url field predicates */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLContains?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLContainsFold?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLEqualFold?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLGT?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLGTE?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLHasPrefix?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLHasSuffix?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLIn?: InputMaybe<Array<Scalars['String']['input']>>
  avatarRemoteURLIsNil?: InputMaybe<Scalars['Boolean']['input']>
  avatarRemoteURLLT?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLLTE?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLNEQ?: InputMaybe<Scalars['String']['input']>
  avatarRemoteURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  avatarRemoteURLNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** avatar_updated_at field predicates */
  avatarUpdatedAt?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtGT?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  avatarUpdatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  avatarUpdatedAtLT?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  avatarUpdatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  avatarUpdatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>
  createdAtGT?: InputMaybe<Scalars['Time']['input']>
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdAtLT?: InputMaybe<Scalars['Time']['input']>
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>
  createdByContains?: InputMaybe<Scalars['String']['input']>
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>
  createdByGT?: InputMaybe<Scalars['String']['input']>
  createdByGTE?: InputMaybe<Scalars['String']['input']>
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  createdByLT?: InputMaybe<Scalars['String']['input']>
  createdByLTE?: InputMaybe<Scalars['String']['input']>
  createdByNEQ?: InputMaybe<Scalars['String']['input']>
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>
  deletedByContains?: InputMaybe<Scalars['String']['input']>
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>
  deletedByGT?: InputMaybe<Scalars['String']['input']>
  deletedByGTE?: InputMaybe<Scalars['String']['input']>
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  deletedByLT?: InputMaybe<Scalars['String']['input']>
  deletedByLTE?: InputMaybe<Scalars['String']['input']>
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** display_id field predicates */
  displayID?: InputMaybe<Scalars['String']['input']>
  displayIDContains?: InputMaybe<Scalars['String']['input']>
  displayIDContainsFold?: InputMaybe<Scalars['String']['input']>
  displayIDEqualFold?: InputMaybe<Scalars['String']['input']>
  displayIDGT?: InputMaybe<Scalars['String']['input']>
  displayIDGTE?: InputMaybe<Scalars['String']['input']>
  displayIDHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayIDHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayIDIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayIDLT?: InputMaybe<Scalars['String']['input']>
  displayIDLTE?: InputMaybe<Scalars['String']['input']>
  displayIDNEQ?: InputMaybe<Scalars['String']['input']>
  displayIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>
  displayNameContains?: InputMaybe<Scalars['String']['input']>
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>
  displayNameGT?: InputMaybe<Scalars['String']['input']>
  displayNameGTE?: InputMaybe<Scalars['String']['input']>
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  displayNameLT?: InputMaybe<Scalars['String']['input']>
  displayNameLTE?: InputMaybe<Scalars['String']['input']>
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** email field predicates */
  email?: InputMaybe<Scalars['String']['input']>
  emailContains?: InputMaybe<Scalars['String']['input']>
  emailContainsFold?: InputMaybe<Scalars['String']['input']>
  emailEqualFold?: InputMaybe<Scalars['String']['input']>
  emailGT?: InputMaybe<Scalars['String']['input']>
  emailGTE?: InputMaybe<Scalars['String']['input']>
  emailHasPrefix?: InputMaybe<Scalars['String']['input']>
  emailHasSuffix?: InputMaybe<Scalars['String']['input']>
  emailIn?: InputMaybe<Array<Scalars['String']['input']>>
  emailLT?: InputMaybe<Scalars['String']['input']>
  emailLTE?: InputMaybe<Scalars['String']['input']>
  emailNEQ?: InputMaybe<Scalars['String']['input']>
  emailNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  /** first_name field predicates */
  firstName?: InputMaybe<Scalars['String']['input']>
  firstNameContains?: InputMaybe<Scalars['String']['input']>
  firstNameContainsFold?: InputMaybe<Scalars['String']['input']>
  firstNameEqualFold?: InputMaybe<Scalars['String']['input']>
  firstNameGT?: InputMaybe<Scalars['String']['input']>
  firstNameGTE?: InputMaybe<Scalars['String']['input']>
  firstNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  firstNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  firstNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  firstNameIsNil?: InputMaybe<Scalars['Boolean']['input']>
  firstNameLT?: InputMaybe<Scalars['String']['input']>
  firstNameLTE?: InputMaybe<Scalars['String']['input']>
  firstNameNEQ?: InputMaybe<Scalars['String']['input']>
  firstNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  firstNameNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** action_plans edge predicates */
  hasActionPlans?: InputMaybe<Scalars['Boolean']['input']>
  hasActionPlansWith?: InputMaybe<Array<ActionPlanWhereInput>>
  /** assignee_tasks edge predicates */
  hasAssigneeTasks?: InputMaybe<Scalars['Boolean']['input']>
  hasAssigneeTasksWith?: InputMaybe<Array<TaskWhereInput>>
  /** assigner_tasks edge predicates */
  hasAssignerTasks?: InputMaybe<Scalars['Boolean']['input']>
  hasAssignerTasksWith?: InputMaybe<Array<TaskWhereInput>>
  /** avatar_file edge predicates */
  hasAvatarFile?: InputMaybe<Scalars['Boolean']['input']>
  hasAvatarFileWith?: InputMaybe<Array<FileWhereInput>>
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>
  /** group_memberships edge predicates */
  hasGroupMemberships?: InputMaybe<Scalars['Boolean']['input']>
  hasGroupMembershipsWith?: InputMaybe<Array<GroupMembershipWhereInput>>
  /** groups edge predicates */
  hasGroups?: InputMaybe<Scalars['Boolean']['input']>
  hasGroupsWith?: InputMaybe<Array<GroupWhereInput>>
  /** org_memberships edge predicates */
  hasOrgMemberships?: InputMaybe<Scalars['Boolean']['input']>
  hasOrgMembershipsWith?: InputMaybe<Array<OrgMembershipWhereInput>>
  /** organizations edge predicates */
  hasOrganizations?: InputMaybe<Scalars['Boolean']['input']>
  hasOrganizationsWith?: InputMaybe<Array<OrganizationWhereInput>>
  /** personal_access_tokens edge predicates */
  hasPersonalAccessTokens?: InputMaybe<Scalars['Boolean']['input']>
  hasPersonalAccessTokensWith?: InputMaybe<Array<PersonalAccessTokenWhereInput>>
  /** program_memberships edge predicates */
  hasProgramMemberships?: InputMaybe<Scalars['Boolean']['input']>
  hasProgramMembershipsWith?: InputMaybe<Array<ProgramMembershipWhereInput>>
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>
  /** setting edge predicates */
  hasSetting?: InputMaybe<Scalars['Boolean']['input']>
  hasSettingWith?: InputMaybe<Array<UserSettingWhereInput>>
  /** subcontrols edge predicates */
  hasSubcontrols?: InputMaybe<Scalars['Boolean']['input']>
  hasSubcontrolsWith?: InputMaybe<Array<SubcontrolWhereInput>>
  /** tfa_settings edge predicates */
  hasTfaSettings?: InputMaybe<Scalars['Boolean']['input']>
  hasTfaSettingsWith?: InputMaybe<Array<TfaSettingWhereInput>>
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>
  idContainsFold?: InputMaybe<Scalars['ID']['input']>
  idEqualFold?: InputMaybe<Scalars['ID']['input']>
  idGT?: InputMaybe<Scalars['ID']['input']>
  idGTE?: InputMaybe<Scalars['ID']['input']>
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>
  idLT?: InputMaybe<Scalars['ID']['input']>
  idLTE?: InputMaybe<Scalars['ID']['input']>
  idNEQ?: InputMaybe<Scalars['ID']['input']>
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>
  /** last_name field predicates */
  lastName?: InputMaybe<Scalars['String']['input']>
  lastNameContains?: InputMaybe<Scalars['String']['input']>
  lastNameContainsFold?: InputMaybe<Scalars['String']['input']>
  lastNameEqualFold?: InputMaybe<Scalars['String']['input']>
  lastNameGT?: InputMaybe<Scalars['String']['input']>
  lastNameGTE?: InputMaybe<Scalars['String']['input']>
  lastNameHasPrefix?: InputMaybe<Scalars['String']['input']>
  lastNameHasSuffix?: InputMaybe<Scalars['String']['input']>
  lastNameIn?: InputMaybe<Array<Scalars['String']['input']>>
  lastNameIsNil?: InputMaybe<Scalars['Boolean']['input']>
  lastNameLT?: InputMaybe<Scalars['String']['input']>
  lastNameLTE?: InputMaybe<Scalars['String']['input']>
  lastNameNEQ?: InputMaybe<Scalars['String']['input']>
  lastNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  lastNameNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** last_seen field predicates */
  lastSeen?: InputMaybe<Scalars['Time']['input']>
  lastSeenGT?: InputMaybe<Scalars['Time']['input']>
  lastSeenGTE?: InputMaybe<Scalars['Time']['input']>
  lastSeenIn?: InputMaybe<Array<Scalars['Time']['input']>>
  lastSeenIsNil?: InputMaybe<Scalars['Boolean']['input']>
  lastSeenLT?: InputMaybe<Scalars['Time']['input']>
  lastSeenLTE?: InputMaybe<Scalars['Time']['input']>
  lastSeenNEQ?: InputMaybe<Scalars['Time']['input']>
  lastSeenNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  lastSeenNotNil?: InputMaybe<Scalars['Boolean']['input']>
  not?: InputMaybe<UserWhereInput>
  or?: InputMaybe<Array<UserWhereInput>>
  /** role field predicates */
  role?: InputMaybe<UserRole>
  roleIn?: InputMaybe<Array<UserRole>>
  roleIsNil?: InputMaybe<Scalars['Boolean']['input']>
  roleNEQ?: InputMaybe<UserRole>
  roleNotIn?: InputMaybe<Array<UserRole>>
  roleNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** sub field predicates */
  sub?: InputMaybe<Scalars['String']['input']>
  subContains?: InputMaybe<Scalars['String']['input']>
  subContainsFold?: InputMaybe<Scalars['String']['input']>
  subEqualFold?: InputMaybe<Scalars['String']['input']>
  subGT?: InputMaybe<Scalars['String']['input']>
  subGTE?: InputMaybe<Scalars['String']['input']>
  subHasPrefix?: InputMaybe<Scalars['String']['input']>
  subHasSuffix?: InputMaybe<Scalars['String']['input']>
  subIn?: InputMaybe<Array<Scalars['String']['input']>>
  subIsNil?: InputMaybe<Scalars['Boolean']['input']>
  subLT?: InputMaybe<Scalars['String']['input']>
  subLTE?: InputMaybe<Scalars['String']['input']>
  subNEQ?: InputMaybe<Scalars['String']['input']>
  subNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  subNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>
  updatedByContains?: InputMaybe<Scalars['String']['input']>
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>
  updatedByGT?: InputMaybe<Scalars['String']['input']>
  updatedByGTE?: InputMaybe<Scalars['String']['input']>
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>
  updatedByLT?: InputMaybe<Scalars['String']['input']>
  updatedByLTE?: InputMaybe<Scalars['String']['input']>
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>
}

export type GetAllControlObjectivesQueryVariables = Exact<{
  where?: InputMaybe<ControlObjectiveWhereInput>
}>

export type GetAllControlObjectivesQuery = {
  __typename?: 'Query'
  controlObjectives: {
    __typename?: 'ControlObjectiveConnection'
    edges?: Array<{ __typename?: 'ControlObjectiveEdge'; node?: { __typename?: 'ControlObjective'; id: string; name: string; displayID: string } | null } | null> | null
  }
}

export type ControlListFieldsFragment = {
  __typename?: 'Control'
  id: string
  refCode: string
  description?: string | null
  status?: ControlControlStatus | null
  category?: string | null
  subcategory?: string | null
  tags?: Array<string> | null
  mappedCategories?: Array<string> | null
  subcontrols: { __typename?: 'SubcontrolConnection'; totalCount: number }
  controlOwner?: { __typename?: 'Group'; id: string; displayName: string; logoURL?: string | null; gravatarLogoURL?: string | null } | null
}

export type ControlDetailsFieldsFragment = {
  __typename?: 'Control'
  id: string
  category?: string | null
  refCode: string
  subcategory?: string | null
  mappedCategories?: Array<string> | null
  status?: ControlControlStatus | null
  tags?: Array<string> | null
  description?: string | null
  implementationGuidance?: Array<any> | null
  exampleEvidence?: Array<any> | null
  controlQuestions?: Array<string> | null
  assessmentMethods?: Array<any> | null
  assessmentObjectives?: Array<any> | null
  displayID: string
  controlObjectives: {
    __typename?: 'ControlObjectiveConnection'
    edges?: Array<{
      __typename?: 'ControlObjectiveEdge'
      node?: { __typename?: 'ControlObjective'; id: string; status?: string | null; desiredOutcome?: string | null; name: string; displayID: string } | null
    } | null> | null
  }
  controlImplementations: {
    __typename?: 'ControlImplementationConnection'
    edges?: Array<{
      __typename?: 'ControlImplementationEdge'
      node?: { __typename?: 'ControlImplementation'; details?: string | null; status?: ControlImplementationDocumentStatus | null; verificationDate?: any | null } | null
    } | null> | null
  }
  evidence: {
    __typename?: 'EvidenceConnection'
    edges?: Array<{ __typename?: 'EvidenceEdge'; node?: { __typename?: 'Evidence'; displayID: string; name: string; creationDate: any } | null } | null> | null
  }
  subcontrols: {
    __typename?: 'SubcontrolConnection'
    totalCount: number
    edges?: Array<{ __typename?: 'SubcontrolEdge'; node?: { __typename?: 'Subcontrol'; id: string; refCode: string; description?: string | null } | null } | null> | null
  }
  internalPolicies: {
    __typename?: 'InternalPolicyConnection'
    totalCount: number
    edges?: Array<{ __typename?: 'InternalPolicyEdge'; node?: { __typename?: 'InternalPolicy'; id: string; name: string; displayID: string } | null } | null> | null
  }
  procedures: {
    __typename?: 'ProcedureConnection'
    totalCount: number
    edges?: Array<{ __typename?: 'ProcedureEdge'; node?: { __typename?: 'Procedure'; id: string; name: string; displayID: string } | null } | null> | null
  }
  tasks: {
    __typename?: 'TaskConnection'
    totalCount: number
    edges?: Array<{ __typename?: 'TaskEdge'; node?: { __typename?: 'Task'; id: string; title: string; displayID: string } | null } | null> | null
  }
  programs: {
    __typename?: 'ProgramConnection'
    totalCount: number
    edges?: Array<{ __typename?: 'ProgramEdge'; node?: { __typename?: 'Program'; id: string; name: string; displayID: string } | null } | null> | null
  }
  risks: {
    __typename?: 'RiskConnection'
    totalCount: number
    edges?: Array<{ __typename?: 'RiskEdge'; node?: { __typename?: 'Risk'; id: string; name: string; displayID: string } | null } | null> | null
  }
  delegate?: { __typename?: 'Group'; id: string; displayName: string; logoURL?: string | null; gravatarLogoURL?: string | null } | null
  controlOwner?: { __typename?: 'Group'; id: string; displayName: string; logoURL?: string | null; gravatarLogoURL?: string | null } | null
}

export type GetAllControlsQueryVariables = Exact<{
  where?: InputMaybe<ControlWhereInput>
  orderBy?: InputMaybe<Array<ControlOrder> | ControlOrder>
  first?: InputMaybe<Scalars['Int']['input']>
  after?: InputMaybe<Scalars['Cursor']['input']>
}>

export type GetAllControlsQuery = {
  __typename?: 'Query'
  controls: {
    __typename?: 'ControlConnection'
    totalCount: number
    edges?: Array<{
      __typename?: 'ControlEdge'
      cursor: any
      node?: {
        __typename?: 'Control'
        id: string
        refCode: string
        description?: string | null
        status?: ControlControlStatus | null
        category?: string | null
        subcategory?: string | null
        tags?: Array<string> | null
        mappedCategories?: Array<string> | null
        subcontrols: { __typename?: 'SubcontrolConnection'; totalCount: number }
        controlOwner?: { __typename?: 'Group'; id: string; displayName: string; logoURL?: string | null; gravatarLogoURL?: string | null } | null
      } | null
    } | null> | null
    pageInfo: { __typename?: 'PageInfo'; hasNextPage: boolean; hasPreviousPage: boolean; endCursor?: any | null; startCursor?: any | null }
  }
}

export type GetControlByIdQueryVariables = Exact<{
  controlId: Scalars['ID']['input']
}>

export type GetControlByIdQuery = {
  __typename?: 'Query'
  control: {
    __typename?: 'Control'
    id: string
    category?: string | null
    refCode: string
    subcategory?: string | null
    mappedCategories?: Array<string> | null
    status?: ControlControlStatus | null
    tags?: Array<string> | null
    description?: string | null
    implementationGuidance?: Array<any> | null
    exampleEvidence?: Array<any> | null
    controlQuestions?: Array<string> | null
    assessmentMethods?: Array<any> | null
    assessmentObjectives?: Array<any> | null
    displayID: string
    controlObjectives: {
      __typename?: 'ControlObjectiveConnection'
      edges?: Array<{
        __typename?: 'ControlObjectiveEdge'
        node?: { __typename?: 'ControlObjective'; id: string; status?: string | null; desiredOutcome?: string | null; name: string; displayID: string } | null
      } | null> | null
    }
    controlImplementations: {
      __typename?: 'ControlImplementationConnection'
      edges?: Array<{
        __typename?: 'ControlImplementationEdge'
        node?: { __typename?: 'ControlImplementation'; details?: string | null; status?: ControlImplementationDocumentStatus | null; verificationDate?: any | null } | null
      } | null> | null
    }
    evidence: {
      __typename?: 'EvidenceConnection'
      edges?: Array<{ __typename?: 'EvidenceEdge'; node?: { __typename?: 'Evidence'; displayID: string; name: string; creationDate: any } | null } | null> | null
    }
    subcontrols: {
      __typename?: 'SubcontrolConnection'
      totalCount: number
      edges?: Array<{ __typename?: 'SubcontrolEdge'; node?: { __typename?: 'Subcontrol'; id: string; refCode: string; description?: string | null } | null } | null> | null
    }
    internalPolicies: {
      __typename?: 'InternalPolicyConnection'
      totalCount: number
      edges?: Array<{ __typename?: 'InternalPolicyEdge'; node?: { __typename?: 'InternalPolicy'; id: string; name: string; displayID: string } | null } | null> | null
    }
    procedures: {
      __typename?: 'ProcedureConnection'
      totalCount: number
      edges?: Array<{ __typename?: 'ProcedureEdge'; node?: { __typename?: 'Procedure'; id: string; name: string; displayID: string } | null } | null> | null
    }
    tasks: {
      __typename?: 'TaskConnection'
      totalCount: number
      edges?: Array<{ __typename?: 'TaskEdge'; node?: { __typename?: 'Task'; id: string; title: string; displayID: string } | null } | null> | null
    }
    programs: {
      __typename?: 'ProgramConnection'
      totalCount: number
      edges?: Array<{ __typename?: 'ProgramEdge'; node?: { __typename?: 'Program'; id: string; name: string; displayID: string } | null } | null> | null
    }
    risks: {
      __typename?: 'RiskConnection'
      totalCount: number
      edges?: Array<{ __typename?: 'RiskEdge'; node?: { __typename?: 'Risk'; id: string; name: string; displayID: string } | null } | null> | null
    }
    delegate?: { __typename?: 'Group'; id: string; displayName: string; logoURL?: string | null; gravatarLogoURL?: string | null } | null
    controlOwner?: { __typename?: 'Group'; id: string; displayName: string; logoURL?: string | null; gravatarLogoURL?: string | null } | null
  }
}

export type UpdateControlMutationVariables = Exact<{
  updateControlId: Scalars['ID']['input']
  input: UpdateControlInput
}>

export type UpdateControlMutation = { __typename?: 'Mutation'; updateControl: { __typename?: 'ControlUpdatePayload'; control: { __typename?: 'Control'; id: string } } }

export type GetDashboardDataQueryVariables = Exact<{
  where?: InputMaybe<TaskWhereInput>
}>

export type GetDashboardDataQuery = {
  __typename?: 'Query'
  programs: {
    __typename?: 'ProgramConnection'
    edges?: Array<{
      __typename?: 'ProgramEdge'
      node?: {
        __typename?: 'Program'
        id: string
        name: string
        description?: string | null
        controls: { __typename?: 'ControlConnection'; edges?: Array<{ __typename?: 'ControlEdge'; node?: { __typename?: 'Control'; id: string } | null } | null> | null }
        tasks: {
          __typename?: 'TaskConnection'
          edges?: Array<{
            __typename?: 'TaskEdge'
            node?: { __typename?: 'Task'; id: string; title: string; status: TaskTaskStatus; description?: string | null; due?: any | null } | null
          } | null> | null
        }
      } | null
    } | null> | null
  }
  tasks: {
    __typename?: 'TaskConnection'
    edges?: Array<{ __typename?: 'TaskEdge'; node?: { __typename?: 'Task'; id: string; title: string; status: TaskTaskStatus; due?: any | null; tags?: Array<string> | null } | null } | null> | null
  }
  organizations: { __typename?: 'OrganizationConnection'; edges?: Array<{ __typename?: 'OrganizationEdge'; node?: { __typename?: 'Organization'; id: string; name: string } | null } | null> | null }
}

export type CreateEvidenceMutationVariables = Exact<{
  input: CreateEvidenceInput
  evidenceFiles?: InputMaybe<Array<Scalars['Upload']['input']> | Scalars['Upload']['input']>
}>

export type CreateEvidenceMutation = { __typename?: 'Mutation'; createEvidence: { __typename?: 'EvidenceCreatePayload'; evidence: { __typename?: 'Evidence'; id: string } } }

export type GetEvidenceFilesQueryVariables = Exact<{ [key: string]: never }>

export type GetEvidenceFilesQuery = {
  __typename?: 'Query'
  files: {
    __typename?: 'FileConnection'
    edges?: Array<{
      __typename?: 'FileEdge'
      node?: { __typename?: 'File'; id: string; providedFileName: string; presignedURL?: string | null; providedFileExtension: string; categoryType?: string | null; createdAt?: any | null } | null
    } | null> | null
  }
}

export type GetAllEvidencesQueryVariables = Exact<{
  where?: InputMaybe<EvidenceWhereInput>
}>

export type GetAllEvidencesQuery = {
  __typename?: 'Query'
  evidences: {
    __typename?: 'EvidenceConnection'
    edges?: Array<{ __typename?: 'EvidenceEdge'; node?: { __typename?: 'Evidence'; id: string; name: string; displayID: string; description?: string | null } | null } | null> | null
  }
}

export type GetAllGroupsQueryVariables = Exact<{
  where?: InputMaybe<GroupWhereInput>
  orderBy?: InputMaybe<Array<GroupOrder> | GroupOrder>
}>

export type GetAllGroupsQuery = {
  __typename?: 'Query'
  groups: {
    __typename?: 'GroupConnection'
    edges?: Array<{
      __typename?: 'GroupEdge'
      node?: {
        __typename?: 'Group'
        id: string
        name: string
        description?: string | null
        displayName: string
        logoURL?: string | null
        isManaged?: boolean | null
        tags?: Array<string> | null
        members?: Array<{
          __typename?: 'GroupMembership'
          id: string
          role: GroupMembershipRole
          user: {
            __typename?: 'User'
            id: string
            firstName?: string | null
            lastName?: string | null
            avatarRemoteURL?: string | null
            role?: UserRole | null
            avatarFile?: { __typename?: 'File'; presignedURL?: string | null } | null
          }
        }> | null
        setting?: {
          __typename?: 'GroupSetting'
          visibility: GroupSettingVisibility
          joinPolicy: GroupSettingJoinPolicy
          syncToSlack?: boolean | null
          syncToGithub?: boolean | null
          id: string
        } | null
      } | null
    } | null> | null
  }
}

export type CreateGroupWithMembersMutationVariables = Exact<{
  groupInput: CreateGroupInput
  members?: InputMaybe<Array<GroupMembersInput> | GroupMembersInput>
}>

export type CreateGroupWithMembersMutation = { __typename?: 'Mutation'; createGroupWithMembers: { __typename?: 'GroupCreatePayload'; group: { __typename?: 'Group'; id: string; displayID: string } } }

export type UpdateGroupMutationVariables = Exact<{
  updateGroupId: Scalars['ID']['input']
  input: UpdateGroupInput
}>

export type UpdateGroupMutation = { __typename?: 'Mutation'; updateGroup: { __typename?: 'GroupUpdatePayload'; group: { __typename?: 'Group'; id: string } } }

export type DeleteGroupMutationVariables = Exact<{
  deleteGroupId: Scalars['ID']['input']
}>

export type DeleteGroupMutation = { __typename?: 'Mutation'; deleteGroup: { __typename?: 'GroupDeletePayload'; deletedID: string } }

export type GetGroupDetailsQueryVariables = Exact<{
  groupId: Scalars['ID']['input']
}>

export type GetGroupDetailsQuery = {
  __typename?: 'Query'
  group: {
    __typename?: 'Group'
    id: string
    name: string
    description?: string | null
    displayName: string
    logoURL?: string | null
    isManaged?: boolean | null
    tags?: Array<string> | null
    members?: Array<{
      __typename?: 'GroupMembership'
      id: string
      role: GroupMembershipRole
      user: {
        __typename?: 'User'
        id: string
        firstName?: string | null
        lastName?: string | null
        avatarRemoteURL?: string | null
        role?: UserRole | null
        avatarFile?: { __typename?: 'File'; presignedURL?: string | null } | null
      }
    }> | null
    setting?: { __typename?: 'GroupSetting'; visibility: GroupSettingVisibility; joinPolicy: GroupSettingJoinPolicy; syncToSlack?: boolean | null; syncToGithub?: boolean | null; id: string } | null
  }
}

export type UpdateGroupMembershipMutationVariables = Exact<{
  updateGroupMembershipId: Scalars['ID']['input']
  input: UpdateGroupMembershipInput
}>

export type UpdateGroupMembershipMutation = {
  __typename?: 'Mutation'
  updateGroupMembership: { __typename?: 'GroupMembershipUpdatePayload'; groupMembership: { __typename?: 'GroupMembership'; id: string } }
}

export type GetGroupPermissionsQueryVariables = Exact<{
  groupId: Scalars['ID']['input']
}>

export type GetGroupPermissionsQuery = {
  __typename?: 'Query'
  group: {
    __typename?: 'Group'
    permissions?: Array<{ __typename?: 'GroupPermissions'; displayID?: string | null; id?: string | null; name?: string | null; objectType: string; permissions: Permission }> | null
  }
}

export type SearchGroupsQueryVariables = Exact<{
  query: Scalars['String']['input']
}>

export type SearchGroupsQuery = {
  __typename?: 'Query'
  groupSearch?: {
    __typename?: 'GroupSearchResult'
    groups?: Array<{
      __typename?: 'Group'
      id: string
      name: string
      description?: string | null
      displayName: string
      logoURL?: string | null
      isManaged?: boolean | null
      tags?: Array<string> | null
      members?: Array<{
        __typename?: 'GroupMembership'
        id: string
        role: GroupMembershipRole
        user: {
          __typename?: 'User'
          id: string
          firstName?: string | null
          lastName?: string | null
          avatarRemoteURL?: string | null
          role?: UserRole | null
          avatarFile?: { __typename?: 'File'; presignedURL?: string | null } | null
        }
      }> | null
      setting?: { __typename?: 'GroupSetting'; visibility: GroupSettingVisibility; joinPolicy: GroupSettingJoinPolicy; syncToSlack?: boolean | null; syncToGithub?: boolean | null; id: string } | null
    }> | null
  } | null
}

export type UpdateUserRoleInOrgMutationVariables = Exact<{
  updateOrgMemberId: Scalars['ID']['input']
  input: UpdateOrgMembershipInput
}>

export type UpdateUserRoleInOrgMutation = {
  __typename?: 'Mutation'
  updateOrgMembership: { __typename?: 'OrgMembershipUpdatePayload'; orgMembership: { __typename?: 'OrgMembership'; id: string; role: OrgMembershipRole; userID: string; organizationID: string } }
}

export type RemoveUserFromOrgMutationVariables = Exact<{
  deleteOrgMembershipId: Scalars['ID']['input']
}>

export type RemoveUserFromOrgMutation = { __typename?: 'Mutation'; deleteOrgMembership: { __typename?: 'OrgMembershipDeletePayload'; deletedID: string } }

export type GetAllNarrativesQueryVariables = Exact<{
  where?: InputMaybe<NarrativeWhereInput>
}>

export type GetAllNarrativesQuery = {
  __typename?: 'Query'
  narratives: {
    __typename?: 'NarrativeConnection'
    edges?: Array<{ __typename?: 'NarrativeEdge'; node?: { __typename?: 'Narrative'; id: string; name: string; displayID: string } | null } | null> | null
  }
}

export type CreateOnboardingMutationVariables = Exact<{
  input: CreateOnboardingInput
}>

export type CreateOnboardingMutation = {
  __typename?: 'Mutation'
  createOnboarding: {
    __typename?: 'OnboardingCreatePayload'
    onboarding: {
      __typename?: 'Onboarding'
      companyDetails?: any | null
      companyName: string
      domains?: Array<string> | null
      compliance?: any | null
      id: string
      organizationID?: string | null
      userDetails?: any | null
    }
  }
}

export type GetAllOrganizationsQueryVariables = Exact<{ [key: string]: never }>

export type GetAllOrganizationsQuery = {
  __typename?: 'Query'
  organizations: {
    __typename?: 'OrganizationConnection'
    edges?: Array<{
      __typename?: 'OrganizationEdge'
      node?: {
        __typename?: 'Organization'
        id: string
        name: string
        displayName: string
        avatarRemoteURL?: string | null
        personalOrg?: boolean | null
        avatarFile?: { __typename?: 'File'; id: string; presignedURL?: string | null } | null
      } | null
    } | null> | null
  }
}

export type GetOrganizationNameByIdQueryVariables = Exact<{
  organizationId: Scalars['ID']['input']
}>

export type GetOrganizationNameByIdQuery = { __typename?: 'Query'; organization: { __typename?: 'Organization'; name: string; displayName: string } }

export type GetSingleOrganizationMembersQueryVariables = Exact<{
  organizationId: Scalars['ID']['input']
}>

export type GetSingleOrganizationMembersQuery = {
  __typename?: 'Query'
  organization: {
    __typename?: 'Organization'
    members?: Array<{
      __typename?: 'OrgMembership'
      id: string
      createdAt?: any | null
      role: OrgMembershipRole
      user: {
        __typename?: 'User'
        id: string
        firstName?: string | null
        lastName?: string | null
        authProvider: UserAuthProvider
        avatarRemoteURL?: string | null
        email: string
        role?: UserRole | null
        createdAt?: any | null
        avatarFile?: { __typename?: 'File'; id: string; presignedURL?: string | null } | null
      }
    }> | null
  }
}

export type GetAllOrganizationsWithMembersQueryVariables = Exact<{ [key: string]: never }>

export type GetAllOrganizationsWithMembersQuery = {
  __typename?: 'Query'
  organizations: {
    __typename?: 'OrganizationConnection'
    edges?: Array<{
      __typename?: 'OrganizationEdge'
      node?: {
        __typename?: 'Organization'
        id: string
        personalOrg?: boolean | null
        displayName: string
        name: string
        avatarRemoteURL?: string | null
        avatarFile?: { __typename?: 'File'; id: string; presignedURL?: string | null } | null
        members?: Array<{ __typename?: 'OrgMembership'; role: OrgMembershipRole }> | null
      } | null
    } | null> | null
  }
}

export type GetInvitesQueryVariables = Exact<{
  where?: InputMaybe<InviteWhereInput>
  orderBy?: InputMaybe<Array<InviteOrder> | InviteOrder>
}>

export type GetInvitesQuery = {
  __typename?: 'Query'
  invites: {
    __typename?: 'InviteConnection'
    edges?: Array<{
      __typename?: 'InviteEdge'
      node?: { __typename?: 'Invite'; id: string; recipient: string; status: InviteInviteStatus; createdAt?: any | null; expires?: any | null; role: InviteRole; sendAttempts: number } | null
    } | null> | null
  }
}

export type GetOrganizationBillingQueryVariables = Exact<{
  organizationId: Scalars['ID']['input']
}>

export type GetOrganizationBillingQuery = {
  __typename?: 'Query'
  organization: {
    __typename?: 'Organization'
    personalOrg?: boolean | null
    orgSubscriptions?: Array<{
      __typename?: 'OrgSubscription'
      active: boolean
      expiresAt?: any | null
      subscriptionURL?: string | null
      stripeSubscriptionStatus?: string | null
      productTier?: string | null
      productPrice?: any | null
      features?: Array<string> | null
    }> | null
  }
}

export type GetOrganizationSettingQueryVariables = Exact<{
  organizationId: Scalars['ID']['input']
}>

export type GetOrganizationSettingQuery = {
  __typename?: 'Query'
  organization: {
    __typename?: 'Organization'
    setting?: {
      __typename?: 'OrganizationSetting'
      createdAt?: any | null
      updatedAt?: any | null
      createdBy?: string | null
      updatedBy?: string | null
      domains?: Array<string> | null
      billingContact?: string | null
      billingEmail?: string | null
      billingPhone?: string | null
      billingAddress?: any | null
      taxIdentifier?: string | null
      tags?: Array<string> | null
      geoLocation?: OrganizationSettingRegion | null
      billingNotificationsEnabled: boolean
    } | null
  }
}

export type GetBillingEmailQueryVariables = Exact<{
  organizationId: Scalars['ID']['input']
}>

export type GetBillingEmailQuery = { __typename?: 'Query'; organization: { __typename?: 'Organization'; setting?: { __typename?: 'OrganizationSetting'; billingEmail?: string | null } | null } }

export type CreateOrganizationMutationVariables = Exact<{
  input: CreateOrganizationInput
}>

export type CreateOrganizationMutation = { __typename?: 'Mutation'; createOrganization: { __typename?: 'OrganizationCreatePayload'; organization: { __typename?: 'Organization'; id: string } } }

export type UpdateOrganizationMutationVariables = Exact<{
  updateOrganizationId: Scalars['ID']['input']
  input: UpdateOrganizationInput
  avatarFile?: InputMaybe<Scalars['Upload']['input']>
}>

export type UpdateOrganizationMutation = { __typename?: 'Mutation'; updateOrganization: { __typename?: 'OrganizationUpdatePayload'; organization: { __typename?: 'Organization'; id: string } } }

export type CreateBulkInviteMutationVariables = Exact<{
  input?: InputMaybe<Array<CreateInviteInput> | CreateInviteInput>
}>

export type CreateBulkInviteMutation = { __typename?: 'Mutation'; createBulkInvite: { __typename?: 'InviteBulkCreatePayload'; invites?: Array<{ __typename?: 'Invite'; id: string }> | null } }

export type DeleteOrganizationInviteMutationVariables = Exact<{
  deleteInviteId: Scalars['ID']['input']
}>

export type DeleteOrganizationInviteMutation = { __typename?: 'Mutation'; deleteInvite: { __typename?: 'InviteDeletePayload'; deletedID: string } }

export type DeleteOrganizationMutationVariables = Exact<{
  deleteOrganizationId: Scalars['ID']['input']
}>

export type DeleteOrganizationMutation = { __typename?: 'Mutation'; deleteOrganization: { __typename?: 'OrganizationDeletePayload'; deletedID: string } }

export type CreateInternalPolicyMutationVariables = Exact<{
  input: CreateInternalPolicyInput
}>

export type CreateInternalPolicyMutation = {
  __typename?: 'Mutation'
  createInternalPolicy: { __typename?: 'InternalPolicyCreatePayload'; internalPolicy: { __typename?: 'InternalPolicy'; id: string; name: string; policyType?: string | null; details?: string | null } }
}

export type UpdateInternalPolicyMutationVariables = Exact<{
  updateInternalPolicyId: Scalars['ID']['input']
  input: UpdateInternalPolicyInput
}>

export type UpdateInternalPolicyMutation = {
  __typename?: 'Mutation'
  updateInternalPolicy: { __typename?: 'InternalPolicyUpdatePayload'; internalPolicy: { __typename?: 'InternalPolicy'; id: string; name: string; policyType?: string | null; details?: string | null } }
}

export type DeleteInternalPolicyMutationVariables = Exact<{
  deleteInternalPolicyId: Scalars['ID']['input']
}>

export type DeleteInternalPolicyMutation = { __typename?: 'Mutation'; deleteInternalPolicy: { __typename?: 'InternalPolicyDeletePayload'; deletedID: string } }

export type GetInternalPoliciesListQueryVariables = Exact<{
  orderBy?: InputMaybe<Array<InternalPolicyOrder> | InternalPolicyOrder>
  where?: InputMaybe<InternalPolicyWhereInput>
}>

export type GetInternalPoliciesListQuery = {
  __typename?: 'Query'
  internalPolicies: {
    __typename?: 'InternalPolicyConnection'
    edges?: Array<{
      __typename?: 'InternalPolicyEdge'
      node?: {
        __typename?: 'InternalPolicy'
        id: string
        name: string
        displayID: string
        status?: InternalPolicyDocumentStatus | null
        revision?: string | null
        updatedAt?: any | null
        updatedBy?: string | null
        createdAt?: any | null
        createdBy?: string | null
        tags?: Array<string> | null
        details?: string | null
      } | null
    } | null> | null
  }
}

export type GetAllInternalPoliciesQueryVariables = Exact<{ [key: string]: never }>

export type GetAllInternalPoliciesQuery = {
  __typename?: 'Query'
  internalPolicies: {
    __typename?: 'InternalPolicyConnection'
    edges?: Array<{ __typename?: 'InternalPolicyEdge'; node?: { __typename?: 'InternalPolicy'; id: string; name: string } | null } | null> | null
  }
}

export type InternalPolicyByIdFragment = {
  __typename?: 'InternalPolicy'
  id: string
  name: string
  details?: string | null
  createdAt?: any | null
  createdBy?: string | null
  updatedAt?: any | null
  updatedBy?: string | null
  tags?: Array<string> | null
  revision?: string | null
  status?: InternalPolicyDocumentStatus | null
  policyType?: string | null
  displayID: string
  procedures: { __typename?: 'ProcedureConnection'; edges?: Array<{ __typename?: 'ProcedureEdge'; node?: { __typename?: 'Procedure'; id: string; name: string } | null } | null> | null }
}

export type GetInternalPolicyDetailsByIdQueryVariables = Exact<{
  internalPolicyId: Scalars['ID']['input']
}>

export type GetInternalPolicyDetailsByIdQuery = {
  __typename?: 'Query'
  internalPolicy: {
    __typename?: 'InternalPolicy'
    id: string
    name: string
    details?: string | null
    createdAt?: any | null
    createdBy?: string | null
    updatedAt?: any | null
    updatedBy?: string | null
    tags?: Array<string> | null
    revision?: string | null
    status?: InternalPolicyDocumentStatus | null
    policyType?: string | null
    displayID: string
    procedures: { __typename?: 'ProcedureConnection'; edges?: Array<{ __typename?: 'ProcedureEdge'; node?: { __typename?: 'Procedure'; id: string; name: string } | null } | null> | null }
  }
}

export type SearchInternalPoliciesQueryVariables = Exact<{
  query: Scalars['String']['input']
}>

export type SearchInternalPoliciesQuery = {
  __typename?: 'Query'
  internalPolicySearch?: {
    __typename?: 'InternalPolicySearchResult'
    internalPolicies?: Array<{
      __typename?: 'InternalPolicy'
      id: string
      name: string
      displayID: string
      status?: InternalPolicyDocumentStatus | null
      revision?: string | null
      updatedAt?: any | null
      updatedBy?: string | null
      createdAt?: any | null
      createdBy?: string | null
      tags?: Array<string> | null
      details?: string | null
    }> | null
  } | null
}

export type CreateProcedureMutationVariables = Exact<{
  input: CreateProcedureInput
}>

export type CreateProcedureMutation = { __typename?: 'Mutation'; createProcedure: { __typename?: 'ProcedureCreatePayload'; procedure: { __typename?: 'Procedure'; id: string; name: string } } }

export type UpdateProcedureMutationVariables = Exact<{
  updateProcedureId: Scalars['ID']['input']
  input: UpdateProcedureInput
}>

export type UpdateProcedureMutation = {
  __typename?: 'Mutation'
  updateProcedure: { __typename?: 'ProcedureUpdatePayload'; procedure: { __typename?: 'Procedure'; id: string; name: string; procedureType?: string | null } }
}

export type GetAllProceduresWithDetailsQueryVariables = Exact<{ [key: string]: never }>

export type GetAllProceduresWithDetailsQuery = {
  __typename?: 'Query'
  procedures: {
    __typename?: 'ProcedureConnection'
    edges?: Array<{
      __typename?: 'ProcedureEdge'
      node?: {
        __typename?: 'Procedure'
        id: string
        name: string
        status?: ProcedureDocumentStatus | null
        revision?: string | null
        updatedAt?: any | null
        updatedBy?: string | null
        createdAt?: any | null
        createdBy?: string | null
        tags?: Array<string> | null
      } | null
    } | null> | null
  }
}

export type GetAllProceduresQueryVariables = Exact<{
  where?: InputMaybe<ProcedureWhereInput>
  orderBy?: InputMaybe<Array<ProcedureOrder> | ProcedureOrder>
}>

export type GetAllProceduresQuery = {
  __typename?: 'Query'
  procedures: {
    __typename?: 'ProcedureConnection'
    edges?: Array<{
      __typename?: 'ProcedureEdge'
      node?: {
        __typename?: 'Procedure'
        id: string
        name: string
        displayID: string
        status?: ProcedureDocumentStatus | null
        revision?: string | null
        updatedAt?: any | null
        updatedBy?: string | null
        createdAt?: any | null
        createdBy?: string | null
        tags?: Array<string> | null
      } | null
    } | null> | null
  }
}

export type GetProcedureDetailsByIdQueryVariables = Exact<{
  procedureId: Scalars['ID']['input']
}>

export type GetProcedureDetailsByIdQuery = {
  __typename?: 'Query'
  procedure: {
    __typename?: 'Procedure'
    id: string
    name: string
    details?: string | null
    createdAt?: any | null
    createdBy?: string | null
    updatedAt?: any | null
    updatedBy?: string | null
    tags?: Array<string> | null
    revision?: string | null
    status?: ProcedureDocumentStatus | null
    procedureType?: string | null
    displayID: string
    internalPolicies: {
      __typename?: 'InternalPolicyConnection'
      edges?: Array<{ __typename?: 'InternalPolicyEdge'; node?: { __typename?: 'InternalPolicy'; id: string; name: string } | null } | null> | null
    }
  }
}

export type DeleteProcedureMutationVariables = Exact<{
  deleteProcedureId: Scalars['ID']['input']
}>

export type DeleteProcedureMutation = { __typename?: 'Mutation'; deleteProcedure: { __typename?: 'ProcedureDeletePayload'; deletedID: string } }

export type SearchProceduresQueryVariables = Exact<{
  query: Scalars['String']['input']
}>

export type SearchProceduresQuery = {
  __typename?: 'Query'
  procedureSearch?: {
    __typename?: 'ProcedureSearchResult'
    procedures?: Array<{
      __typename?: 'Procedure'
      id: string
      name: string
      details?: string | null
      displayID: string
      status?: ProcedureDocumentStatus | null
      revision?: string | null
      updatedAt?: any | null
      updatedBy?: string | null
      createdAt?: any | null
      createdBy?: string | null
      tags?: Array<string> | null
    }> | null
  } | null
}

export type CreateProgramWithMembersMutationVariables = Exact<{
  input: CreateProgramWithMembersInput
}>

export type CreateProgramWithMembersMutation = {
  __typename?: 'Mutation'
  createProgramWithMembers: { __typename?: 'ProgramCreatePayload'; program: { __typename?: 'Program'; id: string; name: string } }
}

export type UpdateProgramMutationVariables = Exact<{
  updateProgramId: Scalars['ID']['input']
  input: UpdateProgramInput
}>

export type UpdateProgramMutation = { __typename?: 'Mutation'; updateProgram: { __typename?: 'ProgramUpdatePayload'; program: { __typename?: 'Program'; id: string; name: string } } }

export type GetAllProgramsQueryVariables = Exact<{
  where?: InputMaybe<ProgramWhereInput>
}>

export type GetAllProgramsQuery = {
  __typename?: 'Query'
  programs: {
    __typename?: 'ProgramConnection'
    edges?: Array<{
      __typename?: 'ProgramEdge'
      node?: {
        __typename?: 'Program'
        id: string
        name: string
        description?: string | null
        tags?: Array<string> | null
        status: ProgramProgramStatus
        startDate?: any | null
        endDate?: any | null
        auditorReady: boolean
        displayID: string
      } | null
    } | null> | null
  }
}

export type GetProgramEdgesForWizardQueryVariables = Exact<{ [key: string]: never }>

export type GetProgramEdgesForWizardQuery = {
  __typename?: 'Query'
  risks: { __typename?: 'RiskConnection'; edges?: Array<{ __typename?: 'RiskEdge'; node?: { __typename?: 'Risk'; id: string; name: string } | null } | null> | null }
  procedures: { __typename?: 'ProcedureConnection'; edges?: Array<{ __typename?: 'ProcedureEdge'; node?: { __typename?: 'Procedure'; id: string; name: string } | null } | null> | null }
  internalPolicies: {
    __typename?: 'InternalPolicyConnection'
    edges?: Array<{ __typename?: 'InternalPolicyEdge'; node?: { __typename?: 'InternalPolicy'; id: string; name: string } | null } | null> | null
  }
  groups: { __typename?: 'GroupConnection'; edges?: Array<{ __typename?: 'GroupEdge'; node?: { __typename?: 'Group'; id: string; name: string; displayName: string } | null } | null> | null }
  orgMemberships: {
    __typename?: 'OrgMembershipConnection'
    edges?: Array<{
      __typename?: 'OrgMembershipEdge'
      node?: { __typename?: 'OrgMembership'; user: { __typename?: 'User'; id: string; firstName?: string | null; lastName?: string | null; role?: UserRole | null } } | null
    } | null> | null
  }
}

export type GetProgramDetailsByIdQueryVariables = Exact<{
  programId: Scalars['ID']['input']
}>

export type GetProgramDetailsByIdQuery = {
  __typename?: 'Query'
  program: {
    __typename?: 'Program'
    id: string
    name: string
    description?: string | null
    tags?: Array<string> | null
    status: ProgramProgramStatus
    startDate?: any | null
    endDate?: any | null
    auditorReady: boolean
    auditorWriteComments: boolean
    auditorReadComments: boolean
    tasks: {
      __typename?: 'TaskConnection'
      edges?: Array<{
        __typename?: 'TaskEdge'
        node?: {
          __typename?: 'Task'
          id: string
          title: string
          status: TaskTaskStatus
          due?: any | null
          details?: string | null
          assignee?: { __typename?: 'User'; id: string; firstName?: string | null; lastName?: string | null; email: string } | null
          assigner?: { __typename?: 'User'; id: string; firstName?: string | null; lastName?: string | null; email: string } | null
        } | null
      } | null> | null
    }
    controlObjectives: {
      __typename?: 'ControlObjectiveConnection'
      edges?: Array<{ __typename?: 'ControlObjectiveEdge'; node?: { __typename?: 'ControlObjective'; id: string; name: string } | null } | null> | null
    }
    controls: { __typename?: 'ControlConnection'; edges?: Array<{ __typename?: 'ControlEdge'; node?: { __typename?: 'Control'; id: string } | null } | null> | null }
    subcontrols: { __typename?: 'SubcontrolConnection'; edges?: Array<{ __typename?: 'SubcontrolEdge'; node?: { __typename?: 'Subcontrol'; id: string } | null } | null> | null }
    narratives: { __typename?: 'NarrativeConnection'; edges?: Array<{ __typename?: 'NarrativeEdge'; node?: { __typename?: 'Narrative'; id: string; name: string } | null } | null> | null }
    internalPolicies: {
      __typename?: 'InternalPolicyConnection'
      edges?: Array<{ __typename?: 'InternalPolicyEdge'; node?: { __typename?: 'InternalPolicy'; id: string; name: string } | null } | null> | null
    }
    procedures: { __typename?: 'ProcedureConnection'; edges?: Array<{ __typename?: 'ProcedureEdge'; node?: { __typename?: 'Procedure'; id: string; name: string } | null } | null> | null }
  }
}

export type RiskFieldsFragment = {
  __typename?: 'Risk'
  id: string
  displayID: string
  name: string
  details?: string | null
  tags?: Array<string> | null
  category?: string | null
  riskType?: string | null
  score?: number | null
  status?: RiskRiskStatus | null
  businessCosts?: string | null
  likelihood?: RiskRiskLikelihood | null
  impact?: RiskRiskImpact | null
  mitigation?: string | null
  controls: { __typename?: 'ControlConnection'; edges?: Array<{ __typename?: 'ControlEdge'; node?: { __typename?: 'Control'; id: string; refCode: string } | null } | null> | null }
}

export type GetRiskByIdQueryVariables = Exact<{
  riskId: Scalars['ID']['input']
}>

export type GetRiskByIdQuery = {
  __typename?: 'Query'
  risk: {
    __typename?: 'Risk'
    id: string
    displayID: string
    name: string
    details?: string | null
    tags?: Array<string> | null
    category?: string | null
    riskType?: string | null
    score?: number | null
    status?: RiskRiskStatus | null
    businessCosts?: string | null
    likelihood?: RiskRiskLikelihood | null
    impact?: RiskRiskImpact | null
    mitigation?: string | null
    controls: { __typename?: 'ControlConnection'; edges?: Array<{ __typename?: 'ControlEdge'; node?: { __typename?: 'Control'; id: string; refCode: string } | null } | null> | null }
  }
}

export type GetAllRisksQueryVariables = Exact<{ [key: string]: never }>

export type GetAllRisksQuery = {
  __typename?: 'Query'
  risks: {
    __typename?: 'RiskConnection'
    totalCount: number
    pageInfo: { __typename?: 'PageInfo'; hasNextPage: boolean; hasPreviousPage: boolean }
    edges?: Array<{
      __typename?: 'RiskEdge'
      node?: {
        __typename?: 'Risk'
        id: string
        displayID: string
        name: string
        details?: string | null
        tags?: Array<string> | null
        category?: string | null
        riskType?: string | null
        score?: number | null
        status?: RiskRiskStatus | null
        businessCosts?: string | null
        likelihood?: RiskRiskLikelihood | null
        impact?: RiskRiskImpact | null
        mitigation?: string | null
        controls: { __typename?: 'ControlConnection'; edges?: Array<{ __typename?: 'ControlEdge'; node?: { __typename?: 'Control'; id: string; refCode: string } | null } | null> | null }
      } | null
    } | null> | null
  }
}

export type UpdateRiskMutationVariables = Exact<{
  id: Scalars['ID']['input']
  input: UpdateRiskInput
}>

export type UpdateRiskMutation = { __typename?: 'Mutation'; updateRisk: { __typename?: 'RiskUpdatePayload'; risk: { __typename?: 'Risk'; id: string } } }

export type SearchQueryVariables = Exact<{
  query: Scalars['String']['input']
}>

export type SearchQuery = {
  __typename?: 'Query'
  search?: {
    __typename?: 'SearchResultConnection'
    totalCount: number
    nodes: Array<
      | { __typename?: 'APITokenSearchResult' }
      | { __typename?: 'ActionPlanSearchResult' }
      | { __typename?: 'ContactSearchResult' }
      | { __typename?: 'ControlImplementationSearchResult' }
      | { __typename?: 'ControlObjectiveSearchResult'; controlObjectives?: Array<{ __typename?: 'ControlObjective'; id: string; name: string }> | null }
      | { __typename?: 'ControlSearchResult'; controls?: Array<{ __typename?: 'Control'; id: string; refCode: string }> | null }
      | { __typename?: 'DocumentDataSearchResult' }
      | { __typename?: 'EntitySearchResult' }
      | { __typename?: 'EntityTypeSearchResult' }
      | { __typename?: 'EventSearchResult' }
      | { __typename?: 'EvidenceSearchResult' }
      | { __typename?: 'FileSearchResult' }
      | { __typename?: 'GroupSearchResult'; groups?: Array<{ __typename?: 'Group'; id: string; name: string }> | null }
      | { __typename?: 'IntegrationSearchResult' }
      | { __typename?: 'InternalPolicySearchResult' }
      | { __typename?: 'MappedControlSearchResult' }
      | { __typename?: 'NarrativeSearchResult' }
      | { __typename?: 'OrgSubscriptionSearchResult' }
      | { __typename?: 'OrganizationSearchResult'; organizations?: Array<{ __typename?: 'Organization'; id: string; name: string; displayName: string; avatarRemoteURL?: string | null }> | null }
      | { __typename?: 'OrganizationSettingSearchResult' }
      | { __typename?: 'PersonalAccessTokenSearchResult' }
      | { __typename?: 'ProcedureSearchResult' }
      | { __typename?: 'ProgramSearchResult'; programs?: Array<{ __typename?: 'Program'; id: string; name: string }> | null }
      | { __typename?: 'RiskSearchResult'; risks?: Array<{ __typename?: 'Risk'; id: string; name: string }> | null }
      | { __typename?: 'StandardSearchResult' }
      | { __typename?: 'SubcontrolSearchResult'; subcontrols?: Array<{ __typename?: 'Subcontrol'; id: string; refCode: string }> | null }
      | { __typename?: 'SubscriberSearchResult' }
      | { __typename?: 'TaskSearchResult'; tasks?: Array<{ __typename?: 'Task'; id: string; title: string }> | null }
      | { __typename?: 'TemplateSearchResult' }
      | { __typename?: 'UserSearchResult' }
      | { __typename?: 'UserSettingSearchResult' }
    >
  } | null
}

export type GetAllStandardsQueryVariables = Exact<{
  where?: InputMaybe<StandardWhereInput>
}>

export type GetAllStandardsQuery = {
  __typename?: 'Query'
  standards: {
    __typename?: 'StandardConnection'
    edges?: Array<{
      __typename?: 'StandardEdge'
      node?: {
        __typename?: 'Standard'
        id: string
        shortName?: string | null
        version?: string | null
        governingBodyLogoURL?: string | null
        standardType?: string | null
        updatedAt?: any | null
        tags?: Array<string> | null
        description?: string | null
        domains?: Array<string> | null
        controls: { __typename?: 'ControlConnection'; totalCount: number }
      } | null
    } | null> | null
  }
}

export type GetStandardDetailsQueryVariables = Exact<{
  standardId: Scalars['ID']['input']
}>

export type GetStandardDetailsQuery = {
  __typename?: 'Query'
  standard: {
    __typename?: 'Standard'
    id: string
    shortName?: string | null
    version?: string | null
    governingBodyLogoURL?: string | null
    standardType?: string | null
    updatedAt?: any | null
    tags?: Array<string> | null
    description?: string | null
    name: string
    revision?: string | null
    link?: string | null
    framework?: string | null
    governingBody?: string | null
    controls: { __typename?: 'ControlConnection'; totalCount: number }
  }
}

export type GetAllSubcontrolsQueryVariables = Exact<{
  where?: InputMaybe<SubcontrolWhereInput>
}>

export type GetAllSubcontrolsQuery = {
  __typename?: 'Query'
  subcontrols: {
    __typename?: 'SubcontrolConnection'
    edges?: Array<{ __typename?: 'SubcontrolEdge'; node?: { __typename?: 'Subcontrol'; id: string; displayID: string; description?: string | null } | null } | null> | null
  }
}

export type CreateSubscriberMutationVariables = Exact<{
  input: CreateSubscriberInput
}>

export type CreateSubscriberMutation = { __typename?: 'Mutation'; createSubscriber: { __typename?: 'SubscriberCreatePayload'; subscriber: { __typename?: 'Subscriber'; email: string } } }

export type GetAllSubscribersQueryVariables = Exact<{
  where?: InputMaybe<SubscriberWhereInput>
  orderBy?: InputMaybe<Array<SubscriberOrder> | SubscriberOrder>
}>

export type GetAllSubscribersQuery = {
  __typename?: 'Query'
  subscribers: {
    __typename?: 'SubscriberConnection'
    edges?: Array<{ __typename?: 'SubscriberEdge'; node?: { __typename?: 'Subscriber'; active: boolean; email: string; id: string; verifiedEmail: boolean } | null } | null> | null
  }
}

export type DeleteSubscriberMutationVariables = Exact<{
  deleteSubscriberEmail: Scalars['String']['input']
}>

export type DeleteSubscriberMutation = { __typename?: 'Mutation'; deleteSubscriber: { __typename?: 'SubscriberDeletePayload'; email: string } }

export type UpdateSubscriberMutationVariables = Exact<{
  email: Scalars['String']['input']
  input: UpdateSubscriberInput
}>

export type UpdateSubscriberMutation = { __typename?: 'Mutation'; updateSubscriber: { __typename?: 'SubscriberUpdatePayload'; subscriber: { __typename?: 'Subscriber'; id: string } } }

export type SearchSubscribersQueryVariables = Exact<{
  query: Scalars['String']['input']
}>

export type SearchSubscribersQuery = {
  __typename?: 'Query'
  subscriberSearch?: { __typename?: 'SubscriberSearchResult'; subscribers?: Array<{ __typename?: 'Subscriber'; active: boolean; email: string; id: string; verifiedEmail: boolean }> | null } | null
}

export type TasksWithFilterQueryVariables = Exact<{
  where?: InputMaybe<TaskWhereInput>
  orderBy?: InputMaybe<Array<TaskOrder> | TaskOrder>
}>

export type TasksWithFilterQuery = {
  __typename?: 'Query'
  tasks: {
    __typename?: 'TaskConnection'
    edges?: Array<{
      __typename?: 'TaskEdge'
      node?: {
        __typename?: 'Task'
        id: string
        title: string
        description?: string | null
        status: TaskTaskStatus
        tags?: Array<string> | null
        details?: string | null
        due?: any | null
        displayID: string
        category?: string | null
        assigner?: {
          __typename?: 'User'
          displayName: string
          firstName?: string | null
          lastName?: string | null
          avatarRemoteURL?: string | null
          avatarFile?: { __typename?: 'File'; presignedURL?: string | null } | null
        } | null
        assignee?: {
          __typename?: 'User'
          displayName: string
          firstName?: string | null
          lastName?: string | null
          avatarRemoteURL?: string | null
          avatarFile?: { __typename?: 'File'; presignedURL?: string | null } | null
        } | null
      } | null
    } | null> | null
  }
}

export type CreateTaskMutationVariables = Exact<{
  input: CreateTaskInput
}>

export type CreateTaskMutation = { __typename?: 'Mutation'; createTask: { __typename?: 'TaskCreatePayload'; task: { __typename?: 'Task'; id: string } } }

export type UpdateTaskMutationVariables = Exact<{
  updateTaskId: Scalars['ID']['input']
  input: UpdateTaskInput
}>

export type UpdateTaskMutation = { __typename?: 'Mutation'; updateTask: { __typename?: 'TaskUpdatePayload'; task: { __typename?: 'Task'; id: string } } }

export type DeleteTaskMutationVariables = Exact<{
  deleteTaskId: Scalars['ID']['input']
}>

export type DeleteTaskMutation = { __typename?: 'Mutation'; deleteTask: { __typename?: 'TaskDeletePayload'; deletedID: string } }

export type TaskQueryVariables = Exact<{
  taskId: Scalars['ID']['input']
}>

export type TaskQuery = {
  __typename?: 'Query'
  task: {
    __typename?: 'Task'
    tags?: Array<string> | null
    id: string
    category?: string | null
    title: string
    status: TaskTaskStatus
    due?: any | null
    displayID: string
    description?: string | null
    details?: string | null
    assignee?: { __typename?: 'User'; displayName: string; firstName?: string | null; lastName?: string | null; avatarRemoteURL?: string | null; id: string } | null
    assigner?: { __typename?: 'User'; avatarRemoteURL?: string | null; lastName?: string | null; firstName?: string | null; displayName: string; id: string } | null
    subcontrols: { __typename?: 'SubcontrolConnection'; edges?: Array<{ __typename?: 'SubcontrolEdge'; node?: { __typename?: 'Subcontrol'; id: string; refCode: string } | null } | null> | null }
    programs: { __typename?: 'ProgramConnection'; edges?: Array<{ __typename?: 'ProgramEdge'; node?: { __typename?: 'Program'; id: string; displayID: string } | null } | null> | null }
    procedures: { __typename?: 'ProcedureConnection'; edges?: Array<{ __typename?: 'ProcedureEdge'; node?: { __typename?: 'Procedure'; id: string; displayID: string } | null } | null> | null }
    internalPolicies: {
      __typename?: 'InternalPolicyConnection'
      edges?: Array<{ __typename?: 'InternalPolicyEdge'; node?: { __typename?: 'InternalPolicy'; id: string; displayID: string } | null } | null> | null
    }
    evidence: { __typename?: 'EvidenceConnection'; edges?: Array<{ __typename?: 'EvidenceEdge'; node?: { __typename?: 'Evidence'; displayID: string; id: string } | null } | null> | null }
    groups: { __typename?: 'GroupConnection'; edges?: Array<{ __typename?: 'GroupEdge'; node?: { __typename?: 'Group'; displayID: string; id: string } | null } | null> | null }
    controlObjectives: {
      __typename?: 'ControlObjectiveConnection'
      edges?: Array<{ __typename?: 'ControlObjectiveEdge'; node?: { __typename?: 'ControlObjective'; displayID: string; id: string } | null } | null> | null
    }
    comments: {
      __typename?: 'NoteConnection'
      edges?: Array<{
        __typename?: 'NoteEdge'
        node?: {
          __typename?: 'Note'
          createdAt?: any | null
          createdBy?: string | null
          text: string
          owner?: { __typename?: 'Organization'; avatarRemoteURL?: string | null; displayName: string; avatarFile?: { __typename?: 'File'; presignedURL?: string | null } | null } | null
        } | null
      } | null> | null
    }
  }
}

export type CreateBulkCsvTaskMutationVariables = Exact<{
  input: Scalars['Upload']['input']
}>

export type CreateBulkCsvTaskMutation = { __typename?: 'Mutation'; createBulkCSVTask: { __typename?: 'TaskBulkCreatePayload'; tasks?: Array<{ __typename?: 'Task'; id: string }> | null } }

export type UserTasksQueryVariables = Exact<{
  where?: InputMaybe<TaskWhereInput>
}>

export type UserTasksQuery = {
  __typename?: 'Query'
  tasks: {
    __typename?: 'TaskConnection'
    edges?: Array<{ __typename?: 'TaskEdge'; node?: { __typename?: 'Task'; id: string; displayID: string; title: string; due?: any | null } | null } | null> | null
  }
}

export type CreateTemplateMutationVariables = Exact<{
  input: CreateTemplateInput
}>

export type CreateTemplateMutation = {
  __typename?: 'Mutation'
  createTemplate: {
    __typename?: 'TemplateCreatePayload'
    template: {
      __typename?: 'Template'
      id: string
      name: string
      templateType: TemplateDocumentType
      description?: string | null
      jsonconfig: any
      uischema?: any | null
      owner?: { __typename?: 'Organization'; id: string } | null
    }
  }
}

export type UpdateTemplateMutationVariables = Exact<{
  updateTemplateId: Scalars['ID']['input']
  input: UpdateTemplateInput
}>

export type UpdateTemplateMutation = {
  __typename?: 'Mutation'
  updateTemplate: {
    __typename?: 'TemplateUpdatePayload'
    template: {
      __typename?: 'Template'
      id: string
      name: string
      templateType: TemplateDocumentType
      description?: string | null
      jsonconfig: any
      uischema?: any | null
      owner?: { __typename?: 'Organization'; id: string } | null
    }
  }
}

export type GetAllTemplatesQueryVariables = Exact<{ [key: string]: never }>

export type GetAllTemplatesQuery = {
  __typename?: 'Query'
  templates: {
    __typename?: 'TemplateConnection'
    edges?: Array<{
      __typename?: 'TemplateEdge'
      node?: {
        __typename?: 'Template'
        id: string
        name: string
        templateType: TemplateDocumentType
        description?: string | null
        jsonconfig: any
        uischema?: any | null
        createdAt?: any | null
        updatedAt?: any | null
      } | null
    } | null> | null
  }
}

export type FilterTemplatesQueryVariables = Exact<{
  where?: InputMaybe<TemplateWhereInput>
  orderBy?: InputMaybe<Array<TemplateOrder> | TemplateOrder>
}>

export type FilterTemplatesQuery = {
  __typename?: 'Query'
  templates: {
    __typename?: 'TemplateConnection'
    edges?: Array<{
      __typename?: 'TemplateEdge'
      node?: {
        __typename?: 'Template'
        id: string
        name: string
        templateType: TemplateDocumentType
        description?: string | null
        jsonconfig: any
        uischema?: any | null
        createdAt?: any | null
        updatedAt?: any | null
      } | null
    } | null> | null
  }
}

export type GetTemplateQueryVariables = Exact<{
  getTemplateId: Scalars['ID']['input']
}>

export type GetTemplateQuery = {
  __typename?: 'Query'
  template: { __typename?: 'Template'; id: string; templateType: TemplateDocumentType; name: string; description?: string | null; jsonconfig: any; uischema?: any | null }
}

export type DeleteTemplateMutationVariables = Exact<{
  deleteTemplateId: Scalars['ID']['input']
}>

export type DeleteTemplateMutation = { __typename?: 'Mutation'; deleteTemplate: { __typename?: 'TemplateDeletePayload'; deletedID: string } }

export type SearchTemplatesQueryVariables = Exact<{
  query: Scalars['String']['input']
}>

export type SearchTemplatesQuery = {
  __typename?: 'Query'
  templateSearch?: {
    __typename?: 'TemplateSearchResult'
    templates?: Array<{
      __typename?: 'Template'
      id: string
      name: string
      templateType: TemplateDocumentType
      description?: string | null
      jsonconfig: any
      uischema?: any | null
      createdAt?: any | null
      updatedAt?: any | null
    }> | null
  } | null
}

export type GetTfaSettingsQueryVariables = Exact<{ [key: string]: never }>

export type GetTfaSettingsQuery = {
  __typename?: 'Query'
  tfaSettings: { __typename?: 'TFASettingConnection'; edges?: Array<{ __typename?: 'TFASettingEdge'; node?: { __typename?: 'TFASetting'; id: string } | null } | null> | null }
}

export type GetUserTfaSettingsQueryVariables = Exact<{
  userId: Scalars['ID']['input']
}>

export type GetUserTfaSettingsQuery = {
  __typename?: 'Query'
  user: {
    __typename?: 'User'
    tfaSettings: {
      __typename?: 'TFASettingConnection'
      edges?: Array<{ __typename?: 'TFASettingEdge'; node?: { __typename?: 'TFASetting'; id: string; totpAllowed?: boolean | null; verified: boolean } | null } | null> | null
    }
  }
}

export type UpdateTfaSettingMutationVariables = Exact<{
  input: UpdateTfaSettingInput
}>

export type UpdateTfaSettingMutation = {
  __typename?: 'Mutation'
  updateTFASetting: {
    __typename?: 'TFASettingUpdatePayload'
    qrCode?: string | null
    recoveryCodes?: Array<string> | null
    tfaSecret?: string | null
    tfaSetting: { __typename?: 'TFASetting'; id: string }
  }
}

export type CreateTfaSettingMutationVariables = Exact<{
  input: CreateTfaSettingInput
}>

export type CreateTfaSettingMutation = {
  __typename?: 'Mutation'
  createTFASetting: { __typename?: 'TFASettingCreatePayload'; qrCode?: string | null; tfaSecret?: string | null; tfaSetting: { __typename?: 'TFASetting'; id: string } }
}

export type CreatePersonalAccessTokenMutationVariables = Exact<{
  input: CreatePersonalAccessTokenInput
}>

export type CreatePersonalAccessTokenMutation = {
  __typename?: 'Mutation'
  createPersonalAccessToken: { __typename?: 'PersonalAccessTokenCreatePayload'; personalAccessToken: { __typename?: 'PersonalAccessToken'; token: string } }
}

export type GetPersonalAccessTokensQueryVariables = Exact<{
  where?: InputMaybe<PersonalAccessTokenWhereInput>
  orderBy?: InputMaybe<Array<PersonalAccessTokenOrder> | PersonalAccessTokenOrder>
}>

export type GetPersonalAccessTokensQuery = {
  __typename?: 'Query'
  personalAccessTokens: {
    __typename?: 'PersonalAccessTokenConnection'
    edges?: Array<{
      __typename?: 'PersonalAccessTokenEdge'
      node?: {
        __typename?: 'PersonalAccessToken'
        id: string
        name: string
        description?: string | null
        expiresAt?: any | null
        organizations: {
          __typename?: 'OrganizationConnection'
          edges?: Array<{ __typename?: 'OrganizationEdge'; node?: { __typename?: 'Organization'; id: string; name: string } | null } | null> | null
        }
      } | null
    } | null> | null
  }
}

export type DeletePersonalAccessTokenMutationVariables = Exact<{
  deletePersonalAccessTokenId: Scalars['ID']['input']
}>

export type DeletePersonalAccessTokenMutation = { __typename?: 'Mutation'; deletePersonalAccessToken: { __typename?: 'PersonalAccessTokenDeletePayload'; deletedID: string } }

export type CreateApiTokenMutationVariables = Exact<{
  input: CreateApiTokenInput
}>

export type CreateApiTokenMutation = { __typename?: 'Mutation'; createAPIToken: { __typename?: 'APITokenCreatePayload'; apiToken: { __typename?: 'APIToken'; token: string } } }

export type GetApiTokensQueryVariables = Exact<{
  where?: InputMaybe<ApiTokenWhereInput>
  orderBy?: InputMaybe<Array<ApiTokenOrder> | ApiTokenOrder>
}>

export type GetApiTokensQuery = {
  __typename?: 'Query'
  apiTokens: {
    __typename?: 'APITokenConnection'
    edges?: Array<{
      __typename?: 'APITokenEdge'
      node?: { __typename?: 'APIToken'; id: string; name: string; description?: string | null; scopes?: Array<string> | null; expiresAt?: any | null } | null
    } | null> | null
  }
}

export type DeleteApiTokenMutationVariables = Exact<{
  deleteAPITokenId: Scalars['ID']['input']
}>

export type DeleteApiTokenMutation = { __typename?: 'Mutation'; deleteAPIToken: { __typename?: 'APITokenDeletePayload'; deletedID: string } }

export type GetUserProfileQueryVariables = Exact<{
  userId: Scalars['ID']['input']
}>

export type GetUserProfileQuery = {
  __typename?: 'Query'
  user: {
    __typename?: 'User'
    id: string
    firstName?: string | null
    lastName?: string | null
    displayName: string
    email: string
    avatarRemoteURL?: string | null
    avatarFile?: { __typename?: 'File'; presignedURL?: string | null } | null
    setting: {
      __typename?: 'UserSetting'
      id: string
      status: UserSettingUserStatus
      tags?: Array<string> | null
      isTfaEnabled?: boolean | null
      defaultOrg?: { __typename?: 'Organization'; id: string; displayName: string } | null
    }
  }
}

export type UpdateUserMutationVariables = Exact<{
  updateUserId: Scalars['ID']['input']
  input: UpdateUserInput
  avatarFile?: InputMaybe<Scalars['Upload']['input']>
}>

export type UpdateUserMutation = {
  __typename?: 'Mutation'
  updateUser: { __typename?: 'UserUpdatePayload'; user: { __typename?: 'User'; id: string; avatarFile?: { __typename?: 'File'; presignedURL?: string | null } | null } }
}

export type UpdateUserSettingMutationVariables = Exact<{
  updateUserSettingId: Scalars['ID']['input']
  input: UpdateUserSettingInput
}>

export type UpdateUserSettingMutation = { __typename?: 'Mutation'; updateUserSetting: { __typename?: 'UserSettingUpdatePayload'; userSetting: { __typename?: 'UserSetting'; id: string } } }

export type GetAllUsersQueryVariables = Exact<{
  where?: InputMaybe<UserWhereInput>
}>

export type GetAllUsersQuery = {
  __typename?: 'Query'
  users: {
    __typename?: 'UserConnection'
    edges?: Array<{
      __typename?: 'UserEdge'
      node?: {
        __typename?: 'User'
        id: string
        firstName?: string | null
        lastName?: string | null
        displayName: string
        avatarRemoteURL?: string | null
        avatarFile?: { __typename?: 'File'; presignedURL?: string | null } | null
      } | null
    } | null> | null
  }
}
