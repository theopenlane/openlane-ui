/* eslint-disable */
import gql from 'graphql-tag';
import * as Urql from 'urql';
export type Maybe<T> = T | null;
export type InputMaybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
/** All built-in and custom scalars, mapped to their actual values */
export interface Scalars {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /**
   * Define a Relay Cursor type:
   * https://relay.dev/graphql/connections.htm#sec-Cursor
   */
  Cursor: { input: any; output: any; }
  /** A valid JSON string. */
  JSON: { input: any; output: any; }
  /** The builtin Map type */
  Map: { input: any; output: any; }
  /** The builtin Time type */
  Time: { input: any; output: any; }
  Upload: { input: File; output: File; }
}

/**
 * APITokenWhereInput is used for filtering APIToken objects.
 * Input was generated by ent.
 */
export interface ApiTokenWhereInput {
  and?: InputMaybe<Array<ApiTokenWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** expires_at field predicates */
  expiresAt?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  expiresAtLT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtLTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** last_used_at field predicates */
  lastUsedAt?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtGT?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  lastUsedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  lastUsedAtLT?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  lastUsedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<ApiTokenWhereInput>;
  or?: InputMaybe<Array<ApiTokenWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** ActionPlanHistoryOpType is enum for the field operation */
export enum ActionPlanHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/**
 * ActionPlanHistoryWhereInput is used for filtering ActionPlanHistory objects.
 * Input was generated by ent.
 */
export interface ActionPlanHistoryWhereInput {
  and?: InputMaybe<Array<ActionPlanHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** due_date field predicates */
  dueDate?: InputMaybe<Scalars['Time']['input']>;
  dueDateGT?: InputMaybe<Scalars['Time']['input']>;
  dueDateGTE?: InputMaybe<Scalars['Time']['input']>;
  dueDateIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  dueDateIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  dueDateLT?: InputMaybe<Scalars['Time']['input']>;
  dueDateLTE?: InputMaybe<Scalars['Time']['input']>;
  dueDateNEQ?: InputMaybe<Scalars['Time']['input']>;
  dueDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  dueDateNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<ActionPlanHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<ActionPlanHistoryOpType>;
  operationIn?: InputMaybe<Array<ActionPlanHistoryOpType>>;
  operationNEQ?: InputMaybe<ActionPlanHistoryOpType>;
  operationNotIn?: InputMaybe<Array<ActionPlanHistoryOpType>>;
  or?: InputMaybe<Array<ActionPlanHistoryWhereInput>>;
  /** priority field predicates */
  priority?: InputMaybe<Scalars['String']['input']>;
  priorityContains?: InputMaybe<Scalars['String']['input']>;
  priorityContainsFold?: InputMaybe<Scalars['String']['input']>;
  priorityEqualFold?: InputMaybe<Scalars['String']['input']>;
  priorityGT?: InputMaybe<Scalars['String']['input']>;
  priorityGTE?: InputMaybe<Scalars['String']['input']>;
  priorityHasPrefix?: InputMaybe<Scalars['String']['input']>;
  priorityHasSuffix?: InputMaybe<Scalars['String']['input']>;
  priorityIn?: InputMaybe<Array<Scalars['String']['input']>>;
  priorityIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  priorityLT?: InputMaybe<Scalars['String']['input']>;
  priorityLTE?: InputMaybe<Scalars['String']['input']>;
  priorityNEQ?: InputMaybe<Scalars['String']['input']>;
  priorityNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  priorityNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** source field predicates */
  source?: InputMaybe<Scalars['String']['input']>;
  sourceContains?: InputMaybe<Scalars['String']['input']>;
  sourceContainsFold?: InputMaybe<Scalars['String']['input']>;
  sourceEqualFold?: InputMaybe<Scalars['String']['input']>;
  sourceGT?: InputMaybe<Scalars['String']['input']>;
  sourceGTE?: InputMaybe<Scalars['String']['input']>;
  sourceHasPrefix?: InputMaybe<Scalars['String']['input']>;
  sourceHasSuffix?: InputMaybe<Scalars['String']['input']>;
  sourceIn?: InputMaybe<Array<Scalars['String']['input']>>;
  sourceIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  sourceLT?: InputMaybe<Scalars['String']['input']>;
  sourceLTE?: InputMaybe<Scalars['String']['input']>;
  sourceNEQ?: InputMaybe<Scalars['String']['input']>;
  sourceNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  sourceNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>;
  statusContains?: InputMaybe<Scalars['String']['input']>;
  statusContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusGT?: InputMaybe<Scalars['String']['input']>;
  statusGTE?: InputMaybe<Scalars['String']['input']>;
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusLT?: InputMaybe<Scalars['String']['input']>;
  statusLTE?: InputMaybe<Scalars['String']['input']>;
  statusNEQ?: InputMaybe<Scalars['String']['input']>;
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * ActionPlanWhereInput is used for filtering ActionPlan objects.
 * Input was generated by ent.
 */
export interface ActionPlanWhereInput {
  and?: InputMaybe<Array<ActionPlanWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** due_date field predicates */
  dueDate?: InputMaybe<Scalars['Time']['input']>;
  dueDateGT?: InputMaybe<Scalars['Time']['input']>;
  dueDateGTE?: InputMaybe<Scalars['Time']['input']>;
  dueDateIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  dueDateIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  dueDateLT?: InputMaybe<Scalars['Time']['input']>;
  dueDateLTE?: InputMaybe<Scalars['Time']['input']>;
  dueDateNEQ?: InputMaybe<Scalars['Time']['input']>;
  dueDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  dueDateNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** control edge predicates */
  hasControl?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlWith?: InputMaybe<Array<ControlWhereInput>>;
  /** program edge predicates */
  hasProgram?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgramWith?: InputMaybe<Array<ProgramWhereInput>>;
  /** risk edge predicates */
  hasRisk?: InputMaybe<Scalars['Boolean']['input']>;
  hasRiskWith?: InputMaybe<Array<RiskWhereInput>>;
  /** standard edge predicates */
  hasStandard?: InputMaybe<Scalars['Boolean']['input']>;
  hasStandardWith?: InputMaybe<Array<StandardWhereInput>>;
  /** user edge predicates */
  hasUser?: InputMaybe<Scalars['Boolean']['input']>;
  hasUserWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<ActionPlanWhereInput>;
  or?: InputMaybe<Array<ActionPlanWhereInput>>;
  /** priority field predicates */
  priority?: InputMaybe<Scalars['String']['input']>;
  priorityContains?: InputMaybe<Scalars['String']['input']>;
  priorityContainsFold?: InputMaybe<Scalars['String']['input']>;
  priorityEqualFold?: InputMaybe<Scalars['String']['input']>;
  priorityGT?: InputMaybe<Scalars['String']['input']>;
  priorityGTE?: InputMaybe<Scalars['String']['input']>;
  priorityHasPrefix?: InputMaybe<Scalars['String']['input']>;
  priorityHasSuffix?: InputMaybe<Scalars['String']['input']>;
  priorityIn?: InputMaybe<Array<Scalars['String']['input']>>;
  priorityIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  priorityLT?: InputMaybe<Scalars['String']['input']>;
  priorityLTE?: InputMaybe<Scalars['String']['input']>;
  priorityNEQ?: InputMaybe<Scalars['String']['input']>;
  priorityNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  priorityNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** source field predicates */
  source?: InputMaybe<Scalars['String']['input']>;
  sourceContains?: InputMaybe<Scalars['String']['input']>;
  sourceContainsFold?: InputMaybe<Scalars['String']['input']>;
  sourceEqualFold?: InputMaybe<Scalars['String']['input']>;
  sourceGT?: InputMaybe<Scalars['String']['input']>;
  sourceGTE?: InputMaybe<Scalars['String']['input']>;
  sourceHasPrefix?: InputMaybe<Scalars['String']['input']>;
  sourceHasSuffix?: InputMaybe<Scalars['String']['input']>;
  sourceIn?: InputMaybe<Array<Scalars['String']['input']>>;
  sourceIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  sourceLT?: InputMaybe<Scalars['String']['input']>;
  sourceLTE?: InputMaybe<Scalars['String']['input']>;
  sourceNEQ?: InputMaybe<Scalars['String']['input']>;
  sourceNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  sourceNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>;
  statusContains?: InputMaybe<Scalars['String']['input']>;
  statusContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusGT?: InputMaybe<Scalars['String']['input']>;
  statusGTE?: InputMaybe<Scalars['String']['input']>;
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusLT?: InputMaybe<Scalars['String']['input']>;
  statusLTE?: InputMaybe<Scalars['String']['input']>;
  statusNEQ?: InputMaybe<Scalars['String']['input']>;
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

export interface AuditLogWhereInput {
  after?: InputMaybe<Scalars['Time']['input']>;
  before?: InputMaybe<Scalars['Time']['input']>;
  operation?: InputMaybe<Scalars['String']['input']>;
  refID?: InputMaybe<Scalars['ID']['input']>;
  table?: InputMaybe<Scalars['ID']['input']>;
  updatedBy?: InputMaybe<Scalars['ID']['input']>;
}

/** ContactHistoryOpType is enum for the field operation */
export enum ContactHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** ContactHistoryUserStatus is enum for the field status */
export enum ContactHistoryUserStatus {
  ACTIVE = 'ACTIVE',
  DEACTIVATED = 'DEACTIVATED',
  INACTIVE = 'INACTIVE',
  ONBOARDING = 'ONBOARDING',
  SUSPENDED = 'SUSPENDED'
}

/**
 * ContactHistoryWhereInput is used for filtering ContactHistory objects.
 * Input was generated by ent.
 */
export interface ContactHistoryWhereInput {
  /** address field predicates */
  address?: InputMaybe<Scalars['String']['input']>;
  addressContains?: InputMaybe<Scalars['String']['input']>;
  addressContainsFold?: InputMaybe<Scalars['String']['input']>;
  addressEqualFold?: InputMaybe<Scalars['String']['input']>;
  addressGT?: InputMaybe<Scalars['String']['input']>;
  addressGTE?: InputMaybe<Scalars['String']['input']>;
  addressHasPrefix?: InputMaybe<Scalars['String']['input']>;
  addressHasSuffix?: InputMaybe<Scalars['String']['input']>;
  addressIn?: InputMaybe<Array<Scalars['String']['input']>>;
  addressIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  addressLT?: InputMaybe<Scalars['String']['input']>;
  addressLTE?: InputMaybe<Scalars['String']['input']>;
  addressNEQ?: InputMaybe<Scalars['String']['input']>;
  addressNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  addressNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<ContactHistoryWhereInput>>;
  /** company field predicates */
  company?: InputMaybe<Scalars['String']['input']>;
  companyContains?: InputMaybe<Scalars['String']['input']>;
  companyContainsFold?: InputMaybe<Scalars['String']['input']>;
  companyEqualFold?: InputMaybe<Scalars['String']['input']>;
  companyGT?: InputMaybe<Scalars['String']['input']>;
  companyGTE?: InputMaybe<Scalars['String']['input']>;
  companyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  companyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  companyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  companyIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  companyLT?: InputMaybe<Scalars['String']['input']>;
  companyLTE?: InputMaybe<Scalars['String']['input']>;
  companyNEQ?: InputMaybe<Scalars['String']['input']>;
  companyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  companyNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** email field predicates */
  email?: InputMaybe<Scalars['String']['input']>;
  emailContains?: InputMaybe<Scalars['String']['input']>;
  emailContainsFold?: InputMaybe<Scalars['String']['input']>;
  emailEqualFold?: InputMaybe<Scalars['String']['input']>;
  emailGT?: InputMaybe<Scalars['String']['input']>;
  emailGTE?: InputMaybe<Scalars['String']['input']>;
  emailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  emailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  emailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  emailIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  emailLT?: InputMaybe<Scalars['String']['input']>;
  emailLTE?: InputMaybe<Scalars['String']['input']>;
  emailNEQ?: InputMaybe<Scalars['String']['input']>;
  emailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  emailNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** full_name field predicates */
  fullName?: InputMaybe<Scalars['String']['input']>;
  fullNameContains?: InputMaybe<Scalars['String']['input']>;
  fullNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  fullNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  fullNameGT?: InputMaybe<Scalars['String']['input']>;
  fullNameGTE?: InputMaybe<Scalars['String']['input']>;
  fullNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  fullNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  fullNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  fullNameLT?: InputMaybe<Scalars['String']['input']>;
  fullNameLTE?: InputMaybe<Scalars['String']['input']>;
  fullNameNEQ?: InputMaybe<Scalars['String']['input']>;
  fullNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<ContactHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<ContactHistoryOpType>;
  operationIn?: InputMaybe<Array<ContactHistoryOpType>>;
  operationNEQ?: InputMaybe<ContactHistoryOpType>;
  operationNotIn?: InputMaybe<Array<ContactHistoryOpType>>;
  or?: InputMaybe<Array<ContactHistoryWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>;
  ownerIDContains?: InputMaybe<Scalars['String']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDGT?: InputMaybe<Scalars['String']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['String']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** phone_number field predicates */
  phoneNumber?: InputMaybe<Scalars['String']['input']>;
  phoneNumberContains?: InputMaybe<Scalars['String']['input']>;
  phoneNumberContainsFold?: InputMaybe<Scalars['String']['input']>;
  phoneNumberEqualFold?: InputMaybe<Scalars['String']['input']>;
  phoneNumberGT?: InputMaybe<Scalars['String']['input']>;
  phoneNumberGTE?: InputMaybe<Scalars['String']['input']>;
  phoneNumberHasPrefix?: InputMaybe<Scalars['String']['input']>;
  phoneNumberHasSuffix?: InputMaybe<Scalars['String']['input']>;
  phoneNumberIn?: InputMaybe<Array<Scalars['String']['input']>>;
  phoneNumberIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  phoneNumberLT?: InputMaybe<Scalars['String']['input']>;
  phoneNumberLTE?: InputMaybe<Scalars['String']['input']>;
  phoneNumberNEQ?: InputMaybe<Scalars['String']['input']>;
  phoneNumberNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  phoneNumberNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<ContactHistoryUserStatus>;
  statusIn?: InputMaybe<Array<ContactHistoryUserStatus>>;
  statusNEQ?: InputMaybe<ContactHistoryUserStatus>;
  statusNotIn?: InputMaybe<Array<ContactHistoryUserStatus>>;
  /** title field predicates */
  title?: InputMaybe<Scalars['String']['input']>;
  titleContains?: InputMaybe<Scalars['String']['input']>;
  titleContainsFold?: InputMaybe<Scalars['String']['input']>;
  titleEqualFold?: InputMaybe<Scalars['String']['input']>;
  titleGT?: InputMaybe<Scalars['String']['input']>;
  titleGTE?: InputMaybe<Scalars['String']['input']>;
  titleHasPrefix?: InputMaybe<Scalars['String']['input']>;
  titleHasSuffix?: InputMaybe<Scalars['String']['input']>;
  titleIn?: InputMaybe<Array<Scalars['String']['input']>>;
  titleIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  titleLT?: InputMaybe<Scalars['String']['input']>;
  titleLTE?: InputMaybe<Scalars['String']['input']>;
  titleNEQ?: InputMaybe<Scalars['String']['input']>;
  titleNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  titleNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** ContactUserStatus is enum for the field status */
export enum ContactUserStatus {
  ACTIVE = 'ACTIVE',
  DEACTIVATED = 'DEACTIVATED',
  INACTIVE = 'INACTIVE',
  ONBOARDING = 'ONBOARDING',
  SUSPENDED = 'SUSPENDED'
}

/**
 * ContactWhereInput is used for filtering Contact objects.
 * Input was generated by ent.
 */
export interface ContactWhereInput {
  /** address field predicates */
  address?: InputMaybe<Scalars['String']['input']>;
  addressContains?: InputMaybe<Scalars['String']['input']>;
  addressContainsFold?: InputMaybe<Scalars['String']['input']>;
  addressEqualFold?: InputMaybe<Scalars['String']['input']>;
  addressGT?: InputMaybe<Scalars['String']['input']>;
  addressGTE?: InputMaybe<Scalars['String']['input']>;
  addressHasPrefix?: InputMaybe<Scalars['String']['input']>;
  addressHasSuffix?: InputMaybe<Scalars['String']['input']>;
  addressIn?: InputMaybe<Array<Scalars['String']['input']>>;
  addressIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  addressLT?: InputMaybe<Scalars['String']['input']>;
  addressLTE?: InputMaybe<Scalars['String']['input']>;
  addressNEQ?: InputMaybe<Scalars['String']['input']>;
  addressNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  addressNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<ContactWhereInput>>;
  /** company field predicates */
  company?: InputMaybe<Scalars['String']['input']>;
  companyContains?: InputMaybe<Scalars['String']['input']>;
  companyContainsFold?: InputMaybe<Scalars['String']['input']>;
  companyEqualFold?: InputMaybe<Scalars['String']['input']>;
  companyGT?: InputMaybe<Scalars['String']['input']>;
  companyGTE?: InputMaybe<Scalars['String']['input']>;
  companyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  companyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  companyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  companyIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  companyLT?: InputMaybe<Scalars['String']['input']>;
  companyLTE?: InputMaybe<Scalars['String']['input']>;
  companyNEQ?: InputMaybe<Scalars['String']['input']>;
  companyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  companyNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** email field predicates */
  email?: InputMaybe<Scalars['String']['input']>;
  emailContains?: InputMaybe<Scalars['String']['input']>;
  emailContainsFold?: InputMaybe<Scalars['String']['input']>;
  emailEqualFold?: InputMaybe<Scalars['String']['input']>;
  emailGT?: InputMaybe<Scalars['String']['input']>;
  emailGTE?: InputMaybe<Scalars['String']['input']>;
  emailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  emailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  emailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  emailIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  emailLT?: InputMaybe<Scalars['String']['input']>;
  emailLTE?: InputMaybe<Scalars['String']['input']>;
  emailNEQ?: InputMaybe<Scalars['String']['input']>;
  emailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  emailNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** full_name field predicates */
  fullName?: InputMaybe<Scalars['String']['input']>;
  fullNameContains?: InputMaybe<Scalars['String']['input']>;
  fullNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  fullNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  fullNameGT?: InputMaybe<Scalars['String']['input']>;
  fullNameGTE?: InputMaybe<Scalars['String']['input']>;
  fullNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  fullNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  fullNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  fullNameLT?: InputMaybe<Scalars['String']['input']>;
  fullNameLTE?: InputMaybe<Scalars['String']['input']>;
  fullNameNEQ?: InputMaybe<Scalars['String']['input']>;
  fullNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** entities edge predicates */
  hasEntities?: InputMaybe<Scalars['Boolean']['input']>;
  hasEntitiesWith?: InputMaybe<Array<EntityWhereInput>>;
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>;
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<ContactWhereInput>;
  or?: InputMaybe<Array<ContactWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** phone_number field predicates */
  phoneNumber?: InputMaybe<Scalars['String']['input']>;
  phoneNumberContains?: InputMaybe<Scalars['String']['input']>;
  phoneNumberContainsFold?: InputMaybe<Scalars['String']['input']>;
  phoneNumberEqualFold?: InputMaybe<Scalars['String']['input']>;
  phoneNumberGT?: InputMaybe<Scalars['String']['input']>;
  phoneNumberGTE?: InputMaybe<Scalars['String']['input']>;
  phoneNumberHasPrefix?: InputMaybe<Scalars['String']['input']>;
  phoneNumberHasSuffix?: InputMaybe<Scalars['String']['input']>;
  phoneNumberIn?: InputMaybe<Array<Scalars['String']['input']>>;
  phoneNumberIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  phoneNumberLT?: InputMaybe<Scalars['String']['input']>;
  phoneNumberLTE?: InputMaybe<Scalars['String']['input']>;
  phoneNumberNEQ?: InputMaybe<Scalars['String']['input']>;
  phoneNumberNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  phoneNumberNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<ContactUserStatus>;
  statusIn?: InputMaybe<Array<ContactUserStatus>>;
  statusNEQ?: InputMaybe<ContactUserStatus>;
  statusNotIn?: InputMaybe<Array<ContactUserStatus>>;
  /** title field predicates */
  title?: InputMaybe<Scalars['String']['input']>;
  titleContains?: InputMaybe<Scalars['String']['input']>;
  titleContainsFold?: InputMaybe<Scalars['String']['input']>;
  titleEqualFold?: InputMaybe<Scalars['String']['input']>;
  titleGT?: InputMaybe<Scalars['String']['input']>;
  titleGTE?: InputMaybe<Scalars['String']['input']>;
  titleHasPrefix?: InputMaybe<Scalars['String']['input']>;
  titleHasSuffix?: InputMaybe<Scalars['String']['input']>;
  titleIn?: InputMaybe<Array<Scalars['String']['input']>>;
  titleIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  titleLT?: InputMaybe<Scalars['String']['input']>;
  titleLTE?: InputMaybe<Scalars['String']['input']>;
  titleNEQ?: InputMaybe<Scalars['String']['input']>;
  titleNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  titleNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** ControlHistoryOpType is enum for the field operation */
export enum ControlHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/**
 * ControlHistoryWhereInput is used for filtering ControlHistory objects.
 * Input was generated by ent.
 */
export interface ControlHistoryWhereInput {
  and?: InputMaybe<Array<ControlHistoryWhereInput>>;
  /** class field predicates */
  class?: InputMaybe<Scalars['String']['input']>;
  classContains?: InputMaybe<Scalars['String']['input']>;
  classContainsFold?: InputMaybe<Scalars['String']['input']>;
  classEqualFold?: InputMaybe<Scalars['String']['input']>;
  classGT?: InputMaybe<Scalars['String']['input']>;
  classGTE?: InputMaybe<Scalars['String']['input']>;
  classHasPrefix?: InputMaybe<Scalars['String']['input']>;
  classHasSuffix?: InputMaybe<Scalars['String']['input']>;
  classIn?: InputMaybe<Array<Scalars['String']['input']>>;
  classIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  classLT?: InputMaybe<Scalars['String']['input']>;
  classLTE?: InputMaybe<Scalars['String']['input']>;
  classNEQ?: InputMaybe<Scalars['String']['input']>;
  classNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  classNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** control_number field predicates */
  controlNumber?: InputMaybe<Scalars['String']['input']>;
  controlNumberContains?: InputMaybe<Scalars['String']['input']>;
  controlNumberContainsFold?: InputMaybe<Scalars['String']['input']>;
  controlNumberEqualFold?: InputMaybe<Scalars['String']['input']>;
  controlNumberGT?: InputMaybe<Scalars['String']['input']>;
  controlNumberGTE?: InputMaybe<Scalars['String']['input']>;
  controlNumberHasPrefix?: InputMaybe<Scalars['String']['input']>;
  controlNumberHasSuffix?: InputMaybe<Scalars['String']['input']>;
  controlNumberIn?: InputMaybe<Array<Scalars['String']['input']>>;
  controlNumberIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  controlNumberLT?: InputMaybe<Scalars['String']['input']>;
  controlNumberLTE?: InputMaybe<Scalars['String']['input']>;
  controlNumberNEQ?: InputMaybe<Scalars['String']['input']>;
  controlNumberNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  controlNumberNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** control_type field predicates */
  controlType?: InputMaybe<Scalars['String']['input']>;
  controlTypeContains?: InputMaybe<Scalars['String']['input']>;
  controlTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  controlTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  controlTypeGT?: InputMaybe<Scalars['String']['input']>;
  controlTypeGTE?: InputMaybe<Scalars['String']['input']>;
  controlTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  controlTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  controlTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  controlTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  controlTypeLT?: InputMaybe<Scalars['String']['input']>;
  controlTypeLTE?: InputMaybe<Scalars['String']['input']>;
  controlTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  controlTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  controlTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** family field predicates */
  family?: InputMaybe<Scalars['String']['input']>;
  familyContains?: InputMaybe<Scalars['String']['input']>;
  familyContainsFold?: InputMaybe<Scalars['String']['input']>;
  familyEqualFold?: InputMaybe<Scalars['String']['input']>;
  familyGT?: InputMaybe<Scalars['String']['input']>;
  familyGTE?: InputMaybe<Scalars['String']['input']>;
  familyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  familyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  familyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  familyIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  familyLT?: InputMaybe<Scalars['String']['input']>;
  familyLTE?: InputMaybe<Scalars['String']['input']>;
  familyNEQ?: InputMaybe<Scalars['String']['input']>;
  familyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  familyNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** mapped_frameworks field predicates */
  mappedFrameworks?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksContains?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksContainsFold?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksEqualFold?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksGT?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksGTE?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksHasPrefix?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksHasSuffix?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mappedFrameworksIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  mappedFrameworksLT?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksLTE?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksNEQ?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mappedFrameworksNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<ControlHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<ControlHistoryOpType>;
  operationIn?: InputMaybe<Array<ControlHistoryOpType>>;
  operationNEQ?: InputMaybe<ControlHistoryOpType>;
  operationNotIn?: InputMaybe<Array<ControlHistoryOpType>>;
  or?: InputMaybe<Array<ControlHistoryWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>;
  ownerIDContains?: InputMaybe<Scalars['String']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDGT?: InputMaybe<Scalars['String']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDLT?: InputMaybe<Scalars['String']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** satisfies field predicates */
  satisfies?: InputMaybe<Scalars['String']['input']>;
  satisfiesContains?: InputMaybe<Scalars['String']['input']>;
  satisfiesContainsFold?: InputMaybe<Scalars['String']['input']>;
  satisfiesEqualFold?: InputMaybe<Scalars['String']['input']>;
  satisfiesGT?: InputMaybe<Scalars['String']['input']>;
  satisfiesGTE?: InputMaybe<Scalars['String']['input']>;
  satisfiesHasPrefix?: InputMaybe<Scalars['String']['input']>;
  satisfiesHasSuffix?: InputMaybe<Scalars['String']['input']>;
  satisfiesIn?: InputMaybe<Array<Scalars['String']['input']>>;
  satisfiesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  satisfiesLT?: InputMaybe<Scalars['String']['input']>;
  satisfiesLTE?: InputMaybe<Scalars['String']['input']>;
  satisfiesNEQ?: InputMaybe<Scalars['String']['input']>;
  satisfiesNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  satisfiesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** source field predicates */
  source?: InputMaybe<Scalars['String']['input']>;
  sourceContains?: InputMaybe<Scalars['String']['input']>;
  sourceContainsFold?: InputMaybe<Scalars['String']['input']>;
  sourceEqualFold?: InputMaybe<Scalars['String']['input']>;
  sourceGT?: InputMaybe<Scalars['String']['input']>;
  sourceGTE?: InputMaybe<Scalars['String']['input']>;
  sourceHasPrefix?: InputMaybe<Scalars['String']['input']>;
  sourceHasSuffix?: InputMaybe<Scalars['String']['input']>;
  sourceIn?: InputMaybe<Array<Scalars['String']['input']>>;
  sourceIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  sourceLT?: InputMaybe<Scalars['String']['input']>;
  sourceLTE?: InputMaybe<Scalars['String']['input']>;
  sourceNEQ?: InputMaybe<Scalars['String']['input']>;
  sourceNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  sourceNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>;
  statusContains?: InputMaybe<Scalars['String']['input']>;
  statusContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusGT?: InputMaybe<Scalars['String']['input']>;
  statusGTE?: InputMaybe<Scalars['String']['input']>;
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusLT?: InputMaybe<Scalars['String']['input']>;
  statusLTE?: InputMaybe<Scalars['String']['input']>;
  statusNEQ?: InputMaybe<Scalars['String']['input']>;
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** version field predicates */
  version?: InputMaybe<Scalars['String']['input']>;
  versionContains?: InputMaybe<Scalars['String']['input']>;
  versionContainsFold?: InputMaybe<Scalars['String']['input']>;
  versionEqualFold?: InputMaybe<Scalars['String']['input']>;
  versionGT?: InputMaybe<Scalars['String']['input']>;
  versionGTE?: InputMaybe<Scalars['String']['input']>;
  versionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  versionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  versionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  versionLT?: InputMaybe<Scalars['String']['input']>;
  versionLTE?: InputMaybe<Scalars['String']['input']>;
  versionNEQ?: InputMaybe<Scalars['String']['input']>;
  versionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** ControlObjectiveHistoryOpType is enum for the field operation */
export enum ControlObjectiveHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/**
 * ControlObjectiveHistoryWhereInput is used for filtering ControlObjectiveHistory objects.
 * Input was generated by ent.
 */
export interface ControlObjectiveHistoryWhereInput {
  and?: InputMaybe<Array<ControlObjectiveHistoryWhereInput>>;
  /** class field predicates */
  class?: InputMaybe<Scalars['String']['input']>;
  classContains?: InputMaybe<Scalars['String']['input']>;
  classContainsFold?: InputMaybe<Scalars['String']['input']>;
  classEqualFold?: InputMaybe<Scalars['String']['input']>;
  classGT?: InputMaybe<Scalars['String']['input']>;
  classGTE?: InputMaybe<Scalars['String']['input']>;
  classHasPrefix?: InputMaybe<Scalars['String']['input']>;
  classHasSuffix?: InputMaybe<Scalars['String']['input']>;
  classIn?: InputMaybe<Array<Scalars['String']['input']>>;
  classIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  classLT?: InputMaybe<Scalars['String']['input']>;
  classLTE?: InputMaybe<Scalars['String']['input']>;
  classNEQ?: InputMaybe<Scalars['String']['input']>;
  classNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  classNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** control_number field predicates */
  controlNumber?: InputMaybe<Scalars['String']['input']>;
  controlNumberContains?: InputMaybe<Scalars['String']['input']>;
  controlNumberContainsFold?: InputMaybe<Scalars['String']['input']>;
  controlNumberEqualFold?: InputMaybe<Scalars['String']['input']>;
  controlNumberGT?: InputMaybe<Scalars['String']['input']>;
  controlNumberGTE?: InputMaybe<Scalars['String']['input']>;
  controlNumberHasPrefix?: InputMaybe<Scalars['String']['input']>;
  controlNumberHasSuffix?: InputMaybe<Scalars['String']['input']>;
  controlNumberIn?: InputMaybe<Array<Scalars['String']['input']>>;
  controlNumberIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  controlNumberLT?: InputMaybe<Scalars['String']['input']>;
  controlNumberLTE?: InputMaybe<Scalars['String']['input']>;
  controlNumberNEQ?: InputMaybe<Scalars['String']['input']>;
  controlNumberNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  controlNumberNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** control_objective_type field predicates */
  controlObjectiveType?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeContains?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeGT?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeGTE?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  controlObjectiveTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  controlObjectiveTypeLT?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeLTE?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  controlObjectiveTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** family field predicates */
  family?: InputMaybe<Scalars['String']['input']>;
  familyContains?: InputMaybe<Scalars['String']['input']>;
  familyContainsFold?: InputMaybe<Scalars['String']['input']>;
  familyEqualFold?: InputMaybe<Scalars['String']['input']>;
  familyGT?: InputMaybe<Scalars['String']['input']>;
  familyGTE?: InputMaybe<Scalars['String']['input']>;
  familyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  familyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  familyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  familyIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  familyLT?: InputMaybe<Scalars['String']['input']>;
  familyLTE?: InputMaybe<Scalars['String']['input']>;
  familyNEQ?: InputMaybe<Scalars['String']['input']>;
  familyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  familyNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** mapped_frameworks field predicates */
  mappedFrameworks?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksContains?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksContainsFold?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksEqualFold?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksGT?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksGTE?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksHasPrefix?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksHasSuffix?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mappedFrameworksIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  mappedFrameworksLT?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksLTE?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksNEQ?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mappedFrameworksNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<ControlObjectiveHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<ControlObjectiveHistoryOpType>;
  operationIn?: InputMaybe<Array<ControlObjectiveHistoryOpType>>;
  operationNEQ?: InputMaybe<ControlObjectiveHistoryOpType>;
  operationNotIn?: InputMaybe<Array<ControlObjectiveHistoryOpType>>;
  or?: InputMaybe<Array<ControlObjectiveHistoryWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>;
  ownerIDContains?: InputMaybe<Scalars['String']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDGT?: InputMaybe<Scalars['String']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDLT?: InputMaybe<Scalars['String']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** source field predicates */
  source?: InputMaybe<Scalars['String']['input']>;
  sourceContains?: InputMaybe<Scalars['String']['input']>;
  sourceContainsFold?: InputMaybe<Scalars['String']['input']>;
  sourceEqualFold?: InputMaybe<Scalars['String']['input']>;
  sourceGT?: InputMaybe<Scalars['String']['input']>;
  sourceGTE?: InputMaybe<Scalars['String']['input']>;
  sourceHasPrefix?: InputMaybe<Scalars['String']['input']>;
  sourceHasSuffix?: InputMaybe<Scalars['String']['input']>;
  sourceIn?: InputMaybe<Array<Scalars['String']['input']>>;
  sourceIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  sourceLT?: InputMaybe<Scalars['String']['input']>;
  sourceLTE?: InputMaybe<Scalars['String']['input']>;
  sourceNEQ?: InputMaybe<Scalars['String']['input']>;
  sourceNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  sourceNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>;
  statusContains?: InputMaybe<Scalars['String']['input']>;
  statusContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusGT?: InputMaybe<Scalars['String']['input']>;
  statusGTE?: InputMaybe<Scalars['String']['input']>;
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusLT?: InputMaybe<Scalars['String']['input']>;
  statusLTE?: InputMaybe<Scalars['String']['input']>;
  statusNEQ?: InputMaybe<Scalars['String']['input']>;
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** version field predicates */
  version?: InputMaybe<Scalars['String']['input']>;
  versionContains?: InputMaybe<Scalars['String']['input']>;
  versionContainsFold?: InputMaybe<Scalars['String']['input']>;
  versionEqualFold?: InputMaybe<Scalars['String']['input']>;
  versionGT?: InputMaybe<Scalars['String']['input']>;
  versionGTE?: InputMaybe<Scalars['String']['input']>;
  versionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  versionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  versionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  versionLT?: InputMaybe<Scalars['String']['input']>;
  versionLTE?: InputMaybe<Scalars['String']['input']>;
  versionNEQ?: InputMaybe<Scalars['String']['input']>;
  versionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * ControlObjectiveWhereInput is used for filtering ControlObjective objects.
 * Input was generated by ent.
 */
export interface ControlObjectiveWhereInput {
  and?: InputMaybe<Array<ControlObjectiveWhereInput>>;
  /** class field predicates */
  class?: InputMaybe<Scalars['String']['input']>;
  classContains?: InputMaybe<Scalars['String']['input']>;
  classContainsFold?: InputMaybe<Scalars['String']['input']>;
  classEqualFold?: InputMaybe<Scalars['String']['input']>;
  classGT?: InputMaybe<Scalars['String']['input']>;
  classGTE?: InputMaybe<Scalars['String']['input']>;
  classHasPrefix?: InputMaybe<Scalars['String']['input']>;
  classHasSuffix?: InputMaybe<Scalars['String']['input']>;
  classIn?: InputMaybe<Array<Scalars['String']['input']>>;
  classIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  classLT?: InputMaybe<Scalars['String']['input']>;
  classLTE?: InputMaybe<Scalars['String']['input']>;
  classNEQ?: InputMaybe<Scalars['String']['input']>;
  classNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  classNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** control_number field predicates */
  controlNumber?: InputMaybe<Scalars['String']['input']>;
  controlNumberContains?: InputMaybe<Scalars['String']['input']>;
  controlNumberContainsFold?: InputMaybe<Scalars['String']['input']>;
  controlNumberEqualFold?: InputMaybe<Scalars['String']['input']>;
  controlNumberGT?: InputMaybe<Scalars['String']['input']>;
  controlNumberGTE?: InputMaybe<Scalars['String']['input']>;
  controlNumberHasPrefix?: InputMaybe<Scalars['String']['input']>;
  controlNumberHasSuffix?: InputMaybe<Scalars['String']['input']>;
  controlNumberIn?: InputMaybe<Array<Scalars['String']['input']>>;
  controlNumberIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  controlNumberLT?: InputMaybe<Scalars['String']['input']>;
  controlNumberLTE?: InputMaybe<Scalars['String']['input']>;
  controlNumberNEQ?: InputMaybe<Scalars['String']['input']>;
  controlNumberNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  controlNumberNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** control_objective_type field predicates */
  controlObjectiveType?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeContains?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeGT?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeGTE?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  controlObjectiveTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  controlObjectiveTypeLT?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeLTE?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  controlObjectiveTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** family field predicates */
  family?: InputMaybe<Scalars['String']['input']>;
  familyContains?: InputMaybe<Scalars['String']['input']>;
  familyContainsFold?: InputMaybe<Scalars['String']['input']>;
  familyEqualFold?: InputMaybe<Scalars['String']['input']>;
  familyGT?: InputMaybe<Scalars['String']['input']>;
  familyGTE?: InputMaybe<Scalars['String']['input']>;
  familyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  familyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  familyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  familyIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  familyLT?: InputMaybe<Scalars['String']['input']>;
  familyLTE?: InputMaybe<Scalars['String']['input']>;
  familyNEQ?: InputMaybe<Scalars['String']['input']>;
  familyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  familyNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** blocked_groups edge predicates */
  hasBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  hasBlockedGroupsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** controls edge predicates */
  hasControls?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlsWith?: InputMaybe<Array<ControlWhereInput>>;
  /** editors edge predicates */
  hasEditors?: InputMaybe<Scalars['Boolean']['input']>;
  hasEditorsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** internal_policies edge predicates */
  hasInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>;
  hasInternalPoliciesWith?: InputMaybe<Array<InternalPolicyWhereInput>>;
  /** narratives edge predicates */
  hasNarratives?: InputMaybe<Scalars['Boolean']['input']>;
  hasNarrativesWith?: InputMaybe<Array<NarrativeWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** procedures edge predicates */
  hasProcedures?: InputMaybe<Scalars['Boolean']['input']>;
  hasProceduresWith?: InputMaybe<Array<ProcedureWhereInput>>;
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>;
  /** risks edge predicates */
  hasRisks?: InputMaybe<Scalars['Boolean']['input']>;
  hasRisksWith?: InputMaybe<Array<RiskWhereInput>>;
  /** standard edge predicates */
  hasStandard?: InputMaybe<Scalars['Boolean']['input']>;
  hasStandardWith?: InputMaybe<Array<StandardWhereInput>>;
  /** subcontrols edge predicates */
  hasSubcontrols?: InputMaybe<Scalars['Boolean']['input']>;
  hasSubcontrolsWith?: InputMaybe<Array<SubcontrolWhereInput>>;
  /** tasks edge predicates */
  hasTasks?: InputMaybe<Scalars['Boolean']['input']>;
  hasTasksWith?: InputMaybe<Array<TaskWhereInput>>;
  /** viewers edge predicates */
  hasViewers?: InputMaybe<Scalars['Boolean']['input']>;
  hasViewersWith?: InputMaybe<Array<GroupWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** mapped_frameworks field predicates */
  mappedFrameworks?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksContains?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksContainsFold?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksEqualFold?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksGT?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksGTE?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksHasPrefix?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksHasSuffix?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mappedFrameworksIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  mappedFrameworksLT?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksLTE?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksNEQ?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mappedFrameworksNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<ControlObjectiveWhereInput>;
  or?: InputMaybe<Array<ControlObjectiveWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** source field predicates */
  source?: InputMaybe<Scalars['String']['input']>;
  sourceContains?: InputMaybe<Scalars['String']['input']>;
  sourceContainsFold?: InputMaybe<Scalars['String']['input']>;
  sourceEqualFold?: InputMaybe<Scalars['String']['input']>;
  sourceGT?: InputMaybe<Scalars['String']['input']>;
  sourceGTE?: InputMaybe<Scalars['String']['input']>;
  sourceHasPrefix?: InputMaybe<Scalars['String']['input']>;
  sourceHasSuffix?: InputMaybe<Scalars['String']['input']>;
  sourceIn?: InputMaybe<Array<Scalars['String']['input']>>;
  sourceIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  sourceLT?: InputMaybe<Scalars['String']['input']>;
  sourceLTE?: InputMaybe<Scalars['String']['input']>;
  sourceNEQ?: InputMaybe<Scalars['String']['input']>;
  sourceNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  sourceNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>;
  statusContains?: InputMaybe<Scalars['String']['input']>;
  statusContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusGT?: InputMaybe<Scalars['String']['input']>;
  statusGTE?: InputMaybe<Scalars['String']['input']>;
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusLT?: InputMaybe<Scalars['String']['input']>;
  statusLTE?: InputMaybe<Scalars['String']['input']>;
  statusNEQ?: InputMaybe<Scalars['String']['input']>;
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** version field predicates */
  version?: InputMaybe<Scalars['String']['input']>;
  versionContains?: InputMaybe<Scalars['String']['input']>;
  versionContainsFold?: InputMaybe<Scalars['String']['input']>;
  versionEqualFold?: InputMaybe<Scalars['String']['input']>;
  versionGT?: InputMaybe<Scalars['String']['input']>;
  versionGTE?: InputMaybe<Scalars['String']['input']>;
  versionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  versionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  versionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  versionLT?: InputMaybe<Scalars['String']['input']>;
  versionLTE?: InputMaybe<Scalars['String']['input']>;
  versionNEQ?: InputMaybe<Scalars['String']['input']>;
  versionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * ControlWhereInput is used for filtering Control objects.
 * Input was generated by ent.
 */
export interface ControlWhereInput {
  and?: InputMaybe<Array<ControlWhereInput>>;
  /** class field predicates */
  class?: InputMaybe<Scalars['String']['input']>;
  classContains?: InputMaybe<Scalars['String']['input']>;
  classContainsFold?: InputMaybe<Scalars['String']['input']>;
  classEqualFold?: InputMaybe<Scalars['String']['input']>;
  classGT?: InputMaybe<Scalars['String']['input']>;
  classGTE?: InputMaybe<Scalars['String']['input']>;
  classHasPrefix?: InputMaybe<Scalars['String']['input']>;
  classHasSuffix?: InputMaybe<Scalars['String']['input']>;
  classIn?: InputMaybe<Array<Scalars['String']['input']>>;
  classIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  classLT?: InputMaybe<Scalars['String']['input']>;
  classLTE?: InputMaybe<Scalars['String']['input']>;
  classNEQ?: InputMaybe<Scalars['String']['input']>;
  classNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  classNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** control_number field predicates */
  controlNumber?: InputMaybe<Scalars['String']['input']>;
  controlNumberContains?: InputMaybe<Scalars['String']['input']>;
  controlNumberContainsFold?: InputMaybe<Scalars['String']['input']>;
  controlNumberEqualFold?: InputMaybe<Scalars['String']['input']>;
  controlNumberGT?: InputMaybe<Scalars['String']['input']>;
  controlNumberGTE?: InputMaybe<Scalars['String']['input']>;
  controlNumberHasPrefix?: InputMaybe<Scalars['String']['input']>;
  controlNumberHasSuffix?: InputMaybe<Scalars['String']['input']>;
  controlNumberIn?: InputMaybe<Array<Scalars['String']['input']>>;
  controlNumberIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  controlNumberLT?: InputMaybe<Scalars['String']['input']>;
  controlNumberLTE?: InputMaybe<Scalars['String']['input']>;
  controlNumberNEQ?: InputMaybe<Scalars['String']['input']>;
  controlNumberNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  controlNumberNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** control_type field predicates */
  controlType?: InputMaybe<Scalars['String']['input']>;
  controlTypeContains?: InputMaybe<Scalars['String']['input']>;
  controlTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  controlTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  controlTypeGT?: InputMaybe<Scalars['String']['input']>;
  controlTypeGTE?: InputMaybe<Scalars['String']['input']>;
  controlTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  controlTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  controlTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  controlTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  controlTypeLT?: InputMaybe<Scalars['String']['input']>;
  controlTypeLTE?: InputMaybe<Scalars['String']['input']>;
  controlTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  controlTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  controlTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** family field predicates */
  family?: InputMaybe<Scalars['String']['input']>;
  familyContains?: InputMaybe<Scalars['String']['input']>;
  familyContainsFold?: InputMaybe<Scalars['String']['input']>;
  familyEqualFold?: InputMaybe<Scalars['String']['input']>;
  familyGT?: InputMaybe<Scalars['String']['input']>;
  familyGTE?: InputMaybe<Scalars['String']['input']>;
  familyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  familyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  familyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  familyIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  familyLT?: InputMaybe<Scalars['String']['input']>;
  familyLTE?: InputMaybe<Scalars['String']['input']>;
  familyNEQ?: InputMaybe<Scalars['String']['input']>;
  familyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  familyNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** action_plans edge predicates */
  hasActionPlans?: InputMaybe<Scalars['Boolean']['input']>;
  hasActionPlansWith?: InputMaybe<Array<ActionPlanWhereInput>>;
  /** blocked_groups edge predicates */
  hasBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  hasBlockedGroupsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** control_objectives edge predicates */
  hasControlObjectives?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlObjectivesWith?: InputMaybe<Array<ControlObjectiveWhereInput>>;
  /** editors edge predicates */
  hasEditors?: InputMaybe<Scalars['Boolean']['input']>;
  hasEditorsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** narratives edge predicates */
  hasNarratives?: InputMaybe<Scalars['Boolean']['input']>;
  hasNarrativesWith?: InputMaybe<Array<NarrativeWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** procedures edge predicates */
  hasProcedures?: InputMaybe<Scalars['Boolean']['input']>;
  hasProceduresWith?: InputMaybe<Array<ProcedureWhereInput>>;
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>;
  /** risks edge predicates */
  hasRisks?: InputMaybe<Scalars['Boolean']['input']>;
  hasRisksWith?: InputMaybe<Array<RiskWhereInput>>;
  /** standard edge predicates */
  hasStandard?: InputMaybe<Scalars['Boolean']['input']>;
  hasStandardWith?: InputMaybe<Array<StandardWhereInput>>;
  /** subcontrols edge predicates */
  hasSubcontrols?: InputMaybe<Scalars['Boolean']['input']>;
  hasSubcontrolsWith?: InputMaybe<Array<SubcontrolWhereInput>>;
  /** tasks edge predicates */
  hasTasks?: InputMaybe<Scalars['Boolean']['input']>;
  hasTasksWith?: InputMaybe<Array<TaskWhereInput>>;
  /** viewers edge predicates */
  hasViewers?: InputMaybe<Scalars['Boolean']['input']>;
  hasViewersWith?: InputMaybe<Array<GroupWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** mapped_frameworks field predicates */
  mappedFrameworks?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksContains?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksContainsFold?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksEqualFold?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksGT?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksGTE?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksHasPrefix?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksHasSuffix?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mappedFrameworksIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  mappedFrameworksLT?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksLTE?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksNEQ?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mappedFrameworksNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<ControlWhereInput>;
  or?: InputMaybe<Array<ControlWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** satisfies field predicates */
  satisfies?: InputMaybe<Scalars['String']['input']>;
  satisfiesContains?: InputMaybe<Scalars['String']['input']>;
  satisfiesContainsFold?: InputMaybe<Scalars['String']['input']>;
  satisfiesEqualFold?: InputMaybe<Scalars['String']['input']>;
  satisfiesGT?: InputMaybe<Scalars['String']['input']>;
  satisfiesGTE?: InputMaybe<Scalars['String']['input']>;
  satisfiesHasPrefix?: InputMaybe<Scalars['String']['input']>;
  satisfiesHasSuffix?: InputMaybe<Scalars['String']['input']>;
  satisfiesIn?: InputMaybe<Array<Scalars['String']['input']>>;
  satisfiesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  satisfiesLT?: InputMaybe<Scalars['String']['input']>;
  satisfiesLTE?: InputMaybe<Scalars['String']['input']>;
  satisfiesNEQ?: InputMaybe<Scalars['String']['input']>;
  satisfiesNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  satisfiesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** source field predicates */
  source?: InputMaybe<Scalars['String']['input']>;
  sourceContains?: InputMaybe<Scalars['String']['input']>;
  sourceContainsFold?: InputMaybe<Scalars['String']['input']>;
  sourceEqualFold?: InputMaybe<Scalars['String']['input']>;
  sourceGT?: InputMaybe<Scalars['String']['input']>;
  sourceGTE?: InputMaybe<Scalars['String']['input']>;
  sourceHasPrefix?: InputMaybe<Scalars['String']['input']>;
  sourceHasSuffix?: InputMaybe<Scalars['String']['input']>;
  sourceIn?: InputMaybe<Array<Scalars['String']['input']>>;
  sourceIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  sourceLT?: InputMaybe<Scalars['String']['input']>;
  sourceLTE?: InputMaybe<Scalars['String']['input']>;
  sourceNEQ?: InputMaybe<Scalars['String']['input']>;
  sourceNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  sourceNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>;
  statusContains?: InputMaybe<Scalars['String']['input']>;
  statusContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusGT?: InputMaybe<Scalars['String']['input']>;
  statusGTE?: InputMaybe<Scalars['String']['input']>;
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusLT?: InputMaybe<Scalars['String']['input']>;
  statusLTE?: InputMaybe<Scalars['String']['input']>;
  statusNEQ?: InputMaybe<Scalars['String']['input']>;
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** version field predicates */
  version?: InputMaybe<Scalars['String']['input']>;
  versionContains?: InputMaybe<Scalars['String']['input']>;
  versionContainsFold?: InputMaybe<Scalars['String']['input']>;
  versionEqualFold?: InputMaybe<Scalars['String']['input']>;
  versionGT?: InputMaybe<Scalars['String']['input']>;
  versionGTE?: InputMaybe<Scalars['String']['input']>;
  versionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  versionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  versionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  versionLT?: InputMaybe<Scalars['String']['input']>;
  versionLTE?: InputMaybe<Scalars['String']['input']>;
  versionNEQ?: InputMaybe<Scalars['String']['input']>;
  versionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * CreateAPITokenInput is used for create APIToken object.
 * Input was generated by ent.
 */
export interface CreateApiTokenInput {
  /** a description of the token's purpose */
  description?: InputMaybe<Scalars['String']['input']>;
  /** when the token expires */
  expiresAt?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAt?: InputMaybe<Scalars['Time']['input']>;
  /** the name associated with the token */
  name: Scalars['String']['input'];
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  scopes?: InputMaybe<Array<Scalars['String']['input']>>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * CreateActionPlanInput is used for create ActionPlan object.
 * Input was generated by ent.
 */
export interface CreateActionPlanInput {
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** description of the action plan */
  description?: InputMaybe<Scalars['String']['input']>;
  /** json data including details of the action plan */
  details?: InputMaybe<Scalars['Map']['input']>;
  /** due date of the action plan */
  dueDate?: InputMaybe<Scalars['Time']['input']>;
  /** the name of the action plan */
  name: Scalars['String']['input'];
  /** priority of the action plan */
  priority?: InputMaybe<Scalars['String']['input']>;
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  riskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** source of the action plan */
  source?: InputMaybe<Scalars['String']['input']>;
  standardIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** status of the action plan */
  status?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  userIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
}

/**
 * CreateContactInput is used for create Contact object.
 * Input was generated by ent.
 */
export interface CreateContactInput {
  /** the address of the contact */
  address?: InputMaybe<Scalars['String']['input']>;
  /** the company of the contact */
  company?: InputMaybe<Scalars['String']['input']>;
  /** the email of the contact */
  email?: InputMaybe<Scalars['String']['input']>;
  entityIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the full name of the contact */
  fullName: Scalars['String']['input'];
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  /** the phone number of the contact */
  phoneNumber?: InputMaybe<Scalars['String']['input']>;
  /** status of the contact */
  status?: InputMaybe<ContactUserStatus>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** the title of the contact */
  title?: InputMaybe<Scalars['String']['input']>;
}

/**
 * CreateControlInput is used for create Control object.
 * Input was generated by ent.
 */
export interface CreateControlInput {
  actionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  blockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** class associated with the control */
  class?: InputMaybe<Scalars['String']['input']>;
  /** control number or identifier */
  controlNumber?: InputMaybe<Scalars['String']['input']>;
  controlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** type of the control */
  controlType?: InputMaybe<Scalars['String']['input']>;
  /** description of the control */
  description?: InputMaybe<Scalars['String']['input']>;
  /** json data including details of the control */
  details?: InputMaybe<Scalars['Map']['input']>;
  editorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** family associated with the control */
  family?: InputMaybe<Scalars['String']['input']>;
  /** mapped frameworks */
  mappedFrameworks?: InputMaybe<Scalars['String']['input']>;
  /** the name of the control */
  name: Scalars['String']['input'];
  narrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerID: Scalars['ID']['input'];
  procedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  riskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** which control objectives are satisfied by the control */
  satisfies?: InputMaybe<Scalars['String']['input']>;
  /** source of the control, e.g. framework, template, custom, etc. */
  source?: InputMaybe<Scalars['String']['input']>;
  standardIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** status of the control */
  status?: InputMaybe<Scalars['String']['input']>;
  subcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  taskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** version of the control */
  version?: InputMaybe<Scalars['String']['input']>;
  viewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
}

/**
 * CreateControlObjectiveInput is used for create ControlObjective object.
 * Input was generated by ent.
 */
export interface CreateControlObjectiveInput {
  blockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** class associated with the control objective */
  class?: InputMaybe<Scalars['String']['input']>;
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** number of the control objective */
  controlNumber?: InputMaybe<Scalars['String']['input']>;
  /** type of the control objective */
  controlObjectiveType?: InputMaybe<Scalars['String']['input']>;
  /** description of the control objective */
  description?: InputMaybe<Scalars['String']['input']>;
  /** json data including details of the control objective */
  details?: InputMaybe<Scalars['Map']['input']>;
  editorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** family of the control objective */
  family?: InputMaybe<Scalars['String']['input']>;
  internalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** mapped frameworks */
  mappedFrameworks?: InputMaybe<Scalars['String']['input']>;
  /** the name of the control objective */
  name: Scalars['String']['input'];
  narrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerID: Scalars['ID']['input'];
  procedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  riskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** source of the control objective, e.g. framework, template, user-defined, etc. */
  source?: InputMaybe<Scalars['String']['input']>;
  standardIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** status of the control objective */
  status?: InputMaybe<Scalars['String']['input']>;
  subcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  taskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** version of the control objective */
  version?: InputMaybe<Scalars['String']['input']>;
  viewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
}

export interface CreateControlWithSubcontrolsInput {
  control?: InputMaybe<CreateControlInput>;
  subcontrols?: InputMaybe<Array<CreateSubcontrolInput>>;
}

/**
 * CreateDocumentDataInput is used for create DocumentData object.
 * Input was generated by ent.
 */
export interface CreateDocumentDataInput {
  /** the json data of the document */
  data: Scalars['JSON']['input'];
  entityIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  templateID: Scalars['ID']['input'];
}

/**
 * CreateEntityInput is used for create Entity object.
 * Input was generated by ent.
 */
export interface CreateEntityInput {
  contactIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** An optional description of the entity */
  description?: InputMaybe<Scalars['String']['input']>;
  /** The entity's displayed 'friendly' name */
  displayName?: InputMaybe<Scalars['String']['input']>;
  documentIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** domains associated with the entity */
  domains?: InputMaybe<Array<Scalars['String']['input']>>;
  entityTypeID?: InputMaybe<Scalars['ID']['input']>;
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the name of the entity */
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<CreateNoteInput>;
  noteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  /** status of the entity */
  status?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * CreateEntityTypeInput is used for create EntityType object.
 * Input was generated by ent.
 */
export interface CreateEntityTypeInput {
  entityIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the name of the entity */
  name: Scalars['String']['input'];
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * CreateEventInput is used for create Event object.
 * Input was generated by ent.
 */
export interface CreateEventInput {
  correlationID?: InputMaybe<Scalars['String']['input']>;
  eventID?: InputMaybe<Scalars['String']['input']>;
  eventType: Scalars['String']['input'];
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  groupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  hushIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  integrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  inviteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  metadata?: InputMaybe<Scalars['Map']['input']>;
  organizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  personalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  subscriberIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  userIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
}

/**
 * CreateFileInput is used for create File object.
 * Input was generated by ent.
 */
export interface CreateFileInput {
  /** the category type of the file, if any (e.g. evidence, invoice, etc.) */
  categoryType?: InputMaybe<Scalars['String']['input']>;
  contactIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the content type of the HTTP request - may be different than MIME type as multipart-form can transmit multiple files and different types */
  detectedContentType: Scalars['String']['input'];
  /** the mime type detected by the system */
  detectedMimeType?: InputMaybe<Scalars['String']['input']>;
  documentDatumIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  entityIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  groupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the computed md5 hash of the file calculated after we received the contents of the file, but before the file was written to permanent storage */
  md5Hash?: InputMaybe<Scalars['String']['input']>;
  organizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  organizationSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  persistedFileSize?: InputMaybe<Scalars['Int']['input']>;
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the extension of the file provided */
  providedFileExtension: Scalars['String']['input'];
  /** the name of the file provided in the payload key without the extension */
  providedFileName: Scalars['String']['input'];
  /** the computed size of the file in the original http request */
  providedFileSize?: InputMaybe<Scalars['Int']['input']>;
  /** the storage path is the second-level directory of the file path, typically the correlating logical object ID the file is associated with; files can be stand alone objects and not always correlated to a logical one, so this path of the tree may be empty */
  storagePath?: InputMaybe<Scalars['String']['input']>;
  /** the storage scheme of the file, e.g. file://, s3://, etc. */
  storageScheme?: InputMaybe<Scalars['String']['input']>;
  /** the storage volume of the file which typically will be the organization ID the file belongs to - this is not a literal volume but the overlay file system mapping */
  storageVolume?: InputMaybe<Scalars['String']['input']>;
  /** the key parsed out of a multipart-form request; if we allow multiple files to be uploaded we may want our API specifications to require the use of different keys allowing us to perform easier conditional evaluation on the key and what to do with the file based on key */
  storeKey?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  templateIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the full URI of the file */
  uri?: InputMaybe<Scalars['String']['input']>;
  userIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  userSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
}

export interface CreateFullProgramInput {
  controls?: InputMaybe<Array<CreateControlWithSubcontrolsInput>>;
  internalPolicies?: InputMaybe<Array<CreateInternalPolicyInput>>;
  members?: InputMaybe<Array<CreateMemberWithProgramInput>>;
  procedures?: InputMaybe<Array<CreateProcedureInput>>;
  program: CreateProgramInput;
  risks?: InputMaybe<Array<CreateRiskInput>>;
  standard: CreateStandardInput;
}

/**
 * CreateGroupInput is used for create Group object.
 * Input was generated by ent.
 */
export interface CreateGroupInput {
  controlBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  controlCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  controlEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  controlObjectiveBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  controlObjectiveCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  controlObjectiveEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  controlObjectiveViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  controlViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  createGroupSettings?: InputMaybe<CreateGroupSettingInput>;
  /** the groups description */
  description?: InputMaybe<Scalars['String']['input']>;
  /** The group's displayed 'friendly' name */
  displayName?: InputMaybe<Scalars['String']['input']>;
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the URL to an auto generated gravatar image for the group */
  gravatarLogoURL?: InputMaybe<Scalars['String']['input']>;
  groupCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  integrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  internalPolicyBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  internalPolicyCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  internalPolicyEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the URL to an image uploaded by the customer for the groups avatar image */
  logoURL?: InputMaybe<Scalars['String']['input']>;
  /** the name of the group - must be unique within the organization */
  name: Scalars['String']['input'];
  narrativeBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  narrativeCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  narrativeEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  narrativeViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  procedureBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  procedureCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  procedureEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  programBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  programCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  programEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  programViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  riskBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  riskCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  riskEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  riskViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  settingID: Scalars['ID']['input'];
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  taskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  templateCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  userIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
}

/**
 * CreateGroupMembershipInput is used for create GroupMembership object.
 * Input was generated by ent.
 */
export interface CreateGroupMembershipInput {
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  groupID: Scalars['ID']['input'];
  role?: InputMaybe<GroupMembershipRole>;
  userID: Scalars['ID']['input'];
}

/**
 * CreateGroupSettingInput is used for create GroupSetting object.
 * Input was generated by ent.
 */
export interface CreateGroupSettingInput {
  groupID?: InputMaybe<Scalars['ID']['input']>;
  /** the policy governing ability to freely join a group, whether it requires an invitation, application, or either */
  joinPolicy?: InputMaybe<GroupSettingJoinPolicy>;
  /** whether to sync group members to github groups */
  syncToGithub?: InputMaybe<Scalars['Boolean']['input']>;
  /** whether to sync group members to slack groups */
  syncToSlack?: InputMaybe<Scalars['Boolean']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** whether the group is visible to it's members / owners only or if it's searchable by anyone within the organization */
  visibility?: InputMaybe<GroupSettingVisibility>;
}

/**
 * CreateHushInput is used for create Hush object.
 * Input was generated by ent.
 */
export interface CreateHushInput {
  /** a description of the hush value or purpose, such as github PAT */
  description?: InputMaybe<Scalars['String']['input']>;
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  integrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the kind of secret, such as sshkey, certificate, api token, etc. */
  kind?: InputMaybe<Scalars['String']['input']>;
  /** the logical name of the corresponding hush secret or it's general grouping */
  name: Scalars['String']['input'];
  organizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the generic name of a secret associated with the organization */
  secretName?: InputMaybe<Scalars['String']['input']>;
  /** the secret value */
  secretValue?: InputMaybe<Scalars['String']['input']>;
}

/**
 * CreateIntegrationInput is used for create Integration object.
 * Input was generated by ent.
 */
export interface CreateIntegrationInput {
  /** a description of the integration */
  description?: InputMaybe<Scalars['String']['input']>;
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  kind?: InputMaybe<Scalars['String']['input']>;
  /** the name of the integration - must be unique within the organization */
  name: Scalars['String']['input'];
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  secretIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * CreateInternalPolicyInput is used for create InternalPolicy object.
 * Input was generated by ent.
 */
export interface CreateInternalPolicyInput {
  /** background of the policy */
  background?: InputMaybe<Scalars['String']['input']>;
  blockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  controlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** description of the policy */
  description?: InputMaybe<Scalars['String']['input']>;
  /** json data for the policy document */
  details?: InputMaybe<Scalars['Map']['input']>;
  editorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the name of the policy */
  name: Scalars['String']['input'];
  narrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  /** type of the policy */
  policyType?: InputMaybe<Scalars['String']['input']>;
  procedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** purpose and scope */
  purposeAndScope?: InputMaybe<Scalars['String']['input']>;
  /** status of the policy */
  status?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  taskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** version of the policy */
  version?: InputMaybe<Scalars['String']['input']>;
}

/**
 * CreateInviteInput is used for create Invite object.
 * Input was generated by ent.
 */
export interface CreateInviteInput {
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the expiration date of the invitation token which defaults to 14 days in the future from creation */
  expires?: InputMaybe<Scalars['Time']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  /** the email used as input to generate the invitation token and is the destination person the invitation is sent to who is required to accept to join the organization */
  recipient: Scalars['String']['input'];
  /** the user who initiated the invitation */
  requestorID?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<InviteRole>;
  /** the number of attempts made to perform email send of the invitation, maximum of 5 */
  sendAttempts?: InputMaybe<Scalars['Int']['input']>;
  /** the status of the invitation */
  status?: InputMaybe<InviteInviteStatus>;
}

export interface CreateMemberWithProgramInput {
  role?: InputMaybe<ProgramMembershipRole>;
  userID: Scalars['ID']['input'];
}

/**
 * CreateNarrativeInput is used for create Narrative object.
 * Input was generated by ent.
 */
export interface CreateNarrativeInput {
  blockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  controlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the description of the narrative */
  description?: InputMaybe<Scalars['String']['input']>;
  /** json data for the narrative document */
  details?: InputMaybe<Scalars['Map']['input']>;
  editorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  internalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the name of the narrative */
  name: Scalars['String']['input'];
  ownerID: Scalars['ID']['input'];
  procedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** which controls are satisfied by the narrative */
  satisfies?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  viewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
}

/**
 * CreateNoteInput is used for create Note object.
 * Input was generated by ent.
 */
export interface CreateNoteInput {
  entityID?: InputMaybe<Scalars['ID']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  subcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** the text of the note */
  text: Scalars['String']['input'];
}

/**
 * CreateOrgMembershipInput is used for create OrgMembership object.
 * Input was generated by ent.
 */
export interface CreateOrgMembershipInput {
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  organizationID: Scalars['ID']['input'];
  role?: InputMaybe<OrgMembershipRole>;
  userID: Scalars['ID']['input'];
}

/**
 * CreateOrgSubscriptionInput is used for create OrgSubscription object.
 * Input was generated by ent.
 */
export interface CreateOrgSubscriptionInput {
  /** indicates if the subscription is active */
  active?: InputMaybe<Scalars['Boolean']['input']>;
  /** the time the subscription is set to expire; only populated if subscription is cancelled */
  expiresAt?: InputMaybe<Scalars['Time']['input']>;
  /** the features associated with the subscription */
  features?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  /** the common name of the product tier the subscription is associated with, e.g. starter tier */
  productTier?: InputMaybe<Scalars['String']['input']>;
  /** the customer ID the subscription is associated to */
  stripeCustomerID?: InputMaybe<Scalars['String']['input']>;
  /** the product id that represents the tier in stripe */
  stripeProductTierID?: InputMaybe<Scalars['String']['input']>;
  /** the stripe subscription id */
  stripeSubscriptionID?: InputMaybe<Scalars['String']['input']>;
  /** the status of the subscription in stripe -- see https://docs.stripe.com/api/subscriptions/object#subscription_object-status */
  stripeSubscriptionStatus?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * CreateOrganizationInput is used for create Organization object.
 * Input was generated by ent.
 */
export interface CreateOrganizationInput {
  apiTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** URL of the user's remote avatar */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>;
  contactIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  controlCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  controlObjectiveCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  controlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  createOrgSettings?: InputMaybe<CreateOrganizationSettingInput>;
  /** Whether the organization has a dedicated database */
  dedicatedDb?: InputMaybe<Scalars['Boolean']['input']>;
  /** An optional description of the organization */
  description?: InputMaybe<Scalars['String']['input']>;
  /** The organization's displayed 'friendly' name */
  displayName?: InputMaybe<Scalars['String']['input']>;
  documentDatumIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  entityIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  entityTypeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  groupCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  groupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  integrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  internalPolicyCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  internalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  inviteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the name of the organization */
  name: Scalars['String']['input'];
  narrativeCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  narrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  noteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  orgSubscriptionIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  parentID?: InputMaybe<Scalars['ID']['input']>;
  personalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** orgs directly associated with a user */
  personalOrg?: InputMaybe<Scalars['Boolean']['input']>;
  procedureCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  procedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  programCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  riskCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  riskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  secretIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  settingID?: InputMaybe<Scalars['ID']['input']>;
  subcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  subscriberIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  taskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  templateCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  templateIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  userIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
}

/**
 * CreateOrganizationSettingInput is used for create OrganizationSetting object.
 * Input was generated by ent.
 */
export interface CreateOrganizationSettingInput {
  /** Address to send billing information to */
  billingAddress?: InputMaybe<Scalars['String']['input']>;
  /** Name of the person to contact for billing */
  billingContact?: InputMaybe<Scalars['String']['input']>;
  /** Email address of the person to contact for billing */
  billingEmail?: InputMaybe<Scalars['String']['input']>;
  /** Phone number to contact for billing */
  billingPhone?: InputMaybe<Scalars['String']['input']>;
  /** domains associated with the organization */
  domains?: InputMaybe<Array<Scalars['String']['input']>>;
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** geographical location of the organization */
  geoLocation?: InputMaybe<OrganizationSettingRegion>;
  organizationID?: InputMaybe<Scalars['ID']['input']>;
  /** the ID of the stripe customer associated with the organization */
  stripeID?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Usually government-issued tax ID or business ID such as ABN in Australia */
  taxIdentifier?: InputMaybe<Scalars['String']['input']>;
}

/**
 * CreatePersonalAccessTokenInput is used for create PersonalAccessToken object.
 * Input was generated by ent.
 */
export interface CreatePersonalAccessTokenInput {
  /** a description of the token's purpose */
  description?: InputMaybe<Scalars['String']['input']>;
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** when the token expires */
  expiresAt?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAt?: InputMaybe<Scalars['Time']['input']>;
  /** the name associated with the token */
  name: Scalars['String']['input'];
  organizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerID: Scalars['ID']['input'];
  scopes?: InputMaybe<Array<Scalars['String']['input']>>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * CreateProcedureInput is used for create Procedure object.
 * Input was generated by ent.
 */
export interface CreateProcedureInput {
  /** background of the procedure */
  background?: InputMaybe<Scalars['String']['input']>;
  blockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** description of the procedure */
  description?: InputMaybe<Scalars['String']['input']>;
  /** json data for the procedure document */
  details?: InputMaybe<Scalars['Map']['input']>;
  editorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  internalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the name of the procedure */
  name: Scalars['String']['input'];
  narrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  /** type of the procedure */
  procedureType?: InputMaybe<Scalars['String']['input']>;
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** purpose and scope */
  purposeAndScope?: InputMaybe<Scalars['String']['input']>;
  riskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** which controls are satisfied by the procedure */
  satisfies?: InputMaybe<Scalars['String']['input']>;
  /** status of the procedure */
  status?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  taskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** version of the procedure */
  version?: InputMaybe<Scalars['String']['input']>;
}

/**
 * CreateProgramInput is used for create Program object.
 * Input was generated by ent.
 */
export interface CreateProgramInput {
  actionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** can the auditor read comments */
  auditorReadComments?: InputMaybe<Scalars['Boolean']['input']>;
  /** is the program ready for the auditor */
  auditorReady?: InputMaybe<Scalars['Boolean']['input']>;
  /** can the auditor write comments */
  auditorWriteComments?: InputMaybe<Scalars['Boolean']['input']>;
  blockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  controlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the description of the program */
  description?: InputMaybe<Scalars['String']['input']>;
  editorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the end date of the period */
  endDate?: InputMaybe<Scalars['Time']['input']>;
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  internalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the name of the program */
  name: Scalars['String']['input'];
  narrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  noteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  procedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  riskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  standardIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the start date of the period */
  startDate?: InputMaybe<Scalars['Time']['input']>;
  /** the status of the program */
  status?: InputMaybe<ProgramProgramStatus>;
  subcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  taskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  userIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  viewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
}

/**
 * CreateProgramMembershipInput is used for create ProgramMembership object.
 * Input was generated by ent.
 */
export interface CreateProgramMembershipInput {
  programID: Scalars['ID']['input'];
  role?: InputMaybe<ProgramMembershipRole>;
  userID: Scalars['ID']['input'];
}

export interface CreateProgramWithMembersInput {
  members?: InputMaybe<Array<CreateMemberWithProgramInput>>;
  program: CreateProgramInput;
}

/**
 * CreateRiskInput is used for create Risk object.
 * Input was generated by ent.
 */
export interface CreateRiskInput {
  actionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  blockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** business costs associated with the risk */
  businessCosts?: InputMaybe<Scalars['String']['input']>;
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** description of the risk */
  description?: InputMaybe<Scalars['String']['input']>;
  /** json data for the risk document */
  details?: InputMaybe<Scalars['Map']['input']>;
  editorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** impact of the risk - high, medium, low */
  impact?: InputMaybe<RiskRiskImpact>;
  /** likelihood of the risk occurring; unlikely, likely, highly likely */
  likelihood?: InputMaybe<RiskRiskLikelihood>;
  /** mitigation for the risk */
  mitigation?: InputMaybe<Scalars['String']['input']>;
  /** the name of the risk */
  name: Scalars['String']['input'];
  ownerID: Scalars['ID']['input'];
  procedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** type of the risk, e.g. strategic, operational, financial, external, etc. */
  riskType?: InputMaybe<Scalars['String']['input']>;
  /** which controls are satisfied by the risk */
  satisfies?: InputMaybe<Scalars['String']['input']>;
  /** status of the risk - mitigated or not, inflight, etc. */
  status?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  viewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
}

/**
 * CreateStandardInput is used for create Standard object.
 * Input was generated by ent.
 */
export interface CreateStandardInput {
  actionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** background of the standard */
  background?: InputMaybe<Scalars['String']['input']>;
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  controlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** description of the standard */
  description?: InputMaybe<Scalars['String']['input']>;
  /** json data with details of the standard */
  details?: InputMaybe<Scalars['Map']['input']>;
  /** family of the standard, e.g. 800-53, 800-171, 27001, etc. */
  family?: InputMaybe<Scalars['String']['input']>;
  /** the name of the standard body, e.g. TSC, NIST, SOC, HITRUST, FedRamp, etc. */
  name: Scalars['String']['input'];
  procedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** purpose and scope */
  purposeAndScope?: InputMaybe<Scalars['String']['input']>;
  /** which controls are satisfied by the standard */
  satisfies?: InputMaybe<Scalars['String']['input']>;
  /** type of the standard - security, privacy, etc. */
  standardType?: InputMaybe<Scalars['String']['input']>;
  /** status of the standard - active, deprecated, etc. */
  status?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** version of the standard */
  version?: InputMaybe<Scalars['String']['input']>;
}

/**
 * CreateSubcontrolInput is used for create Subcontrol object.
 * Input was generated by ent.
 */
export interface CreateSubcontrolInput {
  /** subcontrol class */
  class?: InputMaybe<Scalars['String']['input']>;
  controlIDs: Array<Scalars['ID']['input']>;
  /** description of the subcontrol */
  description?: InputMaybe<Scalars['String']['input']>;
  /** json data details of the subcontrol */
  details?: InputMaybe<Scalars['Map']['input']>;
  /** subcontrol family */
  family?: InputMaybe<Scalars['String']['input']>;
  /** date the subcontrol was implemented */
  implementationDate?: InputMaybe<Scalars['Time']['input']>;
  /** implementation evidence of the subcontrol */
  implementationEvidence?: InputMaybe<Scalars['String']['input']>;
  /** implementation status */
  implementationStatus?: InputMaybe<Scalars['String']['input']>;
  /** implementation verification */
  implementationVerification?: InputMaybe<Scalars['String']['input']>;
  /** date the subcontrol implementation was verified */
  implementationVerificationDate?: InputMaybe<Scalars['Time']['input']>;
  /** mapped frameworks that the subcontrol is part of */
  mappedFrameworks?: InputMaybe<Scalars['String']['input']>;
  /** the name of the subcontrol */
  name: Scalars['String']['input'];
  notesID?: InputMaybe<Scalars['ID']['input']>;
  ownerID: Scalars['ID']['input'];
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** source of the control, e.g. framework, template, user-defined, etc. */
  source?: InputMaybe<Scalars['String']['input']>;
  /** status of the subcontrol */
  status?: InputMaybe<Scalars['String']['input']>;
  /** number of the subcontrol */
  subcontrolNumber?: InputMaybe<Scalars['String']['input']>;
  /** type of the subcontrol */
  subcontrolType?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  taskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  userIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** version of the control */
  version?: InputMaybe<Scalars['String']['input']>;
}

/**
 * CreateSubscriberInput is used for create Subscriber object.
 * Input was generated by ent.
 */
export interface CreateSubscriberInput {
  /** email address of the subscriber */
  email: Scalars['String']['input'];
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  /** phone number of the subscriber */
  phoneNumber?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * CreateTFASettingInput is used for create TFASetting object.
 * Input was generated by ent.
 */
export interface CreateTfaSettingInput {
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** specifies a user may complete authentication by verifying a TOTP code delivered through an authenticator app */
  totpAllowed?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * CreateTaskInput is used for create Task object.
 * Input was generated by ent.
 */
export interface CreateTaskInput {
  assigneeID?: InputMaybe<Scalars['ID']['input']>;
  assignerID: Scalars['ID']['input'];
  /** the completion date of the task */
  completed?: InputMaybe<Scalars['Time']['input']>;
  controlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  controlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the description of the task */
  description?: InputMaybe<Scalars['String']['input']>;
  /** the details of the task */
  details?: InputMaybe<Scalars['Map']['input']>;
  /** the due date of the task */
  due?: InputMaybe<Scalars['Time']['input']>;
  groupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  internalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  organizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  procedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the status of the task */
  status?: InputMaybe<TaskTaskStatus>;
  subcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** the title of the task */
  title: Scalars['String']['input'];
}

/**
 * CreateTemplateInput is used for create Template object.
 * Input was generated by ent.
 */
export interface CreateTemplateInput {
  /** the description of the template */
  description?: InputMaybe<Scalars['String']['input']>;
  documentIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the jsonschema object of the template */
  jsonconfig: Scalars['JSON']['input'];
  /** the name of the template */
  name: Scalars['String']['input'];
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** the type of the template, either a provided template or an implementation (document) */
  templateType?: InputMaybe<TemplateDocumentType>;
  /** the uischema for the template to render in the UI */
  uischema?: InputMaybe<Scalars['JSON']['input']>;
}

/**
 * CreateUserInput is used for create User object.
 * Input was generated by ent.
 */
export interface CreateUserInput {
  actionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  assigneeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  assignerTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** auth provider used to register the account */
  authProvider?: InputMaybe<UserAuthProvider>;
  /** The user's local avatar file */
  avatarLocalFile?: InputMaybe<Scalars['String']['input']>;
  /** URL of the user's remote avatar */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>;
  /** The time the user's (local) avatar was last updated */
  avatarUpdatedAt?: InputMaybe<Scalars['Time']['input']>;
  /** The user's displayed 'friendly' name */
  displayName: Scalars['String']['input'];
  email: Scalars['String']['input'];
  emailVerificationTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  eventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  fileID?: InputMaybe<Scalars['ID']['input']>;
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  groupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  /** the time the user was last seen */
  lastSeen?: InputMaybe<Scalars['Time']['input']>;
  organizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** user password hash */
  password?: InputMaybe<Scalars['String']['input']>;
  passwordResetTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  personalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  programIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the user's role */
  role?: InputMaybe<UserRole>;
  settingID: Scalars['ID']['input'];
  /** the Subject of the user JWT */
  sub?: InputMaybe<Scalars['String']['input']>;
  subcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  tfaSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  webauthnIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
}

/**
 * CreateUserSettingInput is used for create UserSetting object.
 * Input was generated by ent.
 */
export interface CreateUserSettingInput {
  defaultOrgID?: InputMaybe<Scalars['ID']['input']>;
  /** whether the user has confirmed their email address */
  emailConfirmed?: InputMaybe<Scalars['Boolean']['input']>;
  fileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** whether the user has two factor authentication enabled */
  isTfaEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  /** specifies a user may complete authentication by verifying a WebAuthn capable device */
  isWebauthnAllowed?: InputMaybe<Scalars['Boolean']['input']>;
  /** user account is locked if unconfirmed or explicitly locked */
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  /** The time notifications regarding the user were silenced */
  silencedAt?: InputMaybe<Scalars['Time']['input']>;
  /** status of the user account */
  status?: InputMaybe<UserSettingUserStatus>;
  /** The time the user was suspended */
  suspendedAt?: InputMaybe<Scalars['Time']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  userID?: InputMaybe<Scalars['ID']['input']>;
}

/** DocumentDataHistoryOpType is enum for the field operation */
export enum DocumentDataHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/**
 * DocumentDataHistoryWhereInput is used for filtering DocumentDataHistory objects.
 * Input was generated by ent.
 */
export interface DocumentDataHistoryWhereInput {
  and?: InputMaybe<Array<DocumentDataHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<DocumentDataHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<DocumentDataHistoryOpType>;
  operationIn?: InputMaybe<Array<DocumentDataHistoryOpType>>;
  operationNEQ?: InputMaybe<DocumentDataHistoryOpType>;
  operationNotIn?: InputMaybe<Array<DocumentDataHistoryOpType>>;
  or?: InputMaybe<Array<DocumentDataHistoryWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>;
  ownerIDContains?: InputMaybe<Scalars['String']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDGT?: InputMaybe<Scalars['String']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['String']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** template_id field predicates */
  templateID?: InputMaybe<Scalars['String']['input']>;
  templateIDContains?: InputMaybe<Scalars['String']['input']>;
  templateIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  templateIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  templateIDGT?: InputMaybe<Scalars['String']['input']>;
  templateIDGTE?: InputMaybe<Scalars['String']['input']>;
  templateIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  templateIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  templateIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  templateIDLT?: InputMaybe<Scalars['String']['input']>;
  templateIDLTE?: InputMaybe<Scalars['String']['input']>;
  templateIDNEQ?: InputMaybe<Scalars['String']['input']>;
  templateIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * DocumentDataWhereInput is used for filtering DocumentData objects.
 * Input was generated by ent.
 */
export interface DocumentDataWhereInput {
  and?: InputMaybe<Array<DocumentDataWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** entity edge predicates */
  hasEntity?: InputMaybe<Scalars['Boolean']['input']>;
  hasEntityWith?: InputMaybe<Array<EntityWhereInput>>;
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>;
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** template edge predicates */
  hasTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  hasTemplateWith?: InputMaybe<Array<TemplateWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<DocumentDataWhereInput>;
  or?: InputMaybe<Array<DocumentDataWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** template_id field predicates */
  templateID?: InputMaybe<Scalars['ID']['input']>;
  templateIDContains?: InputMaybe<Scalars['ID']['input']>;
  templateIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  templateIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  templateIDGT?: InputMaybe<Scalars['ID']['input']>;
  templateIDGTE?: InputMaybe<Scalars['ID']['input']>;
  templateIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  templateIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  templateIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  templateIDLT?: InputMaybe<Scalars['ID']['input']>;
  templateIDLTE?: InputMaybe<Scalars['ID']['input']>;
  templateIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  templateIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** EntityHistoryOpType is enum for the field operation */
export enum EntityHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** Ordering options for EntityHistory connections */
export interface EntityHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order EntityHistories. */
  field: EntityHistoryOrderField;
}

/** Properties by which EntityHistory connections can be ordered. */
export enum EntityHistoryOrderField {
  display_name = 'display_name',
  name = 'name'
}

/**
 * EntityHistoryWhereInput is used for filtering EntityHistory objects.
 * Input was generated by ent.
 */
export interface EntityHistoryWhereInput {
  and?: InputMaybe<Array<EntityHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayNameContains?: InputMaybe<Scalars['String']['input']>;
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  displayNameGT?: InputMaybe<Scalars['String']['input']>;
  displayNameGTE?: InputMaybe<Scalars['String']['input']>;
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  displayNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  displayNameLT?: InputMaybe<Scalars['String']['input']>;
  displayNameLTE?: InputMaybe<Scalars['String']['input']>;
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>;
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  displayNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** entity_type_id field predicates */
  entityTypeID?: InputMaybe<Scalars['String']['input']>;
  entityTypeIDContains?: InputMaybe<Scalars['String']['input']>;
  entityTypeIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  entityTypeIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  entityTypeIDGT?: InputMaybe<Scalars['String']['input']>;
  entityTypeIDGTE?: InputMaybe<Scalars['String']['input']>;
  entityTypeIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  entityTypeIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  entityTypeIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  entityTypeIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  entityTypeIDLT?: InputMaybe<Scalars['String']['input']>;
  entityTypeIDLTE?: InputMaybe<Scalars['String']['input']>;
  entityTypeIDNEQ?: InputMaybe<Scalars['String']['input']>;
  entityTypeIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  entityTypeIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<EntityHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<EntityHistoryOpType>;
  operationIn?: InputMaybe<Array<EntityHistoryOpType>>;
  operationNEQ?: InputMaybe<EntityHistoryOpType>;
  operationNotIn?: InputMaybe<Array<EntityHistoryOpType>>;
  or?: InputMaybe<Array<EntityHistoryWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>;
  ownerIDContains?: InputMaybe<Scalars['String']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDGT?: InputMaybe<Scalars['String']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['String']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>;
  statusContains?: InputMaybe<Scalars['String']['input']>;
  statusContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusGT?: InputMaybe<Scalars['String']['input']>;
  statusGTE?: InputMaybe<Scalars['String']['input']>;
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusLT?: InputMaybe<Scalars['String']['input']>;
  statusLTE?: InputMaybe<Scalars['String']['input']>;
  statusNEQ?: InputMaybe<Scalars['String']['input']>;
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** Ordering options for Entity connections */
export interface EntityOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order Entities. */
  field: EntityOrderField;
}

/** Properties by which Entity connections can be ordered. */
export enum EntityOrderField {
  display_name = 'display_name',
  name = 'name'
}

/** EntityTypeHistoryOpType is enum for the field operation */
export enum EntityTypeHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** Ordering options for EntityTypeHistory connections */
export interface EntityTypeHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order EntityTypeHistories. */
  field: EntityTypeHistoryOrderField;
}

/** Properties by which EntityTypeHistory connections can be ordered. */
export enum EntityTypeHistoryOrderField {
  name = 'name'
}

/**
 * EntityTypeHistoryWhereInput is used for filtering EntityTypeHistory objects.
 * Input was generated by ent.
 */
export interface EntityTypeHistoryWhereInput {
  and?: InputMaybe<Array<EntityTypeHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<EntityTypeHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<EntityTypeHistoryOpType>;
  operationIn?: InputMaybe<Array<EntityTypeHistoryOpType>>;
  operationNEQ?: InputMaybe<EntityTypeHistoryOpType>;
  operationNotIn?: InputMaybe<Array<EntityTypeHistoryOpType>>;
  or?: InputMaybe<Array<EntityTypeHistoryWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>;
  ownerIDContains?: InputMaybe<Scalars['String']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDGT?: InputMaybe<Scalars['String']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['String']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** Ordering options for EntityType connections */
export interface EntityTypeOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order EntityTypes. */
  field: EntityTypeOrderField;
}

/** Properties by which EntityType connections can be ordered. */
export enum EntityTypeOrderField {
  name = 'name'
}

/**
 * EntityTypeWhereInput is used for filtering EntityType objects.
 * Input was generated by ent.
 */
export interface EntityTypeWhereInput {
  and?: InputMaybe<Array<EntityTypeWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** entities edge predicates */
  hasEntities?: InputMaybe<Scalars['Boolean']['input']>;
  hasEntitiesWith?: InputMaybe<Array<EntityWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<EntityTypeWhereInput>;
  or?: InputMaybe<Array<EntityTypeWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * EntityWhereInput is used for filtering Entity objects.
 * Input was generated by ent.
 */
export interface EntityWhereInput {
  and?: InputMaybe<Array<EntityWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayNameContains?: InputMaybe<Scalars['String']['input']>;
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  displayNameGT?: InputMaybe<Scalars['String']['input']>;
  displayNameGTE?: InputMaybe<Scalars['String']['input']>;
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  displayNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  displayNameLT?: InputMaybe<Scalars['String']['input']>;
  displayNameLTE?: InputMaybe<Scalars['String']['input']>;
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>;
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  displayNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** entity_type_id field predicates */
  entityTypeID?: InputMaybe<Scalars['ID']['input']>;
  entityTypeIDContains?: InputMaybe<Scalars['ID']['input']>;
  entityTypeIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  entityTypeIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  entityTypeIDGT?: InputMaybe<Scalars['ID']['input']>;
  entityTypeIDGTE?: InputMaybe<Scalars['ID']['input']>;
  entityTypeIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  entityTypeIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  entityTypeIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  entityTypeIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  entityTypeIDLT?: InputMaybe<Scalars['ID']['input']>;
  entityTypeIDLTE?: InputMaybe<Scalars['ID']['input']>;
  entityTypeIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  entityTypeIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  entityTypeIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** contacts edge predicates */
  hasContacts?: InputMaybe<Scalars['Boolean']['input']>;
  hasContactsWith?: InputMaybe<Array<ContactWhereInput>>;
  /** documents edge predicates */
  hasDocuments?: InputMaybe<Scalars['Boolean']['input']>;
  hasDocumentsWith?: InputMaybe<Array<DocumentDataWhereInput>>;
  /** entity_type edge predicates */
  hasEntityType?: InputMaybe<Scalars['Boolean']['input']>;
  hasEntityTypeWith?: InputMaybe<Array<EntityTypeWhereInput>>;
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>;
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>;
  /** notes edge predicates */
  hasNotes?: InputMaybe<Scalars['Boolean']['input']>;
  hasNotesWith?: InputMaybe<Array<NoteWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<EntityWhereInput>;
  or?: InputMaybe<Array<EntityWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>;
  statusContains?: InputMaybe<Scalars['String']['input']>;
  statusContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusGT?: InputMaybe<Scalars['String']['input']>;
  statusGTE?: InputMaybe<Scalars['String']['input']>;
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusLT?: InputMaybe<Scalars['String']['input']>;
  statusLTE?: InputMaybe<Scalars['String']['input']>;
  statusNEQ?: InputMaybe<Scalars['String']['input']>;
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** EventHistoryOpType is enum for the field operation */
export enum EventHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/**
 * EventHistoryWhereInput is used for filtering EventHistory objects.
 * Input was generated by ent.
 */
export interface EventHistoryWhereInput {
  and?: InputMaybe<Array<EventHistoryWhereInput>>;
  /** correlation_id field predicates */
  correlationID?: InputMaybe<Scalars['String']['input']>;
  correlationIDContains?: InputMaybe<Scalars['String']['input']>;
  correlationIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  correlationIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  correlationIDGT?: InputMaybe<Scalars['String']['input']>;
  correlationIDGTE?: InputMaybe<Scalars['String']['input']>;
  correlationIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  correlationIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  correlationIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  correlationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  correlationIDLT?: InputMaybe<Scalars['String']['input']>;
  correlationIDLTE?: InputMaybe<Scalars['String']['input']>;
  correlationIDNEQ?: InputMaybe<Scalars['String']['input']>;
  correlationIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  correlationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** event_id field predicates */
  eventID?: InputMaybe<Scalars['String']['input']>;
  eventIDContains?: InputMaybe<Scalars['String']['input']>;
  eventIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  eventIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  eventIDGT?: InputMaybe<Scalars['String']['input']>;
  eventIDGTE?: InputMaybe<Scalars['String']['input']>;
  eventIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  eventIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  eventIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  eventIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  eventIDLT?: InputMaybe<Scalars['String']['input']>;
  eventIDLTE?: InputMaybe<Scalars['String']['input']>;
  eventIDNEQ?: InputMaybe<Scalars['String']['input']>;
  eventIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  eventIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** event_type field predicates */
  eventType?: InputMaybe<Scalars['String']['input']>;
  eventTypeContains?: InputMaybe<Scalars['String']['input']>;
  eventTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  eventTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  eventTypeGT?: InputMaybe<Scalars['String']['input']>;
  eventTypeGTE?: InputMaybe<Scalars['String']['input']>;
  eventTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  eventTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  eventTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  eventTypeLT?: InputMaybe<Scalars['String']['input']>;
  eventTypeLTE?: InputMaybe<Scalars['String']['input']>;
  eventTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  eventTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<EventHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<EventHistoryOpType>;
  operationIn?: InputMaybe<Array<EventHistoryOpType>>;
  operationNEQ?: InputMaybe<EventHistoryOpType>;
  operationNotIn?: InputMaybe<Array<EventHistoryOpType>>;
  or?: InputMaybe<Array<EventHistoryWhereInput>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * EventWhereInput is used for filtering Event objects.
 * Input was generated by ent.
 */
export interface EventWhereInput {
  and?: InputMaybe<Array<EventWhereInput>>;
  /** correlation_id field predicates */
  correlationID?: InputMaybe<Scalars['String']['input']>;
  correlationIDContains?: InputMaybe<Scalars['String']['input']>;
  correlationIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  correlationIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  correlationIDGT?: InputMaybe<Scalars['String']['input']>;
  correlationIDGTE?: InputMaybe<Scalars['String']['input']>;
  correlationIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  correlationIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  correlationIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  correlationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  correlationIDLT?: InputMaybe<Scalars['String']['input']>;
  correlationIDLTE?: InputMaybe<Scalars['String']['input']>;
  correlationIDNEQ?: InputMaybe<Scalars['String']['input']>;
  correlationIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  correlationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** event_id field predicates */
  eventID?: InputMaybe<Scalars['String']['input']>;
  eventIDContains?: InputMaybe<Scalars['String']['input']>;
  eventIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  eventIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  eventIDGT?: InputMaybe<Scalars['String']['input']>;
  eventIDGTE?: InputMaybe<Scalars['String']['input']>;
  eventIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  eventIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  eventIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  eventIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  eventIDLT?: InputMaybe<Scalars['String']['input']>;
  eventIDLTE?: InputMaybe<Scalars['String']['input']>;
  eventIDNEQ?: InputMaybe<Scalars['String']['input']>;
  eventIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  eventIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** event_type field predicates */
  eventType?: InputMaybe<Scalars['String']['input']>;
  eventTypeContains?: InputMaybe<Scalars['String']['input']>;
  eventTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  eventTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  eventTypeGT?: InputMaybe<Scalars['String']['input']>;
  eventTypeGTE?: InputMaybe<Scalars['String']['input']>;
  eventTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  eventTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  eventTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  eventTypeLT?: InputMaybe<Scalars['String']['input']>;
  eventTypeLTE?: InputMaybe<Scalars['String']['input']>;
  eventTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  eventTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** file edge predicates */
  hasFile?: InputMaybe<Scalars['Boolean']['input']>;
  hasFileWith?: InputMaybe<Array<FileWhereInput>>;
  /** group edge predicates */
  hasGroup?: InputMaybe<Scalars['Boolean']['input']>;
  hasGroupWith?: InputMaybe<Array<GroupWhereInput>>;
  /** groupmembership edge predicates */
  hasGroupmembership?: InputMaybe<Scalars['Boolean']['input']>;
  hasGroupmembershipWith?: InputMaybe<Array<GroupMembershipWhereInput>>;
  /** hush edge predicates */
  hasHush?: InputMaybe<Scalars['Boolean']['input']>;
  hasHushWith?: InputMaybe<Array<HushWhereInput>>;
  /** integration edge predicates */
  hasIntegration?: InputMaybe<Scalars['Boolean']['input']>;
  hasIntegrationWith?: InputMaybe<Array<IntegrationWhereInput>>;
  /** invite edge predicates */
  hasInvite?: InputMaybe<Scalars['Boolean']['input']>;
  hasInviteWith?: InputMaybe<Array<InviteWhereInput>>;
  /** organization edge predicates */
  hasOrganization?: InputMaybe<Scalars['Boolean']['input']>;
  hasOrganizationWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** orgmembership edge predicates */
  hasOrgmembership?: InputMaybe<Scalars['Boolean']['input']>;
  hasOrgmembershipWith?: InputMaybe<Array<OrgMembershipWhereInput>>;
  /** personal_access_token edge predicates */
  hasPersonalAccessToken?: InputMaybe<Scalars['Boolean']['input']>;
  hasPersonalAccessTokenWith?: InputMaybe<Array<PersonalAccessTokenWhereInput>>;
  /** subscriber edge predicates */
  hasSubscriber?: InputMaybe<Scalars['Boolean']['input']>;
  hasSubscriberWith?: InputMaybe<Array<SubscriberWhereInput>>;
  /** user edge predicates */
  hasUser?: InputMaybe<Scalars['Boolean']['input']>;
  hasUserWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<EventWhereInput>;
  or?: InputMaybe<Array<EventWhereInput>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** FileHistoryOpType is enum for the field operation */
export enum FileHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/**
 * FileHistoryWhereInput is used for filtering FileHistory objects.
 * Input was generated by ent.
 */
export interface FileHistoryWhereInput {
  and?: InputMaybe<Array<FileHistoryWhereInput>>;
  /** category_type field predicates */
  categoryType?: InputMaybe<Scalars['String']['input']>;
  categoryTypeContains?: InputMaybe<Scalars['String']['input']>;
  categoryTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  categoryTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  categoryTypeGT?: InputMaybe<Scalars['String']['input']>;
  categoryTypeGTE?: InputMaybe<Scalars['String']['input']>;
  categoryTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  categoryTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  categoryTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  categoryTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  categoryTypeLT?: InputMaybe<Scalars['String']['input']>;
  categoryTypeLTE?: InputMaybe<Scalars['String']['input']>;
  categoryTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  categoryTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  categoryTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** detected_content_type field predicates */
  detectedContentType?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeContains?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeGT?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeGTE?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  detectedContentTypeLT?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeLTE?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** detected_mime_type field predicates */
  detectedMimeType?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeContains?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeGT?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeGTE?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  detectedMimeTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  detectedMimeTypeLT?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeLTE?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  detectedMimeTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** md5_hash field predicates */
  md5Hash?: InputMaybe<Scalars['String']['input']>;
  md5HashContains?: InputMaybe<Scalars['String']['input']>;
  md5HashContainsFold?: InputMaybe<Scalars['String']['input']>;
  md5HashEqualFold?: InputMaybe<Scalars['String']['input']>;
  md5HashGT?: InputMaybe<Scalars['String']['input']>;
  md5HashGTE?: InputMaybe<Scalars['String']['input']>;
  md5HashHasPrefix?: InputMaybe<Scalars['String']['input']>;
  md5HashHasSuffix?: InputMaybe<Scalars['String']['input']>;
  md5HashIn?: InputMaybe<Array<Scalars['String']['input']>>;
  md5HashIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  md5HashLT?: InputMaybe<Scalars['String']['input']>;
  md5HashLTE?: InputMaybe<Scalars['String']['input']>;
  md5HashNEQ?: InputMaybe<Scalars['String']['input']>;
  md5HashNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  md5HashNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<FileHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<FileHistoryOpType>;
  operationIn?: InputMaybe<Array<FileHistoryOpType>>;
  operationNEQ?: InputMaybe<FileHistoryOpType>;
  operationNotIn?: InputMaybe<Array<FileHistoryOpType>>;
  or?: InputMaybe<Array<FileHistoryWhereInput>>;
  /** persisted_file_size field predicates */
  persistedFileSize?: InputMaybe<Scalars['Int']['input']>;
  persistedFileSizeGT?: InputMaybe<Scalars['Int']['input']>;
  persistedFileSizeGTE?: InputMaybe<Scalars['Int']['input']>;
  persistedFileSizeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  persistedFileSizeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  persistedFileSizeLT?: InputMaybe<Scalars['Int']['input']>;
  persistedFileSizeLTE?: InputMaybe<Scalars['Int']['input']>;
  persistedFileSizeNEQ?: InputMaybe<Scalars['Int']['input']>;
  persistedFileSizeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  persistedFileSizeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** provided_file_extension field predicates */
  providedFileExtension?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionContains?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionContainsFold?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionEqualFold?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionGT?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionGTE?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  providedFileExtensionLT?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionLTE?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionNEQ?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** provided_file_name field predicates */
  providedFileName?: InputMaybe<Scalars['String']['input']>;
  providedFileNameContains?: InputMaybe<Scalars['String']['input']>;
  providedFileNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  providedFileNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  providedFileNameGT?: InputMaybe<Scalars['String']['input']>;
  providedFileNameGTE?: InputMaybe<Scalars['String']['input']>;
  providedFileNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  providedFileNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  providedFileNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  providedFileNameLT?: InputMaybe<Scalars['String']['input']>;
  providedFileNameLTE?: InputMaybe<Scalars['String']['input']>;
  providedFileNameNEQ?: InputMaybe<Scalars['String']['input']>;
  providedFileNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** provided_file_size field predicates */
  providedFileSize?: InputMaybe<Scalars['Int']['input']>;
  providedFileSizeGT?: InputMaybe<Scalars['Int']['input']>;
  providedFileSizeGTE?: InputMaybe<Scalars['Int']['input']>;
  providedFileSizeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  providedFileSizeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  providedFileSizeLT?: InputMaybe<Scalars['Int']['input']>;
  providedFileSizeLTE?: InputMaybe<Scalars['Int']['input']>;
  providedFileSizeNEQ?: InputMaybe<Scalars['Int']['input']>;
  providedFileSizeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  providedFileSizeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** storage_path field predicates */
  storagePath?: InputMaybe<Scalars['String']['input']>;
  storagePathContains?: InputMaybe<Scalars['String']['input']>;
  storagePathContainsFold?: InputMaybe<Scalars['String']['input']>;
  storagePathEqualFold?: InputMaybe<Scalars['String']['input']>;
  storagePathGT?: InputMaybe<Scalars['String']['input']>;
  storagePathGTE?: InputMaybe<Scalars['String']['input']>;
  storagePathHasPrefix?: InputMaybe<Scalars['String']['input']>;
  storagePathHasSuffix?: InputMaybe<Scalars['String']['input']>;
  storagePathIn?: InputMaybe<Array<Scalars['String']['input']>>;
  storagePathIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  storagePathLT?: InputMaybe<Scalars['String']['input']>;
  storagePathLTE?: InputMaybe<Scalars['String']['input']>;
  storagePathNEQ?: InputMaybe<Scalars['String']['input']>;
  storagePathNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  storagePathNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** storage_scheme field predicates */
  storageScheme?: InputMaybe<Scalars['String']['input']>;
  storageSchemeContains?: InputMaybe<Scalars['String']['input']>;
  storageSchemeContainsFold?: InputMaybe<Scalars['String']['input']>;
  storageSchemeEqualFold?: InputMaybe<Scalars['String']['input']>;
  storageSchemeGT?: InputMaybe<Scalars['String']['input']>;
  storageSchemeGTE?: InputMaybe<Scalars['String']['input']>;
  storageSchemeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  storageSchemeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  storageSchemeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  storageSchemeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  storageSchemeLT?: InputMaybe<Scalars['String']['input']>;
  storageSchemeLTE?: InputMaybe<Scalars['String']['input']>;
  storageSchemeNEQ?: InputMaybe<Scalars['String']['input']>;
  storageSchemeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  storageSchemeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** storage_volume field predicates */
  storageVolume?: InputMaybe<Scalars['String']['input']>;
  storageVolumeContains?: InputMaybe<Scalars['String']['input']>;
  storageVolumeContainsFold?: InputMaybe<Scalars['String']['input']>;
  storageVolumeEqualFold?: InputMaybe<Scalars['String']['input']>;
  storageVolumeGT?: InputMaybe<Scalars['String']['input']>;
  storageVolumeGTE?: InputMaybe<Scalars['String']['input']>;
  storageVolumeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  storageVolumeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  storageVolumeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  storageVolumeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  storageVolumeLT?: InputMaybe<Scalars['String']['input']>;
  storageVolumeLTE?: InputMaybe<Scalars['String']['input']>;
  storageVolumeNEQ?: InputMaybe<Scalars['String']['input']>;
  storageVolumeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  storageVolumeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** store_key field predicates */
  storeKey?: InputMaybe<Scalars['String']['input']>;
  storeKeyContains?: InputMaybe<Scalars['String']['input']>;
  storeKeyContainsFold?: InputMaybe<Scalars['String']['input']>;
  storeKeyEqualFold?: InputMaybe<Scalars['String']['input']>;
  storeKeyGT?: InputMaybe<Scalars['String']['input']>;
  storeKeyGTE?: InputMaybe<Scalars['String']['input']>;
  storeKeyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  storeKeyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  storeKeyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  storeKeyIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  storeKeyLT?: InputMaybe<Scalars['String']['input']>;
  storeKeyLTE?: InputMaybe<Scalars['String']['input']>;
  storeKeyNEQ?: InputMaybe<Scalars['String']['input']>;
  storeKeyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  storeKeyNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** uri field predicates */
  uri?: InputMaybe<Scalars['String']['input']>;
  uriContains?: InputMaybe<Scalars['String']['input']>;
  uriContainsFold?: InputMaybe<Scalars['String']['input']>;
  uriEqualFold?: InputMaybe<Scalars['String']['input']>;
  uriGT?: InputMaybe<Scalars['String']['input']>;
  uriGTE?: InputMaybe<Scalars['String']['input']>;
  uriHasPrefix?: InputMaybe<Scalars['String']['input']>;
  uriHasSuffix?: InputMaybe<Scalars['String']['input']>;
  uriIn?: InputMaybe<Array<Scalars['String']['input']>>;
  uriIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  uriLT?: InputMaybe<Scalars['String']['input']>;
  uriLTE?: InputMaybe<Scalars['String']['input']>;
  uriNEQ?: InputMaybe<Scalars['String']['input']>;
  uriNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  uriNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * FileWhereInput is used for filtering File objects.
 * Input was generated by ent.
 */
export interface FileWhereInput {
  and?: InputMaybe<Array<FileWhereInput>>;
  /** category_type field predicates */
  categoryType?: InputMaybe<Scalars['String']['input']>;
  categoryTypeContains?: InputMaybe<Scalars['String']['input']>;
  categoryTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  categoryTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  categoryTypeGT?: InputMaybe<Scalars['String']['input']>;
  categoryTypeGTE?: InputMaybe<Scalars['String']['input']>;
  categoryTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  categoryTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  categoryTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  categoryTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  categoryTypeLT?: InputMaybe<Scalars['String']['input']>;
  categoryTypeLTE?: InputMaybe<Scalars['String']['input']>;
  categoryTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  categoryTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  categoryTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** detected_content_type field predicates */
  detectedContentType?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeContains?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeGT?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeGTE?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  detectedContentTypeLT?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeLTE?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  detectedContentTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** detected_mime_type field predicates */
  detectedMimeType?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeContains?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeGT?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeGTE?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  detectedMimeTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  detectedMimeTypeLT?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeLTE?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  detectedMimeTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  detectedMimeTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** contact edge predicates */
  hasContact?: InputMaybe<Scalars['Boolean']['input']>;
  hasContactWith?: InputMaybe<Array<ContactWhereInput>>;
  /** document_data edge predicates */
  hasDocumentData?: InputMaybe<Scalars['Boolean']['input']>;
  hasDocumentDataWith?: InputMaybe<Array<DocumentDataWhereInput>>;
  /** entity edge predicates */
  hasEntity?: InputMaybe<Scalars['Boolean']['input']>;
  hasEntityWith?: InputMaybe<Array<EntityWhereInput>>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** group edge predicates */
  hasGroup?: InputMaybe<Scalars['Boolean']['input']>;
  hasGroupWith?: InputMaybe<Array<GroupWhereInput>>;
  /** organization edge predicates */
  hasOrganization?: InputMaybe<Scalars['Boolean']['input']>;
  /** organization_setting edge predicates */
  hasOrganizationSetting?: InputMaybe<Scalars['Boolean']['input']>;
  hasOrganizationSettingWith?: InputMaybe<Array<OrganizationSettingWhereInput>>;
  hasOrganizationWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** program edge predicates */
  hasProgram?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgramWith?: InputMaybe<Array<ProgramWhereInput>>;
  /** template edge predicates */
  hasTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  hasTemplateWith?: InputMaybe<Array<TemplateWhereInput>>;
  /** user edge predicates */
  hasUser?: InputMaybe<Scalars['Boolean']['input']>;
  /** user_setting edge predicates */
  hasUserSetting?: InputMaybe<Scalars['Boolean']['input']>;
  hasUserSettingWith?: InputMaybe<Array<UserSettingWhereInput>>;
  hasUserWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** md5_hash field predicates */
  md5Hash?: InputMaybe<Scalars['String']['input']>;
  md5HashContains?: InputMaybe<Scalars['String']['input']>;
  md5HashContainsFold?: InputMaybe<Scalars['String']['input']>;
  md5HashEqualFold?: InputMaybe<Scalars['String']['input']>;
  md5HashGT?: InputMaybe<Scalars['String']['input']>;
  md5HashGTE?: InputMaybe<Scalars['String']['input']>;
  md5HashHasPrefix?: InputMaybe<Scalars['String']['input']>;
  md5HashHasSuffix?: InputMaybe<Scalars['String']['input']>;
  md5HashIn?: InputMaybe<Array<Scalars['String']['input']>>;
  md5HashIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  md5HashLT?: InputMaybe<Scalars['String']['input']>;
  md5HashLTE?: InputMaybe<Scalars['String']['input']>;
  md5HashNEQ?: InputMaybe<Scalars['String']['input']>;
  md5HashNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  md5HashNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<FileWhereInput>;
  or?: InputMaybe<Array<FileWhereInput>>;
  /** persisted_file_size field predicates */
  persistedFileSize?: InputMaybe<Scalars['Int']['input']>;
  persistedFileSizeGT?: InputMaybe<Scalars['Int']['input']>;
  persistedFileSizeGTE?: InputMaybe<Scalars['Int']['input']>;
  persistedFileSizeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  persistedFileSizeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  persistedFileSizeLT?: InputMaybe<Scalars['Int']['input']>;
  persistedFileSizeLTE?: InputMaybe<Scalars['Int']['input']>;
  persistedFileSizeNEQ?: InputMaybe<Scalars['Int']['input']>;
  persistedFileSizeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  persistedFileSizeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** provided_file_extension field predicates */
  providedFileExtension?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionContains?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionContainsFold?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionEqualFold?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionGT?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionGTE?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  providedFileExtensionLT?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionLTE?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionNEQ?: InputMaybe<Scalars['String']['input']>;
  providedFileExtensionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** provided_file_name field predicates */
  providedFileName?: InputMaybe<Scalars['String']['input']>;
  providedFileNameContains?: InputMaybe<Scalars['String']['input']>;
  providedFileNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  providedFileNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  providedFileNameGT?: InputMaybe<Scalars['String']['input']>;
  providedFileNameGTE?: InputMaybe<Scalars['String']['input']>;
  providedFileNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  providedFileNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  providedFileNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  providedFileNameLT?: InputMaybe<Scalars['String']['input']>;
  providedFileNameLTE?: InputMaybe<Scalars['String']['input']>;
  providedFileNameNEQ?: InputMaybe<Scalars['String']['input']>;
  providedFileNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** provided_file_size field predicates */
  providedFileSize?: InputMaybe<Scalars['Int']['input']>;
  providedFileSizeGT?: InputMaybe<Scalars['Int']['input']>;
  providedFileSizeGTE?: InputMaybe<Scalars['Int']['input']>;
  providedFileSizeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  providedFileSizeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  providedFileSizeLT?: InputMaybe<Scalars['Int']['input']>;
  providedFileSizeLTE?: InputMaybe<Scalars['Int']['input']>;
  providedFileSizeNEQ?: InputMaybe<Scalars['Int']['input']>;
  providedFileSizeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  providedFileSizeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** storage_path field predicates */
  storagePath?: InputMaybe<Scalars['String']['input']>;
  storagePathContains?: InputMaybe<Scalars['String']['input']>;
  storagePathContainsFold?: InputMaybe<Scalars['String']['input']>;
  storagePathEqualFold?: InputMaybe<Scalars['String']['input']>;
  storagePathGT?: InputMaybe<Scalars['String']['input']>;
  storagePathGTE?: InputMaybe<Scalars['String']['input']>;
  storagePathHasPrefix?: InputMaybe<Scalars['String']['input']>;
  storagePathHasSuffix?: InputMaybe<Scalars['String']['input']>;
  storagePathIn?: InputMaybe<Array<Scalars['String']['input']>>;
  storagePathIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  storagePathLT?: InputMaybe<Scalars['String']['input']>;
  storagePathLTE?: InputMaybe<Scalars['String']['input']>;
  storagePathNEQ?: InputMaybe<Scalars['String']['input']>;
  storagePathNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  storagePathNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** storage_scheme field predicates */
  storageScheme?: InputMaybe<Scalars['String']['input']>;
  storageSchemeContains?: InputMaybe<Scalars['String']['input']>;
  storageSchemeContainsFold?: InputMaybe<Scalars['String']['input']>;
  storageSchemeEqualFold?: InputMaybe<Scalars['String']['input']>;
  storageSchemeGT?: InputMaybe<Scalars['String']['input']>;
  storageSchemeGTE?: InputMaybe<Scalars['String']['input']>;
  storageSchemeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  storageSchemeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  storageSchemeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  storageSchemeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  storageSchemeLT?: InputMaybe<Scalars['String']['input']>;
  storageSchemeLTE?: InputMaybe<Scalars['String']['input']>;
  storageSchemeNEQ?: InputMaybe<Scalars['String']['input']>;
  storageSchemeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  storageSchemeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** storage_volume field predicates */
  storageVolume?: InputMaybe<Scalars['String']['input']>;
  storageVolumeContains?: InputMaybe<Scalars['String']['input']>;
  storageVolumeContainsFold?: InputMaybe<Scalars['String']['input']>;
  storageVolumeEqualFold?: InputMaybe<Scalars['String']['input']>;
  storageVolumeGT?: InputMaybe<Scalars['String']['input']>;
  storageVolumeGTE?: InputMaybe<Scalars['String']['input']>;
  storageVolumeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  storageVolumeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  storageVolumeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  storageVolumeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  storageVolumeLT?: InputMaybe<Scalars['String']['input']>;
  storageVolumeLTE?: InputMaybe<Scalars['String']['input']>;
  storageVolumeNEQ?: InputMaybe<Scalars['String']['input']>;
  storageVolumeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  storageVolumeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** store_key field predicates */
  storeKey?: InputMaybe<Scalars['String']['input']>;
  storeKeyContains?: InputMaybe<Scalars['String']['input']>;
  storeKeyContainsFold?: InputMaybe<Scalars['String']['input']>;
  storeKeyEqualFold?: InputMaybe<Scalars['String']['input']>;
  storeKeyGT?: InputMaybe<Scalars['String']['input']>;
  storeKeyGTE?: InputMaybe<Scalars['String']['input']>;
  storeKeyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  storeKeyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  storeKeyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  storeKeyIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  storeKeyLT?: InputMaybe<Scalars['String']['input']>;
  storeKeyLTE?: InputMaybe<Scalars['String']['input']>;
  storeKeyNEQ?: InputMaybe<Scalars['String']['input']>;
  storeKeyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  storeKeyNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** uri field predicates */
  uri?: InputMaybe<Scalars['String']['input']>;
  uriContains?: InputMaybe<Scalars['String']['input']>;
  uriContainsFold?: InputMaybe<Scalars['String']['input']>;
  uriEqualFold?: InputMaybe<Scalars['String']['input']>;
  uriGT?: InputMaybe<Scalars['String']['input']>;
  uriGTE?: InputMaybe<Scalars['String']['input']>;
  uriHasPrefix?: InputMaybe<Scalars['String']['input']>;
  uriHasSuffix?: InputMaybe<Scalars['String']['input']>;
  uriIn?: InputMaybe<Array<Scalars['String']['input']>>;
  uriIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  uriLT?: InputMaybe<Scalars['String']['input']>;
  uriLTE?: InputMaybe<Scalars['String']['input']>;
  uriNEQ?: InputMaybe<Scalars['String']['input']>;
  uriNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  uriNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** GroupHistoryOpType is enum for the field operation */
export enum GroupHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** Ordering options for GroupHistory connections */
export interface GroupHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order GroupHistories. */
  field: GroupHistoryOrderField;
}

/** Properties by which GroupHistory connections can be ordered. */
export enum GroupHistoryOrderField {
  display_name = 'display_name',
  name = 'name'
}

/**
 * GroupHistoryWhereInput is used for filtering GroupHistory objects.
 * Input was generated by ent.
 */
export interface GroupHistoryWhereInput {
  and?: InputMaybe<Array<GroupHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayNameContains?: InputMaybe<Scalars['String']['input']>;
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  displayNameGT?: InputMaybe<Scalars['String']['input']>;
  displayNameGTE?: InputMaybe<Scalars['String']['input']>;
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  displayNameLT?: InputMaybe<Scalars['String']['input']>;
  displayNameLTE?: InputMaybe<Scalars['String']['input']>;
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>;
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<GroupHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<GroupHistoryOpType>;
  operationIn?: InputMaybe<Array<GroupHistoryOpType>>;
  operationNEQ?: InputMaybe<GroupHistoryOpType>;
  operationNotIn?: InputMaybe<Array<GroupHistoryOpType>>;
  or?: InputMaybe<Array<GroupHistoryWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>;
  ownerIDContains?: InputMaybe<Scalars['String']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDGT?: InputMaybe<Scalars['String']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['String']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** GroupMembershipHistoryOpType is enum for the field operation */
export enum GroupMembershipHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** GroupMembershipHistoryRole is enum for the field role */
export enum GroupMembershipHistoryRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER'
}

/**
 * GroupMembershipHistoryWhereInput is used for filtering GroupMembershipHistory objects.
 * Input was generated by ent.
 */
export interface GroupMembershipHistoryWhereInput {
  and?: InputMaybe<Array<GroupMembershipHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** group_id field predicates */
  groupID?: InputMaybe<Scalars['String']['input']>;
  groupIDContains?: InputMaybe<Scalars['String']['input']>;
  groupIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  groupIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  groupIDGT?: InputMaybe<Scalars['String']['input']>;
  groupIDGTE?: InputMaybe<Scalars['String']['input']>;
  groupIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  groupIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  groupIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  groupIDLT?: InputMaybe<Scalars['String']['input']>;
  groupIDLTE?: InputMaybe<Scalars['String']['input']>;
  groupIDNEQ?: InputMaybe<Scalars['String']['input']>;
  groupIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<GroupMembershipHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<GroupMembershipHistoryOpType>;
  operationIn?: InputMaybe<Array<GroupMembershipHistoryOpType>>;
  operationNEQ?: InputMaybe<GroupMembershipHistoryOpType>;
  operationNotIn?: InputMaybe<Array<GroupMembershipHistoryOpType>>;
  or?: InputMaybe<Array<GroupMembershipHistoryWhereInput>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** role field predicates */
  role?: InputMaybe<GroupMembershipHistoryRole>;
  roleIn?: InputMaybe<Array<GroupMembershipHistoryRole>>;
  roleNEQ?: InputMaybe<GroupMembershipHistoryRole>;
  roleNotIn?: InputMaybe<Array<GroupMembershipHistoryRole>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** user_id field predicates */
  userID?: InputMaybe<Scalars['String']['input']>;
  userIDContains?: InputMaybe<Scalars['String']['input']>;
  userIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  userIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  userIDGT?: InputMaybe<Scalars['String']['input']>;
  userIDGTE?: InputMaybe<Scalars['String']['input']>;
  userIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  userIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  userIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  userIDLT?: InputMaybe<Scalars['String']['input']>;
  userIDLTE?: InputMaybe<Scalars['String']['input']>;
  userIDNEQ?: InputMaybe<Scalars['String']['input']>;
  userIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
}

/** GroupMembershipRole is enum for the field role */
export enum GroupMembershipRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER'
}

/**
 * GroupMembershipWhereInput is used for filtering GroupMembership objects.
 * Input was generated by ent.
 */
export interface GroupMembershipWhereInput {
  and?: InputMaybe<Array<GroupMembershipWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  groupID?: InputMaybe<Scalars['String']['input']>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<GroupMembershipWhereInput>;
  or?: InputMaybe<Array<GroupMembershipWhereInput>>;
  /** role field predicates */
  role?: InputMaybe<GroupMembershipRole>;
  roleIn?: InputMaybe<Array<GroupMembershipRole>>;
  roleNEQ?: InputMaybe<GroupMembershipRole>;
  roleNotIn?: InputMaybe<Array<GroupMembershipRole>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  userID?: InputMaybe<Scalars['String']['input']>;
}

/** Ordering options for Group connections */
export interface GroupOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order Groups. */
  field: GroupOrderField;
}

/** Properties by which Group connections can be ordered. */
export enum GroupOrderField {
  display_name = 'display_name',
  name = 'name'
}

/** GroupSettingHistoryJoinPolicy is enum for the field join_policy */
export enum GroupSettingHistoryJoinPolicy {
  APPLICATION_ONLY = 'APPLICATION_ONLY',
  INVITE_ONLY = 'INVITE_ONLY',
  INVITE_OR_APPLICATION = 'INVITE_OR_APPLICATION',
  OPEN = 'OPEN'
}

/** GroupSettingHistoryOpType is enum for the field operation */
export enum GroupSettingHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** GroupSettingHistoryVisibility is enum for the field visibility */
export enum GroupSettingHistoryVisibility {
  PRIVATE = 'PRIVATE',
  PUBLIC = 'PUBLIC'
}

/**
 * GroupSettingHistoryWhereInput is used for filtering GroupSettingHistory objects.
 * Input was generated by ent.
 */
export interface GroupSettingHistoryWhereInput {
  and?: InputMaybe<Array<GroupSettingHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** group_id field predicates */
  groupID?: InputMaybe<Scalars['String']['input']>;
  groupIDContains?: InputMaybe<Scalars['String']['input']>;
  groupIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  groupIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  groupIDGT?: InputMaybe<Scalars['String']['input']>;
  groupIDGTE?: InputMaybe<Scalars['String']['input']>;
  groupIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  groupIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  groupIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  groupIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  groupIDLT?: InputMaybe<Scalars['String']['input']>;
  groupIDLTE?: InputMaybe<Scalars['String']['input']>;
  groupIDNEQ?: InputMaybe<Scalars['String']['input']>;
  groupIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  groupIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** join_policy field predicates */
  joinPolicy?: InputMaybe<GroupSettingHistoryJoinPolicy>;
  joinPolicyIn?: InputMaybe<Array<GroupSettingHistoryJoinPolicy>>;
  joinPolicyNEQ?: InputMaybe<GroupSettingHistoryJoinPolicy>;
  joinPolicyNotIn?: InputMaybe<Array<GroupSettingHistoryJoinPolicy>>;
  not?: InputMaybe<GroupSettingHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<GroupSettingHistoryOpType>;
  operationIn?: InputMaybe<Array<GroupSettingHistoryOpType>>;
  operationNEQ?: InputMaybe<GroupSettingHistoryOpType>;
  operationNotIn?: InputMaybe<Array<GroupSettingHistoryOpType>>;
  or?: InputMaybe<Array<GroupSettingHistoryWhereInput>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** sync_to_github field predicates */
  syncToGithub?: InputMaybe<Scalars['Boolean']['input']>;
  syncToGithubIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  syncToGithubNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  syncToGithubNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** sync_to_slack field predicates */
  syncToSlack?: InputMaybe<Scalars['Boolean']['input']>;
  syncToSlackIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  syncToSlackNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  syncToSlackNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** visibility field predicates */
  visibility?: InputMaybe<GroupSettingHistoryVisibility>;
  visibilityIn?: InputMaybe<Array<GroupSettingHistoryVisibility>>;
  visibilityNEQ?: InputMaybe<GroupSettingHistoryVisibility>;
  visibilityNotIn?: InputMaybe<Array<GroupSettingHistoryVisibility>>;
}

/** GroupSettingJoinPolicy is enum for the field join_policy */
export enum GroupSettingJoinPolicy {
  APPLICATION_ONLY = 'APPLICATION_ONLY',
  INVITE_ONLY = 'INVITE_ONLY',
  INVITE_OR_APPLICATION = 'INVITE_OR_APPLICATION',
  OPEN = 'OPEN'
}

/** GroupSettingVisibility is enum for the field visibility */
export enum GroupSettingVisibility {
  PRIVATE = 'PRIVATE',
  PUBLIC = 'PUBLIC'
}

/**
 * GroupSettingWhereInput is used for filtering GroupSetting objects.
 * Input was generated by ent.
 */
export interface GroupSettingWhereInput {
  and?: InputMaybe<Array<GroupSettingWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** group_id field predicates */
  groupID?: InputMaybe<Scalars['ID']['input']>;
  groupIDContains?: InputMaybe<Scalars['ID']['input']>;
  groupIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  groupIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  groupIDGT?: InputMaybe<Scalars['ID']['input']>;
  groupIDGTE?: InputMaybe<Scalars['ID']['input']>;
  groupIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  groupIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  groupIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  groupIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  groupIDLT?: InputMaybe<Scalars['ID']['input']>;
  groupIDLTE?: InputMaybe<Scalars['ID']['input']>;
  groupIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  groupIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  groupIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** group edge predicates */
  hasGroup?: InputMaybe<Scalars['Boolean']['input']>;
  hasGroupWith?: InputMaybe<Array<GroupWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** join_policy field predicates */
  joinPolicy?: InputMaybe<GroupSettingJoinPolicy>;
  joinPolicyIn?: InputMaybe<Array<GroupSettingJoinPolicy>>;
  joinPolicyNEQ?: InputMaybe<GroupSettingJoinPolicy>;
  joinPolicyNotIn?: InputMaybe<Array<GroupSettingJoinPolicy>>;
  not?: InputMaybe<GroupSettingWhereInput>;
  or?: InputMaybe<Array<GroupSettingWhereInput>>;
  /** sync_to_github field predicates */
  syncToGithub?: InputMaybe<Scalars['Boolean']['input']>;
  syncToGithubIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  syncToGithubNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  syncToGithubNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** sync_to_slack field predicates */
  syncToSlack?: InputMaybe<Scalars['Boolean']['input']>;
  syncToSlackIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  syncToSlackNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  syncToSlackNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** visibility field predicates */
  visibility?: InputMaybe<GroupSettingVisibility>;
  visibilityIn?: InputMaybe<Array<GroupSettingVisibility>>;
  visibilityNEQ?: InputMaybe<GroupSettingVisibility>;
  visibilityNotIn?: InputMaybe<Array<GroupSettingVisibility>>;
}

/**
 * GroupWhereInput is used for filtering Group objects.
 * Input was generated by ent.
 */
export interface GroupWhereInput {
  and?: InputMaybe<Array<GroupWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayNameContains?: InputMaybe<Scalars['String']['input']>;
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  displayNameGT?: InputMaybe<Scalars['String']['input']>;
  displayNameGTE?: InputMaybe<Scalars['String']['input']>;
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  displayNameLT?: InputMaybe<Scalars['String']['input']>;
  displayNameLTE?: InputMaybe<Scalars['String']['input']>;
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>;
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** control_blocked_groups edge predicates */
  hasControlBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlBlockedGroupsWith?: InputMaybe<Array<ControlWhereInput>>;
  /** control_creators edge predicates */
  hasControlCreators?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlCreatorsWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** control_editors edge predicates */
  hasControlEditors?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlEditorsWith?: InputMaybe<Array<ControlWhereInput>>;
  /** control_objective_blocked_groups edge predicates */
  hasControlObjectiveBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlObjectiveBlockedGroupsWith?: InputMaybe<Array<ControlObjectiveWhereInput>>;
  /** control_objective_creators edge predicates */
  hasControlObjectiveCreators?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlObjectiveCreatorsWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** control_objective_editors edge predicates */
  hasControlObjectiveEditors?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlObjectiveEditorsWith?: InputMaybe<Array<ControlObjectiveWhereInput>>;
  /** control_objective_viewers edge predicates */
  hasControlObjectiveViewers?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlObjectiveViewersWith?: InputMaybe<Array<ControlObjectiveWhereInput>>;
  /** control_viewers edge predicates */
  hasControlViewers?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlViewersWith?: InputMaybe<Array<ControlWhereInput>>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>;
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>;
  /** group_creators edge predicates */
  hasGroupCreators?: InputMaybe<Scalars['Boolean']['input']>;
  hasGroupCreatorsWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** integrations edge predicates */
  hasIntegrations?: InputMaybe<Scalars['Boolean']['input']>;
  hasIntegrationsWith?: InputMaybe<Array<IntegrationWhereInput>>;
  /** internal_policy_blocked_groups edge predicates */
  hasInternalPolicyBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  hasInternalPolicyBlockedGroupsWith?: InputMaybe<Array<InternalPolicyWhereInput>>;
  /** internal_policy_creators edge predicates */
  hasInternalPolicyCreators?: InputMaybe<Scalars['Boolean']['input']>;
  hasInternalPolicyCreatorsWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** internal_policy_editors edge predicates */
  hasInternalPolicyEditors?: InputMaybe<Scalars['Boolean']['input']>;
  hasInternalPolicyEditorsWith?: InputMaybe<Array<InternalPolicyWhereInput>>;
  /** members edge predicates */
  hasMembers?: InputMaybe<Scalars['Boolean']['input']>;
  hasMembersWith?: InputMaybe<Array<GroupMembershipWhereInput>>;
  /** narrative_blocked_groups edge predicates */
  hasNarrativeBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  hasNarrativeBlockedGroupsWith?: InputMaybe<Array<NarrativeWhereInput>>;
  /** narrative_creators edge predicates */
  hasNarrativeCreators?: InputMaybe<Scalars['Boolean']['input']>;
  hasNarrativeCreatorsWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** narrative_editors edge predicates */
  hasNarrativeEditors?: InputMaybe<Scalars['Boolean']['input']>;
  hasNarrativeEditorsWith?: InputMaybe<Array<NarrativeWhereInput>>;
  /** narrative_viewers edge predicates */
  hasNarrativeViewers?: InputMaybe<Scalars['Boolean']['input']>;
  hasNarrativeViewersWith?: InputMaybe<Array<NarrativeWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** procedure_blocked_groups edge predicates */
  hasProcedureBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  hasProcedureBlockedGroupsWith?: InputMaybe<Array<ProcedureWhereInput>>;
  /** procedure_creators edge predicates */
  hasProcedureCreators?: InputMaybe<Scalars['Boolean']['input']>;
  hasProcedureCreatorsWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** procedure_editors edge predicates */
  hasProcedureEditors?: InputMaybe<Scalars['Boolean']['input']>;
  hasProcedureEditorsWith?: InputMaybe<Array<ProcedureWhereInput>>;
  /** program_blocked_groups edge predicates */
  hasProgramBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgramBlockedGroupsWith?: InputMaybe<Array<ProgramWhereInput>>;
  /** program_creators edge predicates */
  hasProgramCreators?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgramCreatorsWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** program_editors edge predicates */
  hasProgramEditors?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgramEditorsWith?: InputMaybe<Array<ProgramWhereInput>>;
  /** program_viewers edge predicates */
  hasProgramViewers?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgramViewersWith?: InputMaybe<Array<ProgramWhereInput>>;
  /** risk_blocked_groups edge predicates */
  hasRiskBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  hasRiskBlockedGroupsWith?: InputMaybe<Array<RiskWhereInput>>;
  /** risk_creators edge predicates */
  hasRiskCreators?: InputMaybe<Scalars['Boolean']['input']>;
  hasRiskCreatorsWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** risk_editors edge predicates */
  hasRiskEditors?: InputMaybe<Scalars['Boolean']['input']>;
  hasRiskEditorsWith?: InputMaybe<Array<RiskWhereInput>>;
  /** risk_viewers edge predicates */
  hasRiskViewers?: InputMaybe<Scalars['Boolean']['input']>;
  hasRiskViewersWith?: InputMaybe<Array<RiskWhereInput>>;
  /** setting edge predicates */
  hasSetting?: InputMaybe<Scalars['Boolean']['input']>;
  hasSettingWith?: InputMaybe<Array<GroupSettingWhereInput>>;
  /** tasks edge predicates */
  hasTasks?: InputMaybe<Scalars['Boolean']['input']>;
  hasTasksWith?: InputMaybe<Array<TaskWhereInput>>;
  /** template_creators edge predicates */
  hasTemplateCreators?: InputMaybe<Scalars['Boolean']['input']>;
  hasTemplateCreatorsWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** users edge predicates */
  hasUsers?: InputMaybe<Scalars['Boolean']['input']>;
  hasUsersWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<GroupWhereInput>;
  or?: InputMaybe<Array<GroupWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** HushHistoryOpType is enum for the field operation */
export enum HushHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** Ordering options for HushHistory connections */
export interface HushHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order HushHistories. */
  field: HushHistoryOrderField;
}

/** Properties by which HushHistory connections can be ordered. */
export enum HushHistoryOrderField {
  kind = 'kind',
  name = 'name'
}

/**
 * HushHistoryWhereInput is used for filtering HushHistory objects.
 * Input was generated by ent.
 */
export interface HushHistoryWhereInput {
  and?: InputMaybe<Array<HushHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** kind field predicates */
  kind?: InputMaybe<Scalars['String']['input']>;
  kindContains?: InputMaybe<Scalars['String']['input']>;
  kindContainsFold?: InputMaybe<Scalars['String']['input']>;
  kindEqualFold?: InputMaybe<Scalars['String']['input']>;
  kindGT?: InputMaybe<Scalars['String']['input']>;
  kindGTE?: InputMaybe<Scalars['String']['input']>;
  kindHasPrefix?: InputMaybe<Scalars['String']['input']>;
  kindHasSuffix?: InputMaybe<Scalars['String']['input']>;
  kindIn?: InputMaybe<Array<Scalars['String']['input']>>;
  kindIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  kindLT?: InputMaybe<Scalars['String']['input']>;
  kindLTE?: InputMaybe<Scalars['String']['input']>;
  kindNEQ?: InputMaybe<Scalars['String']['input']>;
  kindNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  kindNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<HushHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<HushHistoryOpType>;
  operationIn?: InputMaybe<Array<HushHistoryOpType>>;
  operationNEQ?: InputMaybe<HushHistoryOpType>;
  operationNotIn?: InputMaybe<Array<HushHistoryOpType>>;
  or?: InputMaybe<Array<HushHistoryWhereInput>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** secret_name field predicates */
  secretName?: InputMaybe<Scalars['String']['input']>;
  secretNameContains?: InputMaybe<Scalars['String']['input']>;
  secretNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  secretNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  secretNameGT?: InputMaybe<Scalars['String']['input']>;
  secretNameGTE?: InputMaybe<Scalars['String']['input']>;
  secretNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  secretNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  secretNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  secretNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  secretNameLT?: InputMaybe<Scalars['String']['input']>;
  secretNameLTE?: InputMaybe<Scalars['String']['input']>;
  secretNameNEQ?: InputMaybe<Scalars['String']['input']>;
  secretNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  secretNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** Ordering options for Hush connections */
export interface HushOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order Hushes. */
  field: HushOrderField;
}

/** Properties by which Hush connections can be ordered. */
export enum HushOrderField {
  kind = 'kind',
  name = 'name'
}

/**
 * HushWhereInput is used for filtering Hush objects.
 * Input was generated by ent.
 */
export interface HushWhereInput {
  and?: InputMaybe<Array<HushWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** integrations edge predicates */
  hasIntegrations?: InputMaybe<Scalars['Boolean']['input']>;
  hasIntegrationsWith?: InputMaybe<Array<IntegrationWhereInput>>;
  /** organization edge predicates */
  hasOrganization?: InputMaybe<Scalars['Boolean']['input']>;
  hasOrganizationWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** kind field predicates */
  kind?: InputMaybe<Scalars['String']['input']>;
  kindContains?: InputMaybe<Scalars['String']['input']>;
  kindContainsFold?: InputMaybe<Scalars['String']['input']>;
  kindEqualFold?: InputMaybe<Scalars['String']['input']>;
  kindGT?: InputMaybe<Scalars['String']['input']>;
  kindGTE?: InputMaybe<Scalars['String']['input']>;
  kindHasPrefix?: InputMaybe<Scalars['String']['input']>;
  kindHasSuffix?: InputMaybe<Scalars['String']['input']>;
  kindIn?: InputMaybe<Array<Scalars['String']['input']>>;
  kindIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  kindLT?: InputMaybe<Scalars['String']['input']>;
  kindLTE?: InputMaybe<Scalars['String']['input']>;
  kindNEQ?: InputMaybe<Scalars['String']['input']>;
  kindNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  kindNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<HushWhereInput>;
  or?: InputMaybe<Array<HushWhereInput>>;
  /** secret_name field predicates */
  secretName?: InputMaybe<Scalars['String']['input']>;
  secretNameContains?: InputMaybe<Scalars['String']['input']>;
  secretNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  secretNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  secretNameGT?: InputMaybe<Scalars['String']['input']>;
  secretNameGTE?: InputMaybe<Scalars['String']['input']>;
  secretNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  secretNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  secretNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  secretNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  secretNameLT?: InputMaybe<Scalars['String']['input']>;
  secretNameLTE?: InputMaybe<Scalars['String']['input']>;
  secretNameNEQ?: InputMaybe<Scalars['String']['input']>;
  secretNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  secretNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** IntegrationHistoryOpType is enum for the field operation */
export enum IntegrationHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** Ordering options for IntegrationHistory connections */
export interface IntegrationHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order IntegrationHistories. */
  field: IntegrationHistoryOrderField;
}

/** Properties by which IntegrationHistory connections can be ordered. */
export enum IntegrationHistoryOrderField {
  kind = 'kind',
  name = 'name'
}

/**
 * IntegrationHistoryWhereInput is used for filtering IntegrationHistory objects.
 * Input was generated by ent.
 */
export interface IntegrationHistoryWhereInput {
  and?: InputMaybe<Array<IntegrationHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** kind field predicates */
  kind?: InputMaybe<Scalars['String']['input']>;
  kindContains?: InputMaybe<Scalars['String']['input']>;
  kindContainsFold?: InputMaybe<Scalars['String']['input']>;
  kindEqualFold?: InputMaybe<Scalars['String']['input']>;
  kindGT?: InputMaybe<Scalars['String']['input']>;
  kindGTE?: InputMaybe<Scalars['String']['input']>;
  kindHasPrefix?: InputMaybe<Scalars['String']['input']>;
  kindHasSuffix?: InputMaybe<Scalars['String']['input']>;
  kindIn?: InputMaybe<Array<Scalars['String']['input']>>;
  kindIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  kindLT?: InputMaybe<Scalars['String']['input']>;
  kindLTE?: InputMaybe<Scalars['String']['input']>;
  kindNEQ?: InputMaybe<Scalars['String']['input']>;
  kindNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  kindNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<IntegrationHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<IntegrationHistoryOpType>;
  operationIn?: InputMaybe<Array<IntegrationHistoryOpType>>;
  operationNEQ?: InputMaybe<IntegrationHistoryOpType>;
  operationNotIn?: InputMaybe<Array<IntegrationHistoryOpType>>;
  or?: InputMaybe<Array<IntegrationHistoryWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>;
  ownerIDContains?: InputMaybe<Scalars['String']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDGT?: InputMaybe<Scalars['String']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['String']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** Ordering options for Integration connections */
export interface IntegrationOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order Integrations. */
  field: IntegrationOrderField;
}

/** Properties by which Integration connections can be ordered. */
export enum IntegrationOrderField {
  kind = 'kind',
  name = 'name'
}

/**
 * IntegrationWhereInput is used for filtering Integration objects.
 * Input was generated by ent.
 */
export interface IntegrationWhereInput {
  and?: InputMaybe<Array<IntegrationWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** secrets edge predicates */
  hasSecrets?: InputMaybe<Scalars['Boolean']['input']>;
  hasSecretsWith?: InputMaybe<Array<HushWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** kind field predicates */
  kind?: InputMaybe<Scalars['String']['input']>;
  kindContains?: InputMaybe<Scalars['String']['input']>;
  kindContainsFold?: InputMaybe<Scalars['String']['input']>;
  kindEqualFold?: InputMaybe<Scalars['String']['input']>;
  kindGT?: InputMaybe<Scalars['String']['input']>;
  kindGTE?: InputMaybe<Scalars['String']['input']>;
  kindHasPrefix?: InputMaybe<Scalars['String']['input']>;
  kindHasSuffix?: InputMaybe<Scalars['String']['input']>;
  kindIn?: InputMaybe<Array<Scalars['String']['input']>>;
  kindIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  kindLT?: InputMaybe<Scalars['String']['input']>;
  kindLTE?: InputMaybe<Scalars['String']['input']>;
  kindNEQ?: InputMaybe<Scalars['String']['input']>;
  kindNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  kindNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<IntegrationWhereInput>;
  or?: InputMaybe<Array<IntegrationWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** InternalPolicyHistoryOpType is enum for the field operation */
export enum InternalPolicyHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/**
 * InternalPolicyHistoryWhereInput is used for filtering InternalPolicyHistory objects.
 * Input was generated by ent.
 */
export interface InternalPolicyHistoryWhereInput {
  and?: InputMaybe<Array<InternalPolicyHistoryWhereInput>>;
  /** background field predicates */
  background?: InputMaybe<Scalars['String']['input']>;
  backgroundContains?: InputMaybe<Scalars['String']['input']>;
  backgroundContainsFold?: InputMaybe<Scalars['String']['input']>;
  backgroundEqualFold?: InputMaybe<Scalars['String']['input']>;
  backgroundGT?: InputMaybe<Scalars['String']['input']>;
  backgroundGTE?: InputMaybe<Scalars['String']['input']>;
  backgroundHasPrefix?: InputMaybe<Scalars['String']['input']>;
  backgroundHasSuffix?: InputMaybe<Scalars['String']['input']>;
  backgroundIn?: InputMaybe<Array<Scalars['String']['input']>>;
  backgroundIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  backgroundLT?: InputMaybe<Scalars['String']['input']>;
  backgroundLTE?: InputMaybe<Scalars['String']['input']>;
  backgroundNEQ?: InputMaybe<Scalars['String']['input']>;
  backgroundNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  backgroundNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<InternalPolicyHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<InternalPolicyHistoryOpType>;
  operationIn?: InputMaybe<Array<InternalPolicyHistoryOpType>>;
  operationNEQ?: InputMaybe<InternalPolicyHistoryOpType>;
  operationNotIn?: InputMaybe<Array<InternalPolicyHistoryOpType>>;
  or?: InputMaybe<Array<InternalPolicyHistoryWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>;
  ownerIDContains?: InputMaybe<Scalars['String']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDGT?: InputMaybe<Scalars['String']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['String']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** policy_type field predicates */
  policyType?: InputMaybe<Scalars['String']['input']>;
  policyTypeContains?: InputMaybe<Scalars['String']['input']>;
  policyTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  policyTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  policyTypeGT?: InputMaybe<Scalars['String']['input']>;
  policyTypeGTE?: InputMaybe<Scalars['String']['input']>;
  policyTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  policyTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  policyTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  policyTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  policyTypeLT?: InputMaybe<Scalars['String']['input']>;
  policyTypeLTE?: InputMaybe<Scalars['String']['input']>;
  policyTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  policyTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  policyTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** purpose_and_scope field predicates */
  purposeAndScope?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeContains?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeContainsFold?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeEqualFold?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeGT?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeGTE?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  purposeAndScopeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  purposeAndScopeLT?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeLTE?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeNEQ?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  purposeAndScopeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>;
  statusContains?: InputMaybe<Scalars['String']['input']>;
  statusContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusGT?: InputMaybe<Scalars['String']['input']>;
  statusGTE?: InputMaybe<Scalars['String']['input']>;
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusLT?: InputMaybe<Scalars['String']['input']>;
  statusLTE?: InputMaybe<Scalars['String']['input']>;
  statusNEQ?: InputMaybe<Scalars['String']['input']>;
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** version field predicates */
  version?: InputMaybe<Scalars['String']['input']>;
  versionContains?: InputMaybe<Scalars['String']['input']>;
  versionContainsFold?: InputMaybe<Scalars['String']['input']>;
  versionEqualFold?: InputMaybe<Scalars['String']['input']>;
  versionGT?: InputMaybe<Scalars['String']['input']>;
  versionGTE?: InputMaybe<Scalars['String']['input']>;
  versionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  versionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  versionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  versionLT?: InputMaybe<Scalars['String']['input']>;
  versionLTE?: InputMaybe<Scalars['String']['input']>;
  versionNEQ?: InputMaybe<Scalars['String']['input']>;
  versionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * InternalPolicyWhereInput is used for filtering InternalPolicy objects.
 * Input was generated by ent.
 */
export interface InternalPolicyWhereInput {
  and?: InputMaybe<Array<InternalPolicyWhereInput>>;
  /** background field predicates */
  background?: InputMaybe<Scalars['String']['input']>;
  backgroundContains?: InputMaybe<Scalars['String']['input']>;
  backgroundContainsFold?: InputMaybe<Scalars['String']['input']>;
  backgroundEqualFold?: InputMaybe<Scalars['String']['input']>;
  backgroundGT?: InputMaybe<Scalars['String']['input']>;
  backgroundGTE?: InputMaybe<Scalars['String']['input']>;
  backgroundHasPrefix?: InputMaybe<Scalars['String']['input']>;
  backgroundHasSuffix?: InputMaybe<Scalars['String']['input']>;
  backgroundIn?: InputMaybe<Array<Scalars['String']['input']>>;
  backgroundIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  backgroundLT?: InputMaybe<Scalars['String']['input']>;
  backgroundLTE?: InputMaybe<Scalars['String']['input']>;
  backgroundNEQ?: InputMaybe<Scalars['String']['input']>;
  backgroundNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  backgroundNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** blocked_groups edge predicates */
  hasBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  hasBlockedGroupsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** control_objectives edge predicates */
  hasControlObjectives?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlObjectivesWith?: InputMaybe<Array<ControlObjectiveWhereInput>>;
  /** controls edge predicates */
  hasControls?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlsWith?: InputMaybe<Array<ControlWhereInput>>;
  /** editors edge predicates */
  hasEditors?: InputMaybe<Scalars['Boolean']['input']>;
  hasEditorsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** narratives edge predicates */
  hasNarratives?: InputMaybe<Scalars['Boolean']['input']>;
  hasNarrativesWith?: InputMaybe<Array<NarrativeWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** procedures edge predicates */
  hasProcedures?: InputMaybe<Scalars['Boolean']['input']>;
  hasProceduresWith?: InputMaybe<Array<ProcedureWhereInput>>;
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>;
  /** tasks edge predicates */
  hasTasks?: InputMaybe<Scalars['Boolean']['input']>;
  hasTasksWith?: InputMaybe<Array<TaskWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<InternalPolicyWhereInput>;
  or?: InputMaybe<Array<InternalPolicyWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** policy_type field predicates */
  policyType?: InputMaybe<Scalars['String']['input']>;
  policyTypeContains?: InputMaybe<Scalars['String']['input']>;
  policyTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  policyTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  policyTypeGT?: InputMaybe<Scalars['String']['input']>;
  policyTypeGTE?: InputMaybe<Scalars['String']['input']>;
  policyTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  policyTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  policyTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  policyTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  policyTypeLT?: InputMaybe<Scalars['String']['input']>;
  policyTypeLTE?: InputMaybe<Scalars['String']['input']>;
  policyTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  policyTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  policyTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** purpose_and_scope field predicates */
  purposeAndScope?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeContains?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeContainsFold?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeEqualFold?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeGT?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeGTE?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  purposeAndScopeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  purposeAndScopeLT?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeLTE?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeNEQ?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  purposeAndScopeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>;
  statusContains?: InputMaybe<Scalars['String']['input']>;
  statusContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusGT?: InputMaybe<Scalars['String']['input']>;
  statusGTE?: InputMaybe<Scalars['String']['input']>;
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusLT?: InputMaybe<Scalars['String']['input']>;
  statusLTE?: InputMaybe<Scalars['String']['input']>;
  statusNEQ?: InputMaybe<Scalars['String']['input']>;
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** version field predicates */
  version?: InputMaybe<Scalars['String']['input']>;
  versionContains?: InputMaybe<Scalars['String']['input']>;
  versionContainsFold?: InputMaybe<Scalars['String']['input']>;
  versionEqualFold?: InputMaybe<Scalars['String']['input']>;
  versionGT?: InputMaybe<Scalars['String']['input']>;
  versionGTE?: InputMaybe<Scalars['String']['input']>;
  versionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  versionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  versionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  versionLT?: InputMaybe<Scalars['String']['input']>;
  versionLTE?: InputMaybe<Scalars['String']['input']>;
  versionNEQ?: InputMaybe<Scalars['String']['input']>;
  versionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** InviteInviteStatus is enum for the field status */
export enum InviteInviteStatus {
  APPROVAL_REQUIRED = 'APPROVAL_REQUIRED',
  INVITATION_ACCEPTED = 'INVITATION_ACCEPTED',
  INVITATION_EXPIRED = 'INVITATION_EXPIRED',
  INVITATION_SENT = 'INVITATION_SENT'
}

/** InviteRole is enum for the field role */
export enum InviteRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER'
}

/**
 * InviteWhereInput is used for filtering Invite objects.
 * Input was generated by ent.
 */
export interface InviteWhereInput {
  and?: InputMaybe<Array<InviteWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** expires field predicates */
  expires?: InputMaybe<Scalars['Time']['input']>;
  expiresGT?: InputMaybe<Scalars['Time']['input']>;
  expiresGTE?: InputMaybe<Scalars['Time']['input']>;
  expiresIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  expiresLT?: InputMaybe<Scalars['Time']['input']>;
  expiresLTE?: InputMaybe<Scalars['Time']['input']>;
  expiresNEQ?: InputMaybe<Scalars['Time']['input']>;
  expiresNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<InviteWhereInput>;
  or?: InputMaybe<Array<InviteWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** recipient field predicates */
  recipient?: InputMaybe<Scalars['String']['input']>;
  recipientContains?: InputMaybe<Scalars['String']['input']>;
  recipientContainsFold?: InputMaybe<Scalars['String']['input']>;
  recipientEqualFold?: InputMaybe<Scalars['String']['input']>;
  recipientGT?: InputMaybe<Scalars['String']['input']>;
  recipientGTE?: InputMaybe<Scalars['String']['input']>;
  recipientHasPrefix?: InputMaybe<Scalars['String']['input']>;
  recipientHasSuffix?: InputMaybe<Scalars['String']['input']>;
  recipientIn?: InputMaybe<Array<Scalars['String']['input']>>;
  recipientLT?: InputMaybe<Scalars['String']['input']>;
  recipientLTE?: InputMaybe<Scalars['String']['input']>;
  recipientNEQ?: InputMaybe<Scalars['String']['input']>;
  recipientNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** requestor_id field predicates */
  requestorID?: InputMaybe<Scalars['String']['input']>;
  requestorIDContains?: InputMaybe<Scalars['String']['input']>;
  requestorIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  requestorIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  requestorIDGT?: InputMaybe<Scalars['String']['input']>;
  requestorIDGTE?: InputMaybe<Scalars['String']['input']>;
  requestorIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  requestorIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  requestorIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  requestorIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  requestorIDLT?: InputMaybe<Scalars['String']['input']>;
  requestorIDLTE?: InputMaybe<Scalars['String']['input']>;
  requestorIDNEQ?: InputMaybe<Scalars['String']['input']>;
  requestorIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  requestorIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** role field predicates */
  role?: InputMaybe<InviteRole>;
  roleIn?: InputMaybe<Array<InviteRole>>;
  roleNEQ?: InputMaybe<InviteRole>;
  roleNotIn?: InputMaybe<Array<InviteRole>>;
  /** send_attempts field predicates */
  sendAttempts?: InputMaybe<Scalars['Int']['input']>;
  sendAttemptsGT?: InputMaybe<Scalars['Int']['input']>;
  sendAttemptsGTE?: InputMaybe<Scalars['Int']['input']>;
  sendAttemptsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  sendAttemptsLT?: InputMaybe<Scalars['Int']['input']>;
  sendAttemptsLTE?: InputMaybe<Scalars['Int']['input']>;
  sendAttemptsNEQ?: InputMaybe<Scalars['Int']['input']>;
  sendAttemptsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** status field predicates */
  status?: InputMaybe<InviteInviteStatus>;
  statusIn?: InputMaybe<Array<InviteInviteStatus>>;
  statusNEQ?: InputMaybe<InviteInviteStatus>;
  statusNotIn?: InputMaybe<Array<InviteInviteStatus>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** NarrativeHistoryOpType is enum for the field operation */
export enum NarrativeHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/**
 * NarrativeHistoryWhereInput is used for filtering NarrativeHistory objects.
 * Input was generated by ent.
 */
export interface NarrativeHistoryWhereInput {
  and?: InputMaybe<Array<NarrativeHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<NarrativeHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<NarrativeHistoryOpType>;
  operationIn?: InputMaybe<Array<NarrativeHistoryOpType>>;
  operationNEQ?: InputMaybe<NarrativeHistoryOpType>;
  operationNotIn?: InputMaybe<Array<NarrativeHistoryOpType>>;
  or?: InputMaybe<Array<NarrativeHistoryWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>;
  ownerIDContains?: InputMaybe<Scalars['String']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDGT?: InputMaybe<Scalars['String']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDLT?: InputMaybe<Scalars['String']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** satisfies field predicates */
  satisfies?: InputMaybe<Scalars['String']['input']>;
  satisfiesContains?: InputMaybe<Scalars['String']['input']>;
  satisfiesContainsFold?: InputMaybe<Scalars['String']['input']>;
  satisfiesEqualFold?: InputMaybe<Scalars['String']['input']>;
  satisfiesGT?: InputMaybe<Scalars['String']['input']>;
  satisfiesGTE?: InputMaybe<Scalars['String']['input']>;
  satisfiesHasPrefix?: InputMaybe<Scalars['String']['input']>;
  satisfiesHasSuffix?: InputMaybe<Scalars['String']['input']>;
  satisfiesIn?: InputMaybe<Array<Scalars['String']['input']>>;
  satisfiesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  satisfiesLT?: InputMaybe<Scalars['String']['input']>;
  satisfiesLTE?: InputMaybe<Scalars['String']['input']>;
  satisfiesNEQ?: InputMaybe<Scalars['String']['input']>;
  satisfiesNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  satisfiesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * NarrativeWhereInput is used for filtering Narrative objects.
 * Input was generated by ent.
 */
export interface NarrativeWhereInput {
  and?: InputMaybe<Array<NarrativeWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** blocked_groups edge predicates */
  hasBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  hasBlockedGroupsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** control edge predicates */
  hasControl?: InputMaybe<Scalars['Boolean']['input']>;
  /** control_objective edge predicates */
  hasControlObjective?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlObjectiveWith?: InputMaybe<Array<ControlObjectiveWhereInput>>;
  hasControlWith?: InputMaybe<Array<ControlWhereInput>>;
  /** editors edge predicates */
  hasEditors?: InputMaybe<Scalars['Boolean']['input']>;
  hasEditorsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** internal_policy edge predicates */
  hasInternalPolicy?: InputMaybe<Scalars['Boolean']['input']>;
  hasInternalPolicyWith?: InputMaybe<Array<InternalPolicyWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** procedure edge predicates */
  hasProcedure?: InputMaybe<Scalars['Boolean']['input']>;
  hasProcedureWith?: InputMaybe<Array<ProcedureWhereInput>>;
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>;
  /** viewers edge predicates */
  hasViewers?: InputMaybe<Scalars['Boolean']['input']>;
  hasViewersWith?: InputMaybe<Array<GroupWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<NarrativeWhereInput>;
  or?: InputMaybe<Array<NarrativeWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** satisfies field predicates */
  satisfies?: InputMaybe<Scalars['String']['input']>;
  satisfiesContains?: InputMaybe<Scalars['String']['input']>;
  satisfiesContainsFold?: InputMaybe<Scalars['String']['input']>;
  satisfiesEqualFold?: InputMaybe<Scalars['String']['input']>;
  satisfiesGT?: InputMaybe<Scalars['String']['input']>;
  satisfiesGTE?: InputMaybe<Scalars['String']['input']>;
  satisfiesHasPrefix?: InputMaybe<Scalars['String']['input']>;
  satisfiesHasSuffix?: InputMaybe<Scalars['String']['input']>;
  satisfiesIn?: InputMaybe<Array<Scalars['String']['input']>>;
  satisfiesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  satisfiesLT?: InputMaybe<Scalars['String']['input']>;
  satisfiesLTE?: InputMaybe<Scalars['String']['input']>;
  satisfiesNEQ?: InputMaybe<Scalars['String']['input']>;
  satisfiesNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  satisfiesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** NoteHistoryOpType is enum for the field operation */
export enum NoteHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/**
 * NoteHistoryWhereInput is used for filtering NoteHistory objects.
 * Input was generated by ent.
 */
export interface NoteHistoryWhereInput {
  and?: InputMaybe<Array<NoteHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<NoteHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<NoteHistoryOpType>;
  operationIn?: InputMaybe<Array<NoteHistoryOpType>>;
  operationNEQ?: InputMaybe<NoteHistoryOpType>;
  operationNotIn?: InputMaybe<Array<NoteHistoryOpType>>;
  or?: InputMaybe<Array<NoteHistoryWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>;
  ownerIDContains?: InputMaybe<Scalars['String']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDGT?: InputMaybe<Scalars['String']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['String']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** text field predicates */
  text?: InputMaybe<Scalars['String']['input']>;
  textContains?: InputMaybe<Scalars['String']['input']>;
  textContainsFold?: InputMaybe<Scalars['String']['input']>;
  textEqualFold?: InputMaybe<Scalars['String']['input']>;
  textGT?: InputMaybe<Scalars['String']['input']>;
  textGTE?: InputMaybe<Scalars['String']['input']>;
  textHasPrefix?: InputMaybe<Scalars['String']['input']>;
  textHasSuffix?: InputMaybe<Scalars['String']['input']>;
  textIn?: InputMaybe<Array<Scalars['String']['input']>>;
  textLT?: InputMaybe<Scalars['String']['input']>;
  textLTE?: InputMaybe<Scalars['String']['input']>;
  textNEQ?: InputMaybe<Scalars['String']['input']>;
  textNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * NoteWhereInput is used for filtering Note objects.
 * Input was generated by ent.
 */
export interface NoteWhereInput {
  and?: InputMaybe<Array<NoteWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** entity edge predicates */
  hasEntity?: InputMaybe<Scalars['Boolean']['input']>;
  hasEntityWith?: InputMaybe<Array<EntityWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** program edge predicates */
  hasProgram?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgramWith?: InputMaybe<Array<ProgramWhereInput>>;
  /** subcontrols edge predicates */
  hasSubcontrols?: InputMaybe<Scalars['Boolean']['input']>;
  hasSubcontrolsWith?: InputMaybe<Array<SubcontrolWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<NoteWhereInput>;
  or?: InputMaybe<Array<NoteWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** text field predicates */
  text?: InputMaybe<Scalars['String']['input']>;
  textContains?: InputMaybe<Scalars['String']['input']>;
  textContainsFold?: InputMaybe<Scalars['String']['input']>;
  textEqualFold?: InputMaybe<Scalars['String']['input']>;
  textGT?: InputMaybe<Scalars['String']['input']>;
  textGTE?: InputMaybe<Scalars['String']['input']>;
  textHasPrefix?: InputMaybe<Scalars['String']['input']>;
  textHasSuffix?: InputMaybe<Scalars['String']['input']>;
  textIn?: InputMaybe<Array<Scalars['String']['input']>>;
  textLT?: InputMaybe<Scalars['String']['input']>;
  textLTE?: InputMaybe<Scalars['String']['input']>;
  textNEQ?: InputMaybe<Scalars['String']['input']>;
  textNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** Possible directions in which to order a list of items when provided an `orderBy` argument. */
export enum OrderDirection {
  /** Specifies an ascending order for a given `orderBy` argument. */
  ASC = 'ASC',
  /** Specifies a descending order for a given `orderBy` argument. */
  DESC = 'DESC'
}

/** OrgMembershipHistoryOpType is enum for the field operation */
export enum OrgMembershipHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** OrgMembershipHistoryRole is enum for the field role */
export enum OrgMembershipHistoryRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER',
  OWNER = 'OWNER'
}

/**
 * OrgMembershipHistoryWhereInput is used for filtering OrgMembershipHistory objects.
 * Input was generated by ent.
 */
export interface OrgMembershipHistoryWhereInput {
  and?: InputMaybe<Array<OrgMembershipHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<OrgMembershipHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<OrgMembershipHistoryOpType>;
  operationIn?: InputMaybe<Array<OrgMembershipHistoryOpType>>;
  operationNEQ?: InputMaybe<OrgMembershipHistoryOpType>;
  operationNotIn?: InputMaybe<Array<OrgMembershipHistoryOpType>>;
  or?: InputMaybe<Array<OrgMembershipHistoryWhereInput>>;
  /** organization_id field predicates */
  organizationID?: InputMaybe<Scalars['String']['input']>;
  organizationIDContains?: InputMaybe<Scalars['String']['input']>;
  organizationIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  organizationIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  organizationIDGT?: InputMaybe<Scalars['String']['input']>;
  organizationIDGTE?: InputMaybe<Scalars['String']['input']>;
  organizationIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  organizationIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  organizationIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  organizationIDLT?: InputMaybe<Scalars['String']['input']>;
  organizationIDLTE?: InputMaybe<Scalars['String']['input']>;
  organizationIDNEQ?: InputMaybe<Scalars['String']['input']>;
  organizationIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** role field predicates */
  role?: InputMaybe<OrgMembershipHistoryRole>;
  roleIn?: InputMaybe<Array<OrgMembershipHistoryRole>>;
  roleNEQ?: InputMaybe<OrgMembershipHistoryRole>;
  roleNotIn?: InputMaybe<Array<OrgMembershipHistoryRole>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** user_id field predicates */
  userID?: InputMaybe<Scalars['String']['input']>;
  userIDContains?: InputMaybe<Scalars['String']['input']>;
  userIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  userIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  userIDGT?: InputMaybe<Scalars['String']['input']>;
  userIDGTE?: InputMaybe<Scalars['String']['input']>;
  userIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  userIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  userIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  userIDLT?: InputMaybe<Scalars['String']['input']>;
  userIDLTE?: InputMaybe<Scalars['String']['input']>;
  userIDNEQ?: InputMaybe<Scalars['String']['input']>;
  userIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
}

/** OrgMembershipRole is enum for the field role */
export enum OrgMembershipRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER',
  OWNER = 'OWNER'
}

/**
 * OrgMembershipWhereInput is used for filtering OrgMembership objects.
 * Input was generated by ent.
 */
export interface OrgMembershipWhereInput {
  and?: InputMaybe<Array<OrgMembershipWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<OrgMembershipWhereInput>;
  or?: InputMaybe<Array<OrgMembershipWhereInput>>;
  organizationID?: InputMaybe<Scalars['String']['input']>;
  /** role field predicates */
  role?: InputMaybe<OrgMembershipRole>;
  roleIn?: InputMaybe<Array<OrgMembershipRole>>;
  roleNEQ?: InputMaybe<OrgMembershipRole>;
  roleNotIn?: InputMaybe<Array<OrgMembershipRole>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  userID?: InputMaybe<Scalars['String']['input']>;
}

/** OrgSubscriptionHistoryOpType is enum for the field operation */
export enum OrgSubscriptionHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/**
 * OrgSubscriptionHistoryWhereInput is used for filtering OrgSubscriptionHistory objects.
 * Input was generated by ent.
 */
export interface OrgSubscriptionHistoryWhereInput {
  /** active field predicates */
  active?: InputMaybe<Scalars['Boolean']['input']>;
  activeNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<OrgSubscriptionHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** expires_at field predicates */
  expiresAt?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  expiresAtLT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtLTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<OrgSubscriptionHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<OrgSubscriptionHistoryOpType>;
  operationIn?: InputMaybe<Array<OrgSubscriptionHistoryOpType>>;
  operationNEQ?: InputMaybe<OrgSubscriptionHistoryOpType>;
  operationNotIn?: InputMaybe<Array<OrgSubscriptionHistoryOpType>>;
  or?: InputMaybe<Array<OrgSubscriptionHistoryWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>;
  ownerIDContains?: InputMaybe<Scalars['String']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDGT?: InputMaybe<Scalars['String']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['String']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** product_tier field predicates */
  productTier?: InputMaybe<Scalars['String']['input']>;
  productTierContains?: InputMaybe<Scalars['String']['input']>;
  productTierContainsFold?: InputMaybe<Scalars['String']['input']>;
  productTierEqualFold?: InputMaybe<Scalars['String']['input']>;
  productTierGT?: InputMaybe<Scalars['String']['input']>;
  productTierGTE?: InputMaybe<Scalars['String']['input']>;
  productTierHasPrefix?: InputMaybe<Scalars['String']['input']>;
  productTierHasSuffix?: InputMaybe<Scalars['String']['input']>;
  productTierIn?: InputMaybe<Array<Scalars['String']['input']>>;
  productTierIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  productTierLT?: InputMaybe<Scalars['String']['input']>;
  productTierLTE?: InputMaybe<Scalars['String']['input']>;
  productTierNEQ?: InputMaybe<Scalars['String']['input']>;
  productTierNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  productTierNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** stripe_customer_id field predicates */
  stripeCustomerID?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDContains?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDGT?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDGTE?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stripeCustomerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  stripeCustomerIDLT?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDLTE?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stripeCustomerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** stripe_product_tier_id field predicates */
  stripeProductTierID?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDContains?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDGT?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDGTE?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stripeProductTierIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  stripeProductTierIDLT?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDLTE?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDNEQ?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stripeProductTierIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** stripe_subscription_id field predicates */
  stripeSubscriptionID?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDContains?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDGT?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDGTE?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stripeSubscriptionIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  stripeSubscriptionIDLT?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDLTE?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDNEQ?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stripeSubscriptionIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** stripe_subscription_status field predicates */
  stripeSubscriptionStatus?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusContains?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusContainsFold?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusEqualFold?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusGT?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusGTE?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stripeSubscriptionStatusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  stripeSubscriptionStatusLT?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusLTE?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusNEQ?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stripeSubscriptionStatusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * OrgSubscriptionWhereInput is used for filtering OrgSubscription objects.
 * Input was generated by ent.
 */
export interface OrgSubscriptionWhereInput {
  /** active field predicates */
  active?: InputMaybe<Scalars['Boolean']['input']>;
  activeNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<OrgSubscriptionWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** expires_at field predicates */
  expiresAt?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  expiresAtLT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtLTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<OrgSubscriptionWhereInput>;
  or?: InputMaybe<Array<OrgSubscriptionWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** product_tier field predicates */
  productTier?: InputMaybe<Scalars['String']['input']>;
  productTierContains?: InputMaybe<Scalars['String']['input']>;
  productTierContainsFold?: InputMaybe<Scalars['String']['input']>;
  productTierEqualFold?: InputMaybe<Scalars['String']['input']>;
  productTierGT?: InputMaybe<Scalars['String']['input']>;
  productTierGTE?: InputMaybe<Scalars['String']['input']>;
  productTierHasPrefix?: InputMaybe<Scalars['String']['input']>;
  productTierHasSuffix?: InputMaybe<Scalars['String']['input']>;
  productTierIn?: InputMaybe<Array<Scalars['String']['input']>>;
  productTierIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  productTierLT?: InputMaybe<Scalars['String']['input']>;
  productTierLTE?: InputMaybe<Scalars['String']['input']>;
  productTierNEQ?: InputMaybe<Scalars['String']['input']>;
  productTierNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  productTierNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** stripe_customer_id field predicates */
  stripeCustomerID?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDContains?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDGT?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDGTE?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stripeCustomerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  stripeCustomerIDLT?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDLTE?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  stripeCustomerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stripeCustomerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** stripe_product_tier_id field predicates */
  stripeProductTierID?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDContains?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDGT?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDGTE?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stripeProductTierIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  stripeProductTierIDLT?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDLTE?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDNEQ?: InputMaybe<Scalars['String']['input']>;
  stripeProductTierIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stripeProductTierIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** stripe_subscription_id field predicates */
  stripeSubscriptionID?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDContains?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDGT?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDGTE?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stripeSubscriptionIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  stripeSubscriptionIDLT?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDLTE?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDNEQ?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stripeSubscriptionIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** stripe_subscription_status field predicates */
  stripeSubscriptionStatus?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusContains?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusContainsFold?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusEqualFold?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusGT?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusGTE?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stripeSubscriptionStatusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  stripeSubscriptionStatusLT?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusLTE?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusNEQ?: InputMaybe<Scalars['String']['input']>;
  stripeSubscriptionStatusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stripeSubscriptionStatusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** OrganizationHistoryOpType is enum for the field operation */
export enum OrganizationHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** Ordering options for OrganizationHistory connections */
export interface OrganizationHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order OrganizationHistories. */
  field: OrganizationHistoryOrderField;
}

/** Properties by which OrganizationHistory connections can be ordered. */
export enum OrganizationHistoryOrderField {
  display_name = 'display_name',
  name = 'name'
}

/**
 * OrganizationHistoryWhereInput is used for filtering OrganizationHistory objects.
 * Input was generated by ent.
 */
export interface OrganizationHistoryWhereInput {
  and?: InputMaybe<Array<OrganizationHistoryWhereInput>>;
  /** avatar_remote_url field predicates */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLContains?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLGT?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLGTE?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarRemoteURLIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  avatarRemoteURLLT?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLLTE?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLNEQ?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarRemoteURLNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayNameContains?: InputMaybe<Scalars['String']['input']>;
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  displayNameGT?: InputMaybe<Scalars['String']['input']>;
  displayNameGTE?: InputMaybe<Scalars['String']['input']>;
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  displayNameLT?: InputMaybe<Scalars['String']['input']>;
  displayNameLTE?: InputMaybe<Scalars['String']['input']>;
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>;
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<OrganizationHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<OrganizationHistoryOpType>;
  operationIn?: InputMaybe<Array<OrganizationHistoryOpType>>;
  operationNEQ?: InputMaybe<OrganizationHistoryOpType>;
  operationNotIn?: InputMaybe<Array<OrganizationHistoryOpType>>;
  or?: InputMaybe<Array<OrganizationHistoryWhereInput>>;
  /** parent_organization_id field predicates */
  parentOrganizationID?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDContains?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDGT?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDGTE?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  parentOrganizationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  parentOrganizationIDLT?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDLTE?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  parentOrganizationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** personal_org field predicates */
  personalOrg?: InputMaybe<Scalars['Boolean']['input']>;
  personalOrgIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  personalOrgNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  personalOrgNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** Ordering options for Organization connections */
export interface OrganizationOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order Organizations. */
  field: OrganizationOrderField;
}

/** Properties by which Organization connections can be ordered. */
export enum OrganizationOrderField {
  display_name = 'display_name',
  name = 'name'
}

/** OrganizationSettingHistoryOpType is enum for the field operation */
export enum OrganizationSettingHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** OrganizationSettingHistoryRegion is enum for the field geo_location */
export enum OrganizationSettingHistoryRegion {
  AMER = 'AMER',
  APAC = 'APAC',
  EMEA = 'EMEA'
}

/**
 * OrganizationSettingHistoryWhereInput is used for filtering OrganizationSettingHistory objects.
 * Input was generated by ent.
 */
export interface OrganizationSettingHistoryWhereInput {
  and?: InputMaybe<Array<OrganizationSettingHistoryWhereInput>>;
  /** billing_address field predicates */
  billingAddress?: InputMaybe<Scalars['String']['input']>;
  billingAddressContains?: InputMaybe<Scalars['String']['input']>;
  billingAddressContainsFold?: InputMaybe<Scalars['String']['input']>;
  billingAddressEqualFold?: InputMaybe<Scalars['String']['input']>;
  billingAddressGT?: InputMaybe<Scalars['String']['input']>;
  billingAddressGTE?: InputMaybe<Scalars['String']['input']>;
  billingAddressHasPrefix?: InputMaybe<Scalars['String']['input']>;
  billingAddressHasSuffix?: InputMaybe<Scalars['String']['input']>;
  billingAddressIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingAddressIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  billingAddressLT?: InputMaybe<Scalars['String']['input']>;
  billingAddressLTE?: InputMaybe<Scalars['String']['input']>;
  billingAddressNEQ?: InputMaybe<Scalars['String']['input']>;
  billingAddressNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingAddressNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** billing_contact field predicates */
  billingContact?: InputMaybe<Scalars['String']['input']>;
  billingContactContains?: InputMaybe<Scalars['String']['input']>;
  billingContactContainsFold?: InputMaybe<Scalars['String']['input']>;
  billingContactEqualFold?: InputMaybe<Scalars['String']['input']>;
  billingContactGT?: InputMaybe<Scalars['String']['input']>;
  billingContactGTE?: InputMaybe<Scalars['String']['input']>;
  billingContactHasPrefix?: InputMaybe<Scalars['String']['input']>;
  billingContactHasSuffix?: InputMaybe<Scalars['String']['input']>;
  billingContactIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingContactIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  billingContactLT?: InputMaybe<Scalars['String']['input']>;
  billingContactLTE?: InputMaybe<Scalars['String']['input']>;
  billingContactNEQ?: InputMaybe<Scalars['String']['input']>;
  billingContactNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingContactNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** billing_email field predicates */
  billingEmail?: InputMaybe<Scalars['String']['input']>;
  billingEmailContains?: InputMaybe<Scalars['String']['input']>;
  billingEmailContainsFold?: InputMaybe<Scalars['String']['input']>;
  billingEmailEqualFold?: InputMaybe<Scalars['String']['input']>;
  billingEmailGT?: InputMaybe<Scalars['String']['input']>;
  billingEmailGTE?: InputMaybe<Scalars['String']['input']>;
  billingEmailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  billingEmailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  billingEmailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingEmailIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  billingEmailLT?: InputMaybe<Scalars['String']['input']>;
  billingEmailLTE?: InputMaybe<Scalars['String']['input']>;
  billingEmailNEQ?: InputMaybe<Scalars['String']['input']>;
  billingEmailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingEmailNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** billing_phone field predicates */
  billingPhone?: InputMaybe<Scalars['String']['input']>;
  billingPhoneContains?: InputMaybe<Scalars['String']['input']>;
  billingPhoneContainsFold?: InputMaybe<Scalars['String']['input']>;
  billingPhoneEqualFold?: InputMaybe<Scalars['String']['input']>;
  billingPhoneGT?: InputMaybe<Scalars['String']['input']>;
  billingPhoneGTE?: InputMaybe<Scalars['String']['input']>;
  billingPhoneHasPrefix?: InputMaybe<Scalars['String']['input']>;
  billingPhoneHasSuffix?: InputMaybe<Scalars['String']['input']>;
  billingPhoneIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingPhoneIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  billingPhoneLT?: InputMaybe<Scalars['String']['input']>;
  billingPhoneLTE?: InputMaybe<Scalars['String']['input']>;
  billingPhoneNEQ?: InputMaybe<Scalars['String']['input']>;
  billingPhoneNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingPhoneNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** geo_location field predicates */
  geoLocation?: InputMaybe<OrganizationSettingHistoryRegion>;
  geoLocationIn?: InputMaybe<Array<OrganizationSettingHistoryRegion>>;
  geoLocationIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  geoLocationNEQ?: InputMaybe<OrganizationSettingHistoryRegion>;
  geoLocationNotIn?: InputMaybe<Array<OrganizationSettingHistoryRegion>>;
  geoLocationNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<OrganizationSettingHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<OrganizationSettingHistoryOpType>;
  operationIn?: InputMaybe<Array<OrganizationSettingHistoryOpType>>;
  operationNEQ?: InputMaybe<OrganizationSettingHistoryOpType>;
  operationNotIn?: InputMaybe<Array<OrganizationSettingHistoryOpType>>;
  or?: InputMaybe<Array<OrganizationSettingHistoryWhereInput>>;
  /** organization_id field predicates */
  organizationID?: InputMaybe<Scalars['String']['input']>;
  organizationIDContains?: InputMaybe<Scalars['String']['input']>;
  organizationIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  organizationIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  organizationIDGT?: InputMaybe<Scalars['String']['input']>;
  organizationIDGTE?: InputMaybe<Scalars['String']['input']>;
  organizationIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  organizationIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  organizationIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  organizationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  organizationIDLT?: InputMaybe<Scalars['String']['input']>;
  organizationIDLTE?: InputMaybe<Scalars['String']['input']>;
  organizationIDNEQ?: InputMaybe<Scalars['String']['input']>;
  organizationIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  organizationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** stripe_id field predicates */
  stripeID?: InputMaybe<Scalars['String']['input']>;
  stripeIDContains?: InputMaybe<Scalars['String']['input']>;
  stripeIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  stripeIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  stripeIDGT?: InputMaybe<Scalars['String']['input']>;
  stripeIDGTE?: InputMaybe<Scalars['String']['input']>;
  stripeIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  stripeIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  stripeIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stripeIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  stripeIDLT?: InputMaybe<Scalars['String']['input']>;
  stripeIDLTE?: InputMaybe<Scalars['String']['input']>;
  stripeIDNEQ?: InputMaybe<Scalars['String']['input']>;
  stripeIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stripeIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** tax_identifier field predicates */
  taxIdentifier?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierContains?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierContainsFold?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierEqualFold?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierGT?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierGTE?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierHasPrefix?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierHasSuffix?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierIn?: InputMaybe<Array<Scalars['String']['input']>>;
  taxIdentifierIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  taxIdentifierLT?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierLTE?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierNEQ?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  taxIdentifierNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** OrganizationSettingRegion is enum for the field geo_location */
export enum OrganizationSettingRegion {
  AMER = 'AMER',
  APAC = 'APAC',
  EMEA = 'EMEA'
}

/**
 * OrganizationSettingWhereInput is used for filtering OrganizationSetting objects.
 * Input was generated by ent.
 */
export interface OrganizationSettingWhereInput {
  and?: InputMaybe<Array<OrganizationSettingWhereInput>>;
  /** billing_address field predicates */
  billingAddress?: InputMaybe<Scalars['String']['input']>;
  billingAddressContains?: InputMaybe<Scalars['String']['input']>;
  billingAddressContainsFold?: InputMaybe<Scalars['String']['input']>;
  billingAddressEqualFold?: InputMaybe<Scalars['String']['input']>;
  billingAddressGT?: InputMaybe<Scalars['String']['input']>;
  billingAddressGTE?: InputMaybe<Scalars['String']['input']>;
  billingAddressHasPrefix?: InputMaybe<Scalars['String']['input']>;
  billingAddressHasSuffix?: InputMaybe<Scalars['String']['input']>;
  billingAddressIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingAddressIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  billingAddressLT?: InputMaybe<Scalars['String']['input']>;
  billingAddressLTE?: InputMaybe<Scalars['String']['input']>;
  billingAddressNEQ?: InputMaybe<Scalars['String']['input']>;
  billingAddressNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingAddressNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** billing_contact field predicates */
  billingContact?: InputMaybe<Scalars['String']['input']>;
  billingContactContains?: InputMaybe<Scalars['String']['input']>;
  billingContactContainsFold?: InputMaybe<Scalars['String']['input']>;
  billingContactEqualFold?: InputMaybe<Scalars['String']['input']>;
  billingContactGT?: InputMaybe<Scalars['String']['input']>;
  billingContactGTE?: InputMaybe<Scalars['String']['input']>;
  billingContactHasPrefix?: InputMaybe<Scalars['String']['input']>;
  billingContactHasSuffix?: InputMaybe<Scalars['String']['input']>;
  billingContactIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingContactIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  billingContactLT?: InputMaybe<Scalars['String']['input']>;
  billingContactLTE?: InputMaybe<Scalars['String']['input']>;
  billingContactNEQ?: InputMaybe<Scalars['String']['input']>;
  billingContactNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingContactNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** billing_email field predicates */
  billingEmail?: InputMaybe<Scalars['String']['input']>;
  billingEmailContains?: InputMaybe<Scalars['String']['input']>;
  billingEmailContainsFold?: InputMaybe<Scalars['String']['input']>;
  billingEmailEqualFold?: InputMaybe<Scalars['String']['input']>;
  billingEmailGT?: InputMaybe<Scalars['String']['input']>;
  billingEmailGTE?: InputMaybe<Scalars['String']['input']>;
  billingEmailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  billingEmailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  billingEmailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingEmailIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  billingEmailLT?: InputMaybe<Scalars['String']['input']>;
  billingEmailLTE?: InputMaybe<Scalars['String']['input']>;
  billingEmailNEQ?: InputMaybe<Scalars['String']['input']>;
  billingEmailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingEmailNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** billing_phone field predicates */
  billingPhone?: InputMaybe<Scalars['String']['input']>;
  billingPhoneContains?: InputMaybe<Scalars['String']['input']>;
  billingPhoneContainsFold?: InputMaybe<Scalars['String']['input']>;
  billingPhoneEqualFold?: InputMaybe<Scalars['String']['input']>;
  billingPhoneGT?: InputMaybe<Scalars['String']['input']>;
  billingPhoneGTE?: InputMaybe<Scalars['String']['input']>;
  billingPhoneHasPrefix?: InputMaybe<Scalars['String']['input']>;
  billingPhoneHasSuffix?: InputMaybe<Scalars['String']['input']>;
  billingPhoneIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingPhoneIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  billingPhoneLT?: InputMaybe<Scalars['String']['input']>;
  billingPhoneLTE?: InputMaybe<Scalars['String']['input']>;
  billingPhoneNEQ?: InputMaybe<Scalars['String']['input']>;
  billingPhoneNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  billingPhoneNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** geo_location field predicates */
  geoLocation?: InputMaybe<OrganizationSettingRegion>;
  geoLocationIn?: InputMaybe<Array<OrganizationSettingRegion>>;
  geoLocationIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  geoLocationNEQ?: InputMaybe<OrganizationSettingRegion>;
  geoLocationNotIn?: InputMaybe<Array<OrganizationSettingRegion>>;
  geoLocationNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>;
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>;
  /** organization edge predicates */
  hasOrganization?: InputMaybe<Scalars['Boolean']['input']>;
  hasOrganizationWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<OrganizationSettingWhereInput>;
  or?: InputMaybe<Array<OrganizationSettingWhereInput>>;
  /** organization_id field predicates */
  organizationID?: InputMaybe<Scalars['ID']['input']>;
  organizationIDContains?: InputMaybe<Scalars['ID']['input']>;
  organizationIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  organizationIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  organizationIDGT?: InputMaybe<Scalars['ID']['input']>;
  organizationIDGTE?: InputMaybe<Scalars['ID']['input']>;
  organizationIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  organizationIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  organizationIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  organizationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  organizationIDLT?: InputMaybe<Scalars['ID']['input']>;
  organizationIDLTE?: InputMaybe<Scalars['ID']['input']>;
  organizationIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  organizationIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  organizationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** stripe_id field predicates */
  stripeID?: InputMaybe<Scalars['String']['input']>;
  stripeIDContains?: InputMaybe<Scalars['String']['input']>;
  stripeIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  stripeIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  stripeIDGT?: InputMaybe<Scalars['String']['input']>;
  stripeIDGTE?: InputMaybe<Scalars['String']['input']>;
  stripeIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  stripeIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  stripeIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stripeIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  stripeIDLT?: InputMaybe<Scalars['String']['input']>;
  stripeIDLTE?: InputMaybe<Scalars['String']['input']>;
  stripeIDNEQ?: InputMaybe<Scalars['String']['input']>;
  stripeIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stripeIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** tax_identifier field predicates */
  taxIdentifier?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierContains?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierContainsFold?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierEqualFold?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierGT?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierGTE?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierHasPrefix?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierHasSuffix?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierIn?: InputMaybe<Array<Scalars['String']['input']>>;
  taxIdentifierIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  taxIdentifierLT?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierLTE?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierNEQ?: InputMaybe<Scalars['String']['input']>;
  taxIdentifierNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  taxIdentifierNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * OrganizationWhereInput is used for filtering Organization objects.
 * Input was generated by ent.
 */
export interface OrganizationWhereInput {
  and?: InputMaybe<Array<OrganizationWhereInput>>;
  /** avatar_remote_url field predicates */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLContains?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLGT?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLGTE?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarRemoteURLIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  avatarRemoteURLLT?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLLTE?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLNEQ?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarRemoteURLNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayNameContains?: InputMaybe<Scalars['String']['input']>;
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  displayNameGT?: InputMaybe<Scalars['String']['input']>;
  displayNameGTE?: InputMaybe<Scalars['String']['input']>;
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  displayNameLT?: InputMaybe<Scalars['String']['input']>;
  displayNameLTE?: InputMaybe<Scalars['String']['input']>;
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>;
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** api_tokens edge predicates */
  hasAPITokens?: InputMaybe<Scalars['Boolean']['input']>;
  hasAPITokensWith?: InputMaybe<Array<ApiTokenWhereInput>>;
  /** children edge predicates */
  hasChildren?: InputMaybe<Scalars['Boolean']['input']>;
  hasChildrenWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** contacts edge predicates */
  hasContacts?: InputMaybe<Scalars['Boolean']['input']>;
  hasContactsWith?: InputMaybe<Array<ContactWhereInput>>;
  /** control_creators edge predicates */
  hasControlCreators?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlCreatorsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** control_objective_creators edge predicates */
  hasControlObjectiveCreators?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlObjectiveCreatorsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** control_objectives edge predicates */
  hasControlObjectives?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlObjectivesWith?: InputMaybe<Array<ControlObjectiveWhereInput>>;
  /** controls edge predicates */
  hasControls?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlsWith?: InputMaybe<Array<ControlWhereInput>>;
  /** document_data edge predicates */
  hasDocumentData?: InputMaybe<Scalars['Boolean']['input']>;
  hasDocumentDataWith?: InputMaybe<Array<DocumentDataWhereInput>>;
  /** entities edge predicates */
  hasEntities?: InputMaybe<Scalars['Boolean']['input']>;
  hasEntitiesWith?: InputMaybe<Array<EntityWhereInput>>;
  /** entity_types edge predicates */
  hasEntityTypes?: InputMaybe<Scalars['Boolean']['input']>;
  hasEntityTypesWith?: InputMaybe<Array<EntityTypeWhereInput>>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>;
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>;
  /** group_creators edge predicates */
  hasGroupCreators?: InputMaybe<Scalars['Boolean']['input']>;
  hasGroupCreatorsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** groups edge predicates */
  hasGroups?: InputMaybe<Scalars['Boolean']['input']>;
  hasGroupsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** integrations edge predicates */
  hasIntegrations?: InputMaybe<Scalars['Boolean']['input']>;
  hasIntegrationsWith?: InputMaybe<Array<IntegrationWhereInput>>;
  /** internal_policies edge predicates */
  hasInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>;
  hasInternalPoliciesWith?: InputMaybe<Array<InternalPolicyWhereInput>>;
  /** internal_policy_creators edge predicates */
  hasInternalPolicyCreators?: InputMaybe<Scalars['Boolean']['input']>;
  hasInternalPolicyCreatorsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** invites edge predicates */
  hasInvites?: InputMaybe<Scalars['Boolean']['input']>;
  hasInvitesWith?: InputMaybe<Array<InviteWhereInput>>;
  /** members edge predicates */
  hasMembers?: InputMaybe<Scalars['Boolean']['input']>;
  hasMembersWith?: InputMaybe<Array<OrgMembershipWhereInput>>;
  /** narrative_creators edge predicates */
  hasNarrativeCreators?: InputMaybe<Scalars['Boolean']['input']>;
  hasNarrativeCreatorsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** narratives edge predicates */
  hasNarratives?: InputMaybe<Scalars['Boolean']['input']>;
  hasNarrativesWith?: InputMaybe<Array<NarrativeWhereInput>>;
  /** notes edge predicates */
  hasNotes?: InputMaybe<Scalars['Boolean']['input']>;
  hasNotesWith?: InputMaybe<Array<NoteWhereInput>>;
  /** org_subscriptions edge predicates */
  hasOrgSubscriptions?: InputMaybe<Scalars['Boolean']['input']>;
  hasOrgSubscriptionsWith?: InputMaybe<Array<OrgSubscriptionWhereInput>>;
  /** parent edge predicates */
  hasParent?: InputMaybe<Scalars['Boolean']['input']>;
  hasParentWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** personal_access_tokens edge predicates */
  hasPersonalAccessTokens?: InputMaybe<Scalars['Boolean']['input']>;
  hasPersonalAccessTokensWith?: InputMaybe<Array<PersonalAccessTokenWhereInput>>;
  /** procedure_creators edge predicates */
  hasProcedureCreators?: InputMaybe<Scalars['Boolean']['input']>;
  hasProcedureCreatorsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** procedures edge predicates */
  hasProcedures?: InputMaybe<Scalars['Boolean']['input']>;
  hasProceduresWith?: InputMaybe<Array<ProcedureWhereInput>>;
  /** program_creators edge predicates */
  hasProgramCreators?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgramCreatorsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>;
  /** risk_creators edge predicates */
  hasRiskCreators?: InputMaybe<Scalars['Boolean']['input']>;
  hasRiskCreatorsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** risks edge predicates */
  hasRisks?: InputMaybe<Scalars['Boolean']['input']>;
  hasRisksWith?: InputMaybe<Array<RiskWhereInput>>;
  /** secrets edge predicates */
  hasSecrets?: InputMaybe<Scalars['Boolean']['input']>;
  hasSecretsWith?: InputMaybe<Array<HushWhereInput>>;
  /** setting edge predicates */
  hasSetting?: InputMaybe<Scalars['Boolean']['input']>;
  hasSettingWith?: InputMaybe<Array<OrganizationSettingWhereInput>>;
  /** subcontrols edge predicates */
  hasSubcontrols?: InputMaybe<Scalars['Boolean']['input']>;
  hasSubcontrolsWith?: InputMaybe<Array<SubcontrolWhereInput>>;
  /** subscribers edge predicates */
  hasSubscribers?: InputMaybe<Scalars['Boolean']['input']>;
  hasSubscribersWith?: InputMaybe<Array<SubscriberWhereInput>>;
  /** tasks edge predicates */
  hasTasks?: InputMaybe<Scalars['Boolean']['input']>;
  hasTasksWith?: InputMaybe<Array<TaskWhereInput>>;
  /** template_creators edge predicates */
  hasTemplateCreators?: InputMaybe<Scalars['Boolean']['input']>;
  hasTemplateCreatorsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** templates edge predicates */
  hasTemplates?: InputMaybe<Scalars['Boolean']['input']>;
  hasTemplatesWith?: InputMaybe<Array<TemplateWhereInput>>;
  /** users edge predicates */
  hasUsers?: InputMaybe<Scalars['Boolean']['input']>;
  hasUsersWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<OrganizationWhereInput>;
  or?: InputMaybe<Array<OrganizationWhereInput>>;
  /** parent_organization_id field predicates */
  parentOrganizationID?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDContains?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDGT?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDGTE?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  parentOrganizationIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  parentOrganizationIDLT?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDLTE?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  parentOrganizationIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  parentOrganizationIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** personal_org field predicates */
  personalOrg?: InputMaybe<Scalars['Boolean']['input']>;
  personalOrgIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  personalOrgNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  personalOrgNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * PersonalAccessTokenWhereInput is used for filtering PersonalAccessToken objects.
 * Input was generated by ent.
 */
export interface PersonalAccessTokenWhereInput {
  and?: InputMaybe<Array<PersonalAccessTokenWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** expires_at field predicates */
  expiresAt?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  expiresAtLT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtLTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** organizations edge predicates */
  hasOrganizations?: InputMaybe<Scalars['Boolean']['input']>;
  hasOrganizationsWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** last_used_at field predicates */
  lastUsedAt?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtGT?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  lastUsedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  lastUsedAtLT?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  lastUsedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  lastUsedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<PersonalAccessTokenWhereInput>;
  or?: InputMaybe<Array<PersonalAccessTokenWhereInput>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** ProcedureHistoryOpType is enum for the field operation */
export enum ProcedureHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/**
 * ProcedureHistoryWhereInput is used for filtering ProcedureHistory objects.
 * Input was generated by ent.
 */
export interface ProcedureHistoryWhereInput {
  and?: InputMaybe<Array<ProcedureHistoryWhereInput>>;
  /** background field predicates */
  background?: InputMaybe<Scalars['String']['input']>;
  backgroundContains?: InputMaybe<Scalars['String']['input']>;
  backgroundContainsFold?: InputMaybe<Scalars['String']['input']>;
  backgroundEqualFold?: InputMaybe<Scalars['String']['input']>;
  backgroundGT?: InputMaybe<Scalars['String']['input']>;
  backgroundGTE?: InputMaybe<Scalars['String']['input']>;
  backgroundHasPrefix?: InputMaybe<Scalars['String']['input']>;
  backgroundHasSuffix?: InputMaybe<Scalars['String']['input']>;
  backgroundIn?: InputMaybe<Array<Scalars['String']['input']>>;
  backgroundIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  backgroundLT?: InputMaybe<Scalars['String']['input']>;
  backgroundLTE?: InputMaybe<Scalars['String']['input']>;
  backgroundNEQ?: InputMaybe<Scalars['String']['input']>;
  backgroundNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  backgroundNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<ProcedureHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<ProcedureHistoryOpType>;
  operationIn?: InputMaybe<Array<ProcedureHistoryOpType>>;
  operationNEQ?: InputMaybe<ProcedureHistoryOpType>;
  operationNotIn?: InputMaybe<Array<ProcedureHistoryOpType>>;
  or?: InputMaybe<Array<ProcedureHistoryWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>;
  ownerIDContains?: InputMaybe<Scalars['String']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDGT?: InputMaybe<Scalars['String']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['String']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** procedure_type field predicates */
  procedureType?: InputMaybe<Scalars['String']['input']>;
  procedureTypeContains?: InputMaybe<Scalars['String']['input']>;
  procedureTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  procedureTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  procedureTypeGT?: InputMaybe<Scalars['String']['input']>;
  procedureTypeGTE?: InputMaybe<Scalars['String']['input']>;
  procedureTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  procedureTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  procedureTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  procedureTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  procedureTypeLT?: InputMaybe<Scalars['String']['input']>;
  procedureTypeLTE?: InputMaybe<Scalars['String']['input']>;
  procedureTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  procedureTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  procedureTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** purpose_and_scope field predicates */
  purposeAndScope?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeContains?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeContainsFold?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeEqualFold?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeGT?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeGTE?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  purposeAndScopeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  purposeAndScopeLT?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeLTE?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeNEQ?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  purposeAndScopeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** satisfies field predicates */
  satisfies?: InputMaybe<Scalars['String']['input']>;
  satisfiesContains?: InputMaybe<Scalars['String']['input']>;
  satisfiesContainsFold?: InputMaybe<Scalars['String']['input']>;
  satisfiesEqualFold?: InputMaybe<Scalars['String']['input']>;
  satisfiesGT?: InputMaybe<Scalars['String']['input']>;
  satisfiesGTE?: InputMaybe<Scalars['String']['input']>;
  satisfiesHasPrefix?: InputMaybe<Scalars['String']['input']>;
  satisfiesHasSuffix?: InputMaybe<Scalars['String']['input']>;
  satisfiesIn?: InputMaybe<Array<Scalars['String']['input']>>;
  satisfiesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  satisfiesLT?: InputMaybe<Scalars['String']['input']>;
  satisfiesLTE?: InputMaybe<Scalars['String']['input']>;
  satisfiesNEQ?: InputMaybe<Scalars['String']['input']>;
  satisfiesNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  satisfiesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>;
  statusContains?: InputMaybe<Scalars['String']['input']>;
  statusContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusGT?: InputMaybe<Scalars['String']['input']>;
  statusGTE?: InputMaybe<Scalars['String']['input']>;
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusLT?: InputMaybe<Scalars['String']['input']>;
  statusLTE?: InputMaybe<Scalars['String']['input']>;
  statusNEQ?: InputMaybe<Scalars['String']['input']>;
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** version field predicates */
  version?: InputMaybe<Scalars['String']['input']>;
  versionContains?: InputMaybe<Scalars['String']['input']>;
  versionContainsFold?: InputMaybe<Scalars['String']['input']>;
  versionEqualFold?: InputMaybe<Scalars['String']['input']>;
  versionGT?: InputMaybe<Scalars['String']['input']>;
  versionGTE?: InputMaybe<Scalars['String']['input']>;
  versionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  versionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  versionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  versionLT?: InputMaybe<Scalars['String']['input']>;
  versionLTE?: InputMaybe<Scalars['String']['input']>;
  versionNEQ?: InputMaybe<Scalars['String']['input']>;
  versionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * ProcedureWhereInput is used for filtering Procedure objects.
 * Input was generated by ent.
 */
export interface ProcedureWhereInput {
  and?: InputMaybe<Array<ProcedureWhereInput>>;
  /** background field predicates */
  background?: InputMaybe<Scalars['String']['input']>;
  backgroundContains?: InputMaybe<Scalars['String']['input']>;
  backgroundContainsFold?: InputMaybe<Scalars['String']['input']>;
  backgroundEqualFold?: InputMaybe<Scalars['String']['input']>;
  backgroundGT?: InputMaybe<Scalars['String']['input']>;
  backgroundGTE?: InputMaybe<Scalars['String']['input']>;
  backgroundHasPrefix?: InputMaybe<Scalars['String']['input']>;
  backgroundHasSuffix?: InputMaybe<Scalars['String']['input']>;
  backgroundIn?: InputMaybe<Array<Scalars['String']['input']>>;
  backgroundIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  backgroundLT?: InputMaybe<Scalars['String']['input']>;
  backgroundLTE?: InputMaybe<Scalars['String']['input']>;
  backgroundNEQ?: InputMaybe<Scalars['String']['input']>;
  backgroundNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  backgroundNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** blocked_groups edge predicates */
  hasBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  hasBlockedGroupsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** controls edge predicates */
  hasControls?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlsWith?: InputMaybe<Array<ControlWhereInput>>;
  /** editors edge predicates */
  hasEditors?: InputMaybe<Scalars['Boolean']['input']>;
  hasEditorsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** internal_policies edge predicates */
  hasInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>;
  hasInternalPoliciesWith?: InputMaybe<Array<InternalPolicyWhereInput>>;
  /** narratives edge predicates */
  hasNarratives?: InputMaybe<Scalars['Boolean']['input']>;
  hasNarrativesWith?: InputMaybe<Array<NarrativeWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>;
  /** risks edge predicates */
  hasRisks?: InputMaybe<Scalars['Boolean']['input']>;
  hasRisksWith?: InputMaybe<Array<RiskWhereInput>>;
  /** tasks edge predicates */
  hasTasks?: InputMaybe<Scalars['Boolean']['input']>;
  hasTasksWith?: InputMaybe<Array<TaskWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<ProcedureWhereInput>;
  or?: InputMaybe<Array<ProcedureWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** procedure_type field predicates */
  procedureType?: InputMaybe<Scalars['String']['input']>;
  procedureTypeContains?: InputMaybe<Scalars['String']['input']>;
  procedureTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  procedureTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  procedureTypeGT?: InputMaybe<Scalars['String']['input']>;
  procedureTypeGTE?: InputMaybe<Scalars['String']['input']>;
  procedureTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  procedureTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  procedureTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  procedureTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  procedureTypeLT?: InputMaybe<Scalars['String']['input']>;
  procedureTypeLTE?: InputMaybe<Scalars['String']['input']>;
  procedureTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  procedureTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  procedureTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** purpose_and_scope field predicates */
  purposeAndScope?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeContains?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeContainsFold?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeEqualFold?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeGT?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeGTE?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  purposeAndScopeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  purposeAndScopeLT?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeLTE?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeNEQ?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  purposeAndScopeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** satisfies field predicates */
  satisfies?: InputMaybe<Scalars['String']['input']>;
  satisfiesContains?: InputMaybe<Scalars['String']['input']>;
  satisfiesContainsFold?: InputMaybe<Scalars['String']['input']>;
  satisfiesEqualFold?: InputMaybe<Scalars['String']['input']>;
  satisfiesGT?: InputMaybe<Scalars['String']['input']>;
  satisfiesGTE?: InputMaybe<Scalars['String']['input']>;
  satisfiesHasPrefix?: InputMaybe<Scalars['String']['input']>;
  satisfiesHasSuffix?: InputMaybe<Scalars['String']['input']>;
  satisfiesIn?: InputMaybe<Array<Scalars['String']['input']>>;
  satisfiesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  satisfiesLT?: InputMaybe<Scalars['String']['input']>;
  satisfiesLTE?: InputMaybe<Scalars['String']['input']>;
  satisfiesNEQ?: InputMaybe<Scalars['String']['input']>;
  satisfiesNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  satisfiesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>;
  statusContains?: InputMaybe<Scalars['String']['input']>;
  statusContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusGT?: InputMaybe<Scalars['String']['input']>;
  statusGTE?: InputMaybe<Scalars['String']['input']>;
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusLT?: InputMaybe<Scalars['String']['input']>;
  statusLTE?: InputMaybe<Scalars['String']['input']>;
  statusNEQ?: InputMaybe<Scalars['String']['input']>;
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** version field predicates */
  version?: InputMaybe<Scalars['String']['input']>;
  versionContains?: InputMaybe<Scalars['String']['input']>;
  versionContainsFold?: InputMaybe<Scalars['String']['input']>;
  versionEqualFold?: InputMaybe<Scalars['String']['input']>;
  versionGT?: InputMaybe<Scalars['String']['input']>;
  versionGTE?: InputMaybe<Scalars['String']['input']>;
  versionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  versionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  versionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  versionLT?: InputMaybe<Scalars['String']['input']>;
  versionLTE?: InputMaybe<Scalars['String']['input']>;
  versionNEQ?: InputMaybe<Scalars['String']['input']>;
  versionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** ProgramHistoryOpType is enum for the field operation */
export enum ProgramHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** ProgramHistoryProgramStatus is enum for the field status */
export enum ProgramHistoryProgramStatus {
  ACTION_REQUIRED = 'ACTION_REQUIRED',
  COMPLETED = 'COMPLETED',
  IN_PROGRESS = 'IN_PROGRESS',
  NOT_STARTED = 'NOT_STARTED',
  READY_FOR_AUDITOR = 'READY_FOR_AUDITOR'
}

/**
 * ProgramHistoryWhereInput is used for filtering ProgramHistory objects.
 * Input was generated by ent.
 */
export interface ProgramHistoryWhereInput {
  and?: InputMaybe<Array<ProgramHistoryWhereInput>>;
  /** auditor_read_comments field predicates */
  auditorReadComments?: InputMaybe<Scalars['Boolean']['input']>;
  auditorReadCommentsNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** auditor_ready field predicates */
  auditorReady?: InputMaybe<Scalars['Boolean']['input']>;
  auditorReadyNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** auditor_write_comments field predicates */
  auditorWriteComments?: InputMaybe<Scalars['Boolean']['input']>;
  auditorWriteCommentsNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** end_date field predicates */
  endDate?: InputMaybe<Scalars['Time']['input']>;
  endDateGT?: InputMaybe<Scalars['Time']['input']>;
  endDateGTE?: InputMaybe<Scalars['Time']['input']>;
  endDateIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  endDateIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  endDateLT?: InputMaybe<Scalars['Time']['input']>;
  endDateLTE?: InputMaybe<Scalars['Time']['input']>;
  endDateNEQ?: InputMaybe<Scalars['Time']['input']>;
  endDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  endDateNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<ProgramHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<ProgramHistoryOpType>;
  operationIn?: InputMaybe<Array<ProgramHistoryOpType>>;
  operationNEQ?: InputMaybe<ProgramHistoryOpType>;
  operationNotIn?: InputMaybe<Array<ProgramHistoryOpType>>;
  or?: InputMaybe<Array<ProgramHistoryWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>;
  ownerIDContains?: InputMaybe<Scalars['String']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDGT?: InputMaybe<Scalars['String']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['String']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** start_date field predicates */
  startDate?: InputMaybe<Scalars['Time']['input']>;
  startDateGT?: InputMaybe<Scalars['Time']['input']>;
  startDateGTE?: InputMaybe<Scalars['Time']['input']>;
  startDateIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  startDateIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  startDateLT?: InputMaybe<Scalars['Time']['input']>;
  startDateLTE?: InputMaybe<Scalars['Time']['input']>;
  startDateNEQ?: InputMaybe<Scalars['Time']['input']>;
  startDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  startDateNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<ProgramHistoryProgramStatus>;
  statusIn?: InputMaybe<Array<ProgramHistoryProgramStatus>>;
  statusNEQ?: InputMaybe<ProgramHistoryProgramStatus>;
  statusNotIn?: InputMaybe<Array<ProgramHistoryProgramStatus>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** ProgramMembershipHistoryOpType is enum for the field operation */
export enum ProgramMembershipHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** ProgramMembershipHistoryRole is enum for the field role */
export enum ProgramMembershipHistoryRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER'
}

/**
 * ProgramMembershipHistoryWhereInput is used for filtering ProgramMembershipHistory objects.
 * Input was generated by ent.
 */
export interface ProgramMembershipHistoryWhereInput {
  and?: InputMaybe<Array<ProgramMembershipHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<ProgramMembershipHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<ProgramMembershipHistoryOpType>;
  operationIn?: InputMaybe<Array<ProgramMembershipHistoryOpType>>;
  operationNEQ?: InputMaybe<ProgramMembershipHistoryOpType>;
  operationNotIn?: InputMaybe<Array<ProgramMembershipHistoryOpType>>;
  or?: InputMaybe<Array<ProgramMembershipHistoryWhereInput>>;
  /** program_id field predicates */
  programID?: InputMaybe<Scalars['String']['input']>;
  programIDContains?: InputMaybe<Scalars['String']['input']>;
  programIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  programIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  programIDGT?: InputMaybe<Scalars['String']['input']>;
  programIDGTE?: InputMaybe<Scalars['String']['input']>;
  programIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  programIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  programIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  programIDLT?: InputMaybe<Scalars['String']['input']>;
  programIDLTE?: InputMaybe<Scalars['String']['input']>;
  programIDNEQ?: InputMaybe<Scalars['String']['input']>;
  programIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** role field predicates */
  role?: InputMaybe<ProgramMembershipHistoryRole>;
  roleIn?: InputMaybe<Array<ProgramMembershipHistoryRole>>;
  roleNEQ?: InputMaybe<ProgramMembershipHistoryRole>;
  roleNotIn?: InputMaybe<Array<ProgramMembershipHistoryRole>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** user_id field predicates */
  userID?: InputMaybe<Scalars['String']['input']>;
  userIDContains?: InputMaybe<Scalars['String']['input']>;
  userIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  userIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  userIDGT?: InputMaybe<Scalars['String']['input']>;
  userIDGTE?: InputMaybe<Scalars['String']['input']>;
  userIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  userIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  userIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  userIDLT?: InputMaybe<Scalars['String']['input']>;
  userIDLTE?: InputMaybe<Scalars['String']['input']>;
  userIDNEQ?: InputMaybe<Scalars['String']['input']>;
  userIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
}

/** ProgramMembershipRole is enum for the field role */
export enum ProgramMembershipRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER'
}

/**
 * ProgramMembershipWhereInput is used for filtering ProgramMembership objects.
 * Input was generated by ent.
 */
export interface ProgramMembershipWhereInput {
  and?: InputMaybe<Array<ProgramMembershipWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<ProgramMembershipWhereInput>;
  or?: InputMaybe<Array<ProgramMembershipWhereInput>>;
  programID?: InputMaybe<Scalars['String']['input']>;
  /** role field predicates */
  role?: InputMaybe<ProgramMembershipRole>;
  roleIn?: InputMaybe<Array<ProgramMembershipRole>>;
  roleNEQ?: InputMaybe<ProgramMembershipRole>;
  roleNotIn?: InputMaybe<Array<ProgramMembershipRole>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  userID?: InputMaybe<Scalars['String']['input']>;
}

/** ProgramProgramStatus is enum for the field status */
export enum ProgramProgramStatus {
  ACTION_REQUIRED = 'ACTION_REQUIRED',
  COMPLETED = 'COMPLETED',
  IN_PROGRESS = 'IN_PROGRESS',
  NOT_STARTED = 'NOT_STARTED',
  READY_FOR_AUDITOR = 'READY_FOR_AUDITOR'
}

/**
 * ProgramWhereInput is used for filtering Program objects.
 * Input was generated by ent.
 */
export interface ProgramWhereInput {
  and?: InputMaybe<Array<ProgramWhereInput>>;
  /** auditor_read_comments field predicates */
  auditorReadComments?: InputMaybe<Scalars['Boolean']['input']>;
  auditorReadCommentsNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** auditor_ready field predicates */
  auditorReady?: InputMaybe<Scalars['Boolean']['input']>;
  auditorReadyNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** auditor_write_comments field predicates */
  auditorWriteComments?: InputMaybe<Scalars['Boolean']['input']>;
  auditorWriteCommentsNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** end_date field predicates */
  endDate?: InputMaybe<Scalars['Time']['input']>;
  endDateGT?: InputMaybe<Scalars['Time']['input']>;
  endDateGTE?: InputMaybe<Scalars['Time']['input']>;
  endDateIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  endDateIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  endDateLT?: InputMaybe<Scalars['Time']['input']>;
  endDateLTE?: InputMaybe<Scalars['Time']['input']>;
  endDateNEQ?: InputMaybe<Scalars['Time']['input']>;
  endDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  endDateNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** action_plans edge predicates */
  hasActionPlans?: InputMaybe<Scalars['Boolean']['input']>;
  hasActionPlansWith?: InputMaybe<Array<ActionPlanWhereInput>>;
  /** blocked_groups edge predicates */
  hasBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  hasBlockedGroupsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** control_objectives edge predicates */
  hasControlObjectives?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlObjectivesWith?: InputMaybe<Array<ControlObjectiveWhereInput>>;
  /** controls edge predicates */
  hasControls?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlsWith?: InputMaybe<Array<ControlWhereInput>>;
  /** editors edge predicates */
  hasEditors?: InputMaybe<Scalars['Boolean']['input']>;
  hasEditorsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>;
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>;
  /** internal_policies edge predicates */
  hasInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>;
  hasInternalPoliciesWith?: InputMaybe<Array<InternalPolicyWhereInput>>;
  /** members edge predicates */
  hasMembers?: InputMaybe<Scalars['Boolean']['input']>;
  hasMembersWith?: InputMaybe<Array<ProgramMembershipWhereInput>>;
  /** narratives edge predicates */
  hasNarratives?: InputMaybe<Scalars['Boolean']['input']>;
  hasNarrativesWith?: InputMaybe<Array<NarrativeWhereInput>>;
  /** notes edge predicates */
  hasNotes?: InputMaybe<Scalars['Boolean']['input']>;
  hasNotesWith?: InputMaybe<Array<NoteWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** procedures edge predicates */
  hasProcedures?: InputMaybe<Scalars['Boolean']['input']>;
  hasProceduresWith?: InputMaybe<Array<ProcedureWhereInput>>;
  /** risks edge predicates */
  hasRisks?: InputMaybe<Scalars['Boolean']['input']>;
  hasRisksWith?: InputMaybe<Array<RiskWhereInput>>;
  /** standards edge predicates */
  hasStandards?: InputMaybe<Scalars['Boolean']['input']>;
  hasStandardsWith?: InputMaybe<Array<StandardWhereInput>>;
  /** subcontrols edge predicates */
  hasSubcontrols?: InputMaybe<Scalars['Boolean']['input']>;
  hasSubcontrolsWith?: InputMaybe<Array<SubcontrolWhereInput>>;
  /** tasks edge predicates */
  hasTasks?: InputMaybe<Scalars['Boolean']['input']>;
  hasTasksWith?: InputMaybe<Array<TaskWhereInput>>;
  /** users edge predicates */
  hasUsers?: InputMaybe<Scalars['Boolean']['input']>;
  hasUsersWith?: InputMaybe<Array<UserWhereInput>>;
  /** viewers edge predicates */
  hasViewers?: InputMaybe<Scalars['Boolean']['input']>;
  hasViewersWith?: InputMaybe<Array<GroupWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<ProgramWhereInput>;
  or?: InputMaybe<Array<ProgramWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** start_date field predicates */
  startDate?: InputMaybe<Scalars['Time']['input']>;
  startDateGT?: InputMaybe<Scalars['Time']['input']>;
  startDateGTE?: InputMaybe<Scalars['Time']['input']>;
  startDateIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  startDateIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  startDateLT?: InputMaybe<Scalars['Time']['input']>;
  startDateLTE?: InputMaybe<Scalars['Time']['input']>;
  startDateNEQ?: InputMaybe<Scalars['Time']['input']>;
  startDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  startDateNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<ProgramProgramStatus>;
  statusIn?: InputMaybe<Array<ProgramProgramStatus>>;
  statusNEQ?: InputMaybe<ProgramProgramStatus>;
  statusNotIn?: InputMaybe<Array<ProgramProgramStatus>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** RiskHistoryOpType is enum for the field operation */
export enum RiskHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** RiskHistoryRiskImpact is enum for the field impact */
export enum RiskHistoryRiskImpact {
  HIGH = 'HIGH',
  LOW = 'LOW',
  MODERATE = 'MODERATE'
}

/** RiskHistoryRiskLikelihood is enum for the field likelihood */
export enum RiskHistoryRiskLikelihood {
  HIGHLY_LIKELY = 'HIGHLY_LIKELY',
  LIKELY = 'LIKELY',
  UNLIKELY = 'UNLIKELY'
}

/**
 * RiskHistoryWhereInput is used for filtering RiskHistory objects.
 * Input was generated by ent.
 */
export interface RiskHistoryWhereInput {
  and?: InputMaybe<Array<RiskHistoryWhereInput>>;
  /** business_costs field predicates */
  businessCosts?: InputMaybe<Scalars['String']['input']>;
  businessCostsContains?: InputMaybe<Scalars['String']['input']>;
  businessCostsContainsFold?: InputMaybe<Scalars['String']['input']>;
  businessCostsEqualFold?: InputMaybe<Scalars['String']['input']>;
  businessCostsGT?: InputMaybe<Scalars['String']['input']>;
  businessCostsGTE?: InputMaybe<Scalars['String']['input']>;
  businessCostsHasPrefix?: InputMaybe<Scalars['String']['input']>;
  businessCostsHasSuffix?: InputMaybe<Scalars['String']['input']>;
  businessCostsIn?: InputMaybe<Array<Scalars['String']['input']>>;
  businessCostsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  businessCostsLT?: InputMaybe<Scalars['String']['input']>;
  businessCostsLTE?: InputMaybe<Scalars['String']['input']>;
  businessCostsNEQ?: InputMaybe<Scalars['String']['input']>;
  businessCostsNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  businessCostsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** impact field predicates */
  impact?: InputMaybe<RiskHistoryRiskImpact>;
  impactIn?: InputMaybe<Array<RiskHistoryRiskImpact>>;
  impactIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  impactNEQ?: InputMaybe<RiskHistoryRiskImpact>;
  impactNotIn?: InputMaybe<Array<RiskHistoryRiskImpact>>;
  impactNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** likelihood field predicates */
  likelihood?: InputMaybe<RiskHistoryRiskLikelihood>;
  likelihoodIn?: InputMaybe<Array<RiskHistoryRiskLikelihood>>;
  likelihoodIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  likelihoodNEQ?: InputMaybe<RiskHistoryRiskLikelihood>;
  likelihoodNotIn?: InputMaybe<Array<RiskHistoryRiskLikelihood>>;
  likelihoodNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** mitigation field predicates */
  mitigation?: InputMaybe<Scalars['String']['input']>;
  mitigationContains?: InputMaybe<Scalars['String']['input']>;
  mitigationContainsFold?: InputMaybe<Scalars['String']['input']>;
  mitigationEqualFold?: InputMaybe<Scalars['String']['input']>;
  mitigationGT?: InputMaybe<Scalars['String']['input']>;
  mitigationGTE?: InputMaybe<Scalars['String']['input']>;
  mitigationHasPrefix?: InputMaybe<Scalars['String']['input']>;
  mitigationHasSuffix?: InputMaybe<Scalars['String']['input']>;
  mitigationIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mitigationIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  mitigationLT?: InputMaybe<Scalars['String']['input']>;
  mitigationLTE?: InputMaybe<Scalars['String']['input']>;
  mitigationNEQ?: InputMaybe<Scalars['String']['input']>;
  mitigationNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mitigationNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<RiskHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<RiskHistoryOpType>;
  operationIn?: InputMaybe<Array<RiskHistoryOpType>>;
  operationNEQ?: InputMaybe<RiskHistoryOpType>;
  operationNotIn?: InputMaybe<Array<RiskHistoryOpType>>;
  or?: InputMaybe<Array<RiskHistoryWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>;
  ownerIDContains?: InputMaybe<Scalars['String']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDGT?: InputMaybe<Scalars['String']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDLT?: InputMaybe<Scalars['String']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** risk_type field predicates */
  riskType?: InputMaybe<Scalars['String']['input']>;
  riskTypeContains?: InputMaybe<Scalars['String']['input']>;
  riskTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  riskTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  riskTypeGT?: InputMaybe<Scalars['String']['input']>;
  riskTypeGTE?: InputMaybe<Scalars['String']['input']>;
  riskTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  riskTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  riskTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  riskTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  riskTypeLT?: InputMaybe<Scalars['String']['input']>;
  riskTypeLTE?: InputMaybe<Scalars['String']['input']>;
  riskTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  riskTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  riskTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** satisfies field predicates */
  satisfies?: InputMaybe<Scalars['String']['input']>;
  satisfiesContains?: InputMaybe<Scalars['String']['input']>;
  satisfiesContainsFold?: InputMaybe<Scalars['String']['input']>;
  satisfiesEqualFold?: InputMaybe<Scalars['String']['input']>;
  satisfiesGT?: InputMaybe<Scalars['String']['input']>;
  satisfiesGTE?: InputMaybe<Scalars['String']['input']>;
  satisfiesHasPrefix?: InputMaybe<Scalars['String']['input']>;
  satisfiesHasSuffix?: InputMaybe<Scalars['String']['input']>;
  satisfiesIn?: InputMaybe<Array<Scalars['String']['input']>>;
  satisfiesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  satisfiesLT?: InputMaybe<Scalars['String']['input']>;
  satisfiesLTE?: InputMaybe<Scalars['String']['input']>;
  satisfiesNEQ?: InputMaybe<Scalars['String']['input']>;
  satisfiesNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  satisfiesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>;
  statusContains?: InputMaybe<Scalars['String']['input']>;
  statusContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusGT?: InputMaybe<Scalars['String']['input']>;
  statusGTE?: InputMaybe<Scalars['String']['input']>;
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusLT?: InputMaybe<Scalars['String']['input']>;
  statusLTE?: InputMaybe<Scalars['String']['input']>;
  statusNEQ?: InputMaybe<Scalars['String']['input']>;
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** RiskRiskImpact is enum for the field impact */
export enum RiskRiskImpact {
  HIGH = 'HIGH',
  LOW = 'LOW',
  MODERATE = 'MODERATE'
}

/** RiskRiskLikelihood is enum for the field likelihood */
export enum RiskRiskLikelihood {
  HIGHLY_LIKELY = 'HIGHLY_LIKELY',
  LIKELY = 'LIKELY',
  UNLIKELY = 'UNLIKELY'
}

/**
 * RiskWhereInput is used for filtering Risk objects.
 * Input was generated by ent.
 */
export interface RiskWhereInput {
  and?: InputMaybe<Array<RiskWhereInput>>;
  /** business_costs field predicates */
  businessCosts?: InputMaybe<Scalars['String']['input']>;
  businessCostsContains?: InputMaybe<Scalars['String']['input']>;
  businessCostsContainsFold?: InputMaybe<Scalars['String']['input']>;
  businessCostsEqualFold?: InputMaybe<Scalars['String']['input']>;
  businessCostsGT?: InputMaybe<Scalars['String']['input']>;
  businessCostsGTE?: InputMaybe<Scalars['String']['input']>;
  businessCostsHasPrefix?: InputMaybe<Scalars['String']['input']>;
  businessCostsHasSuffix?: InputMaybe<Scalars['String']['input']>;
  businessCostsIn?: InputMaybe<Array<Scalars['String']['input']>>;
  businessCostsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  businessCostsLT?: InputMaybe<Scalars['String']['input']>;
  businessCostsLTE?: InputMaybe<Scalars['String']['input']>;
  businessCostsNEQ?: InputMaybe<Scalars['String']['input']>;
  businessCostsNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  businessCostsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** action_plans edge predicates */
  hasActionPlans?: InputMaybe<Scalars['Boolean']['input']>;
  hasActionPlansWith?: InputMaybe<Array<ActionPlanWhereInput>>;
  /** blocked_groups edge predicates */
  hasBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  hasBlockedGroupsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** control edge predicates */
  hasControl?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlWith?: InputMaybe<Array<ControlWhereInput>>;
  /** editors edge predicates */
  hasEditors?: InputMaybe<Scalars['Boolean']['input']>;
  hasEditorsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** procedure edge predicates */
  hasProcedure?: InputMaybe<Scalars['Boolean']['input']>;
  hasProcedureWith?: InputMaybe<Array<ProcedureWhereInput>>;
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>;
  /** viewers edge predicates */
  hasViewers?: InputMaybe<Scalars['Boolean']['input']>;
  hasViewersWith?: InputMaybe<Array<GroupWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** impact field predicates */
  impact?: InputMaybe<RiskRiskImpact>;
  impactIn?: InputMaybe<Array<RiskRiskImpact>>;
  impactIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  impactNEQ?: InputMaybe<RiskRiskImpact>;
  impactNotIn?: InputMaybe<Array<RiskRiskImpact>>;
  impactNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** likelihood field predicates */
  likelihood?: InputMaybe<RiskRiskLikelihood>;
  likelihoodIn?: InputMaybe<Array<RiskRiskLikelihood>>;
  likelihoodIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  likelihoodNEQ?: InputMaybe<RiskRiskLikelihood>;
  likelihoodNotIn?: InputMaybe<Array<RiskRiskLikelihood>>;
  likelihoodNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** mitigation field predicates */
  mitigation?: InputMaybe<Scalars['String']['input']>;
  mitigationContains?: InputMaybe<Scalars['String']['input']>;
  mitigationContainsFold?: InputMaybe<Scalars['String']['input']>;
  mitigationEqualFold?: InputMaybe<Scalars['String']['input']>;
  mitigationGT?: InputMaybe<Scalars['String']['input']>;
  mitigationGTE?: InputMaybe<Scalars['String']['input']>;
  mitigationHasPrefix?: InputMaybe<Scalars['String']['input']>;
  mitigationHasSuffix?: InputMaybe<Scalars['String']['input']>;
  mitigationIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mitigationIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  mitigationLT?: InputMaybe<Scalars['String']['input']>;
  mitigationLTE?: InputMaybe<Scalars['String']['input']>;
  mitigationNEQ?: InputMaybe<Scalars['String']['input']>;
  mitigationNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mitigationNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<RiskWhereInput>;
  or?: InputMaybe<Array<RiskWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** risk_type field predicates */
  riskType?: InputMaybe<Scalars['String']['input']>;
  riskTypeContains?: InputMaybe<Scalars['String']['input']>;
  riskTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  riskTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  riskTypeGT?: InputMaybe<Scalars['String']['input']>;
  riskTypeGTE?: InputMaybe<Scalars['String']['input']>;
  riskTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  riskTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  riskTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  riskTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  riskTypeLT?: InputMaybe<Scalars['String']['input']>;
  riskTypeLTE?: InputMaybe<Scalars['String']['input']>;
  riskTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  riskTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  riskTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** satisfies field predicates */
  satisfies?: InputMaybe<Scalars['String']['input']>;
  satisfiesContains?: InputMaybe<Scalars['String']['input']>;
  satisfiesContainsFold?: InputMaybe<Scalars['String']['input']>;
  satisfiesEqualFold?: InputMaybe<Scalars['String']['input']>;
  satisfiesGT?: InputMaybe<Scalars['String']['input']>;
  satisfiesGTE?: InputMaybe<Scalars['String']['input']>;
  satisfiesHasPrefix?: InputMaybe<Scalars['String']['input']>;
  satisfiesHasSuffix?: InputMaybe<Scalars['String']['input']>;
  satisfiesIn?: InputMaybe<Array<Scalars['String']['input']>>;
  satisfiesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  satisfiesLT?: InputMaybe<Scalars['String']['input']>;
  satisfiesLTE?: InputMaybe<Scalars['String']['input']>;
  satisfiesNEQ?: InputMaybe<Scalars['String']['input']>;
  satisfiesNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  satisfiesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>;
  statusContains?: InputMaybe<Scalars['String']['input']>;
  statusContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusGT?: InputMaybe<Scalars['String']['input']>;
  statusGTE?: InputMaybe<Scalars['String']['input']>;
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusLT?: InputMaybe<Scalars['String']['input']>;
  statusLTE?: InputMaybe<Scalars['String']['input']>;
  statusNEQ?: InputMaybe<Scalars['String']['input']>;
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** StandardHistoryOpType is enum for the field operation */
export enum StandardHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/**
 * StandardHistoryWhereInput is used for filtering StandardHistory objects.
 * Input was generated by ent.
 */
export interface StandardHistoryWhereInput {
  and?: InputMaybe<Array<StandardHistoryWhereInput>>;
  /** background field predicates */
  background?: InputMaybe<Scalars['String']['input']>;
  backgroundContains?: InputMaybe<Scalars['String']['input']>;
  backgroundContainsFold?: InputMaybe<Scalars['String']['input']>;
  backgroundEqualFold?: InputMaybe<Scalars['String']['input']>;
  backgroundGT?: InputMaybe<Scalars['String']['input']>;
  backgroundGTE?: InputMaybe<Scalars['String']['input']>;
  backgroundHasPrefix?: InputMaybe<Scalars['String']['input']>;
  backgroundHasSuffix?: InputMaybe<Scalars['String']['input']>;
  backgroundIn?: InputMaybe<Array<Scalars['String']['input']>>;
  backgroundIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  backgroundLT?: InputMaybe<Scalars['String']['input']>;
  backgroundLTE?: InputMaybe<Scalars['String']['input']>;
  backgroundNEQ?: InputMaybe<Scalars['String']['input']>;
  backgroundNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  backgroundNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** family field predicates */
  family?: InputMaybe<Scalars['String']['input']>;
  familyContains?: InputMaybe<Scalars['String']['input']>;
  familyContainsFold?: InputMaybe<Scalars['String']['input']>;
  familyEqualFold?: InputMaybe<Scalars['String']['input']>;
  familyGT?: InputMaybe<Scalars['String']['input']>;
  familyGTE?: InputMaybe<Scalars['String']['input']>;
  familyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  familyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  familyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  familyIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  familyLT?: InputMaybe<Scalars['String']['input']>;
  familyLTE?: InputMaybe<Scalars['String']['input']>;
  familyNEQ?: InputMaybe<Scalars['String']['input']>;
  familyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  familyNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<StandardHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<StandardHistoryOpType>;
  operationIn?: InputMaybe<Array<StandardHistoryOpType>>;
  operationNEQ?: InputMaybe<StandardHistoryOpType>;
  operationNotIn?: InputMaybe<Array<StandardHistoryOpType>>;
  or?: InputMaybe<Array<StandardHistoryWhereInput>>;
  /** purpose_and_scope field predicates */
  purposeAndScope?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeContains?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeContainsFold?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeEqualFold?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeGT?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeGTE?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  purposeAndScopeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  purposeAndScopeLT?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeLTE?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeNEQ?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  purposeAndScopeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** satisfies field predicates */
  satisfies?: InputMaybe<Scalars['String']['input']>;
  satisfiesContains?: InputMaybe<Scalars['String']['input']>;
  satisfiesContainsFold?: InputMaybe<Scalars['String']['input']>;
  satisfiesEqualFold?: InputMaybe<Scalars['String']['input']>;
  satisfiesGT?: InputMaybe<Scalars['String']['input']>;
  satisfiesGTE?: InputMaybe<Scalars['String']['input']>;
  satisfiesHasPrefix?: InputMaybe<Scalars['String']['input']>;
  satisfiesHasSuffix?: InputMaybe<Scalars['String']['input']>;
  satisfiesIn?: InputMaybe<Array<Scalars['String']['input']>>;
  satisfiesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  satisfiesLT?: InputMaybe<Scalars['String']['input']>;
  satisfiesLTE?: InputMaybe<Scalars['String']['input']>;
  satisfiesNEQ?: InputMaybe<Scalars['String']['input']>;
  satisfiesNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  satisfiesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** standard_type field predicates */
  standardType?: InputMaybe<Scalars['String']['input']>;
  standardTypeContains?: InputMaybe<Scalars['String']['input']>;
  standardTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  standardTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  standardTypeGT?: InputMaybe<Scalars['String']['input']>;
  standardTypeGTE?: InputMaybe<Scalars['String']['input']>;
  standardTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  standardTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  standardTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  standardTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  standardTypeLT?: InputMaybe<Scalars['String']['input']>;
  standardTypeLTE?: InputMaybe<Scalars['String']['input']>;
  standardTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  standardTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  standardTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>;
  statusContains?: InputMaybe<Scalars['String']['input']>;
  statusContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusGT?: InputMaybe<Scalars['String']['input']>;
  statusGTE?: InputMaybe<Scalars['String']['input']>;
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusLT?: InputMaybe<Scalars['String']['input']>;
  statusLTE?: InputMaybe<Scalars['String']['input']>;
  statusNEQ?: InputMaybe<Scalars['String']['input']>;
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** version field predicates */
  version?: InputMaybe<Scalars['String']['input']>;
  versionContains?: InputMaybe<Scalars['String']['input']>;
  versionContainsFold?: InputMaybe<Scalars['String']['input']>;
  versionEqualFold?: InputMaybe<Scalars['String']['input']>;
  versionGT?: InputMaybe<Scalars['String']['input']>;
  versionGTE?: InputMaybe<Scalars['String']['input']>;
  versionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  versionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  versionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  versionLT?: InputMaybe<Scalars['String']['input']>;
  versionLTE?: InputMaybe<Scalars['String']['input']>;
  versionNEQ?: InputMaybe<Scalars['String']['input']>;
  versionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * StandardWhereInput is used for filtering Standard objects.
 * Input was generated by ent.
 */
export interface StandardWhereInput {
  and?: InputMaybe<Array<StandardWhereInput>>;
  /** background field predicates */
  background?: InputMaybe<Scalars['String']['input']>;
  backgroundContains?: InputMaybe<Scalars['String']['input']>;
  backgroundContainsFold?: InputMaybe<Scalars['String']['input']>;
  backgroundEqualFold?: InputMaybe<Scalars['String']['input']>;
  backgroundGT?: InputMaybe<Scalars['String']['input']>;
  backgroundGTE?: InputMaybe<Scalars['String']['input']>;
  backgroundHasPrefix?: InputMaybe<Scalars['String']['input']>;
  backgroundHasSuffix?: InputMaybe<Scalars['String']['input']>;
  backgroundIn?: InputMaybe<Array<Scalars['String']['input']>>;
  backgroundIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  backgroundLT?: InputMaybe<Scalars['String']['input']>;
  backgroundLTE?: InputMaybe<Scalars['String']['input']>;
  backgroundNEQ?: InputMaybe<Scalars['String']['input']>;
  backgroundNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  backgroundNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** family field predicates */
  family?: InputMaybe<Scalars['String']['input']>;
  familyContains?: InputMaybe<Scalars['String']['input']>;
  familyContainsFold?: InputMaybe<Scalars['String']['input']>;
  familyEqualFold?: InputMaybe<Scalars['String']['input']>;
  familyGT?: InputMaybe<Scalars['String']['input']>;
  familyGTE?: InputMaybe<Scalars['String']['input']>;
  familyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  familyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  familyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  familyIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  familyLT?: InputMaybe<Scalars['String']['input']>;
  familyLTE?: InputMaybe<Scalars['String']['input']>;
  familyNEQ?: InputMaybe<Scalars['String']['input']>;
  familyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  familyNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** action_plans edge predicates */
  hasActionPlans?: InputMaybe<Scalars['Boolean']['input']>;
  hasActionPlansWith?: InputMaybe<Array<ActionPlanWhereInput>>;
  /** control_objectives edge predicates */
  hasControlObjectives?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlObjectivesWith?: InputMaybe<Array<ControlObjectiveWhereInput>>;
  /** controls edge predicates */
  hasControls?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlsWith?: InputMaybe<Array<ControlWhereInput>>;
  /** procedures edge predicates */
  hasProcedures?: InputMaybe<Scalars['Boolean']['input']>;
  hasProceduresWith?: InputMaybe<Array<ProcedureWhereInput>>;
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<StandardWhereInput>;
  or?: InputMaybe<Array<StandardWhereInput>>;
  /** purpose_and_scope field predicates */
  purposeAndScope?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeContains?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeContainsFold?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeEqualFold?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeGT?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeGTE?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  purposeAndScopeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  purposeAndScopeLT?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeLTE?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeNEQ?: InputMaybe<Scalars['String']['input']>;
  purposeAndScopeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  purposeAndScopeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** satisfies field predicates */
  satisfies?: InputMaybe<Scalars['String']['input']>;
  satisfiesContains?: InputMaybe<Scalars['String']['input']>;
  satisfiesContainsFold?: InputMaybe<Scalars['String']['input']>;
  satisfiesEqualFold?: InputMaybe<Scalars['String']['input']>;
  satisfiesGT?: InputMaybe<Scalars['String']['input']>;
  satisfiesGTE?: InputMaybe<Scalars['String']['input']>;
  satisfiesHasPrefix?: InputMaybe<Scalars['String']['input']>;
  satisfiesHasSuffix?: InputMaybe<Scalars['String']['input']>;
  satisfiesIn?: InputMaybe<Array<Scalars['String']['input']>>;
  satisfiesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  satisfiesLT?: InputMaybe<Scalars['String']['input']>;
  satisfiesLTE?: InputMaybe<Scalars['String']['input']>;
  satisfiesNEQ?: InputMaybe<Scalars['String']['input']>;
  satisfiesNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  satisfiesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** standard_type field predicates */
  standardType?: InputMaybe<Scalars['String']['input']>;
  standardTypeContains?: InputMaybe<Scalars['String']['input']>;
  standardTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  standardTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  standardTypeGT?: InputMaybe<Scalars['String']['input']>;
  standardTypeGTE?: InputMaybe<Scalars['String']['input']>;
  standardTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  standardTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  standardTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  standardTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  standardTypeLT?: InputMaybe<Scalars['String']['input']>;
  standardTypeLTE?: InputMaybe<Scalars['String']['input']>;
  standardTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  standardTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  standardTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>;
  statusContains?: InputMaybe<Scalars['String']['input']>;
  statusContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusGT?: InputMaybe<Scalars['String']['input']>;
  statusGTE?: InputMaybe<Scalars['String']['input']>;
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusLT?: InputMaybe<Scalars['String']['input']>;
  statusLTE?: InputMaybe<Scalars['String']['input']>;
  statusNEQ?: InputMaybe<Scalars['String']['input']>;
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** version field predicates */
  version?: InputMaybe<Scalars['String']['input']>;
  versionContains?: InputMaybe<Scalars['String']['input']>;
  versionContainsFold?: InputMaybe<Scalars['String']['input']>;
  versionEqualFold?: InputMaybe<Scalars['String']['input']>;
  versionGT?: InputMaybe<Scalars['String']['input']>;
  versionGTE?: InputMaybe<Scalars['String']['input']>;
  versionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  versionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  versionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  versionLT?: InputMaybe<Scalars['String']['input']>;
  versionLTE?: InputMaybe<Scalars['String']['input']>;
  versionNEQ?: InputMaybe<Scalars['String']['input']>;
  versionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** SubcontrolHistoryOpType is enum for the field operation */
export enum SubcontrolHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/**
 * SubcontrolHistoryWhereInput is used for filtering SubcontrolHistory objects.
 * Input was generated by ent.
 */
export interface SubcontrolHistoryWhereInput {
  and?: InputMaybe<Array<SubcontrolHistoryWhereInput>>;
  /** class field predicates */
  class?: InputMaybe<Scalars['String']['input']>;
  classContains?: InputMaybe<Scalars['String']['input']>;
  classContainsFold?: InputMaybe<Scalars['String']['input']>;
  classEqualFold?: InputMaybe<Scalars['String']['input']>;
  classGT?: InputMaybe<Scalars['String']['input']>;
  classGTE?: InputMaybe<Scalars['String']['input']>;
  classHasPrefix?: InputMaybe<Scalars['String']['input']>;
  classHasSuffix?: InputMaybe<Scalars['String']['input']>;
  classIn?: InputMaybe<Array<Scalars['String']['input']>>;
  classIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  classLT?: InputMaybe<Scalars['String']['input']>;
  classLTE?: InputMaybe<Scalars['String']['input']>;
  classNEQ?: InputMaybe<Scalars['String']['input']>;
  classNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  classNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** family field predicates */
  family?: InputMaybe<Scalars['String']['input']>;
  familyContains?: InputMaybe<Scalars['String']['input']>;
  familyContainsFold?: InputMaybe<Scalars['String']['input']>;
  familyEqualFold?: InputMaybe<Scalars['String']['input']>;
  familyGT?: InputMaybe<Scalars['String']['input']>;
  familyGTE?: InputMaybe<Scalars['String']['input']>;
  familyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  familyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  familyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  familyIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  familyLT?: InputMaybe<Scalars['String']['input']>;
  familyLTE?: InputMaybe<Scalars['String']['input']>;
  familyNEQ?: InputMaybe<Scalars['String']['input']>;
  familyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  familyNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** implementation_date field predicates */
  implementationDate?: InputMaybe<Scalars['Time']['input']>;
  implementationDateGT?: InputMaybe<Scalars['Time']['input']>;
  implementationDateGTE?: InputMaybe<Scalars['Time']['input']>;
  implementationDateIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  implementationDateIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  implementationDateLT?: InputMaybe<Scalars['Time']['input']>;
  implementationDateLTE?: InputMaybe<Scalars['Time']['input']>;
  implementationDateNEQ?: InputMaybe<Scalars['Time']['input']>;
  implementationDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  implementationDateNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** implementation_evidence field predicates */
  implementationEvidence?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceContains?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceContainsFold?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceEqualFold?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceGT?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceGTE?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceHasPrefix?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceHasSuffix?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceIn?: InputMaybe<Array<Scalars['String']['input']>>;
  implementationEvidenceIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  implementationEvidenceLT?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceLTE?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceNEQ?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  implementationEvidenceNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** implementation_status field predicates */
  implementationStatus?: InputMaybe<Scalars['String']['input']>;
  implementationStatusContains?: InputMaybe<Scalars['String']['input']>;
  implementationStatusContainsFold?: InputMaybe<Scalars['String']['input']>;
  implementationStatusEqualFold?: InputMaybe<Scalars['String']['input']>;
  implementationStatusGT?: InputMaybe<Scalars['String']['input']>;
  implementationStatusGTE?: InputMaybe<Scalars['String']['input']>;
  implementationStatusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  implementationStatusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  implementationStatusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  implementationStatusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  implementationStatusLT?: InputMaybe<Scalars['String']['input']>;
  implementationStatusLTE?: InputMaybe<Scalars['String']['input']>;
  implementationStatusNEQ?: InputMaybe<Scalars['String']['input']>;
  implementationStatusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  implementationStatusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** implementation_verification field predicates */
  implementationVerification?: InputMaybe<Scalars['String']['input']>;
  implementationVerificationContains?: InputMaybe<Scalars['String']['input']>;
  implementationVerificationContainsFold?: InputMaybe<Scalars['String']['input']>;
  /** implementation_verification_date field predicates */
  implementationVerificationDate?: InputMaybe<Scalars['Time']['input']>;
  implementationVerificationDateGT?: InputMaybe<Scalars['Time']['input']>;
  implementationVerificationDateGTE?: InputMaybe<Scalars['Time']['input']>;
  implementationVerificationDateIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  implementationVerificationDateIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  implementationVerificationDateLT?: InputMaybe<Scalars['Time']['input']>;
  implementationVerificationDateLTE?: InputMaybe<Scalars['Time']['input']>;
  implementationVerificationDateNEQ?: InputMaybe<Scalars['Time']['input']>;
  implementationVerificationDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  implementationVerificationDateNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  implementationVerificationEqualFold?: InputMaybe<Scalars['String']['input']>;
  implementationVerificationGT?: InputMaybe<Scalars['String']['input']>;
  implementationVerificationGTE?: InputMaybe<Scalars['String']['input']>;
  implementationVerificationHasPrefix?: InputMaybe<Scalars['String']['input']>;
  implementationVerificationHasSuffix?: InputMaybe<Scalars['String']['input']>;
  implementationVerificationIn?: InputMaybe<Array<Scalars['String']['input']>>;
  implementationVerificationIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  implementationVerificationLT?: InputMaybe<Scalars['String']['input']>;
  implementationVerificationLTE?: InputMaybe<Scalars['String']['input']>;
  implementationVerificationNEQ?: InputMaybe<Scalars['String']['input']>;
  implementationVerificationNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  implementationVerificationNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** mapped_frameworks field predicates */
  mappedFrameworks?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksContains?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksContainsFold?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksEqualFold?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksGT?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksGTE?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksHasPrefix?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksHasSuffix?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mappedFrameworksIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  mappedFrameworksLT?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksLTE?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksNEQ?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mappedFrameworksNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<SubcontrolHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<SubcontrolHistoryOpType>;
  operationIn?: InputMaybe<Array<SubcontrolHistoryOpType>>;
  operationNEQ?: InputMaybe<SubcontrolHistoryOpType>;
  operationNotIn?: InputMaybe<Array<SubcontrolHistoryOpType>>;
  or?: InputMaybe<Array<SubcontrolHistoryWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>;
  ownerIDContains?: InputMaybe<Scalars['String']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDGT?: InputMaybe<Scalars['String']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDLT?: InputMaybe<Scalars['String']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** source field predicates */
  source?: InputMaybe<Scalars['String']['input']>;
  sourceContains?: InputMaybe<Scalars['String']['input']>;
  sourceContainsFold?: InputMaybe<Scalars['String']['input']>;
  sourceEqualFold?: InputMaybe<Scalars['String']['input']>;
  sourceGT?: InputMaybe<Scalars['String']['input']>;
  sourceGTE?: InputMaybe<Scalars['String']['input']>;
  sourceHasPrefix?: InputMaybe<Scalars['String']['input']>;
  sourceHasSuffix?: InputMaybe<Scalars['String']['input']>;
  sourceIn?: InputMaybe<Array<Scalars['String']['input']>>;
  sourceIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  sourceLT?: InputMaybe<Scalars['String']['input']>;
  sourceLTE?: InputMaybe<Scalars['String']['input']>;
  sourceNEQ?: InputMaybe<Scalars['String']['input']>;
  sourceNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  sourceNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>;
  statusContains?: InputMaybe<Scalars['String']['input']>;
  statusContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusGT?: InputMaybe<Scalars['String']['input']>;
  statusGTE?: InputMaybe<Scalars['String']['input']>;
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusLT?: InputMaybe<Scalars['String']['input']>;
  statusLTE?: InputMaybe<Scalars['String']['input']>;
  statusNEQ?: InputMaybe<Scalars['String']['input']>;
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** subcontrol_number field predicates */
  subcontrolNumber?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberContains?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberContainsFold?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberEqualFold?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberGT?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberGTE?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberHasPrefix?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberHasSuffix?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberIn?: InputMaybe<Array<Scalars['String']['input']>>;
  subcontrolNumberIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  subcontrolNumberLT?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberLTE?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberNEQ?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  subcontrolNumberNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** subcontrol_type field predicates */
  subcontrolType?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeContains?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeGT?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeGTE?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  subcontrolTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  subcontrolTypeLT?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeLTE?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  subcontrolTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** version field predicates */
  version?: InputMaybe<Scalars['String']['input']>;
  versionContains?: InputMaybe<Scalars['String']['input']>;
  versionContainsFold?: InputMaybe<Scalars['String']['input']>;
  versionEqualFold?: InputMaybe<Scalars['String']['input']>;
  versionGT?: InputMaybe<Scalars['String']['input']>;
  versionGTE?: InputMaybe<Scalars['String']['input']>;
  versionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  versionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  versionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  versionLT?: InputMaybe<Scalars['String']['input']>;
  versionLTE?: InputMaybe<Scalars['String']['input']>;
  versionNEQ?: InputMaybe<Scalars['String']['input']>;
  versionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * SubcontrolWhereInput is used for filtering Subcontrol objects.
 * Input was generated by ent.
 */
export interface SubcontrolWhereInput {
  and?: InputMaybe<Array<SubcontrolWhereInput>>;
  /** class field predicates */
  class?: InputMaybe<Scalars['String']['input']>;
  classContains?: InputMaybe<Scalars['String']['input']>;
  classContainsFold?: InputMaybe<Scalars['String']['input']>;
  classEqualFold?: InputMaybe<Scalars['String']['input']>;
  classGT?: InputMaybe<Scalars['String']['input']>;
  classGTE?: InputMaybe<Scalars['String']['input']>;
  classHasPrefix?: InputMaybe<Scalars['String']['input']>;
  classHasSuffix?: InputMaybe<Scalars['String']['input']>;
  classIn?: InputMaybe<Array<Scalars['String']['input']>>;
  classIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  classLT?: InputMaybe<Scalars['String']['input']>;
  classLTE?: InputMaybe<Scalars['String']['input']>;
  classNEQ?: InputMaybe<Scalars['String']['input']>;
  classNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  classNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** family field predicates */
  family?: InputMaybe<Scalars['String']['input']>;
  familyContains?: InputMaybe<Scalars['String']['input']>;
  familyContainsFold?: InputMaybe<Scalars['String']['input']>;
  familyEqualFold?: InputMaybe<Scalars['String']['input']>;
  familyGT?: InputMaybe<Scalars['String']['input']>;
  familyGTE?: InputMaybe<Scalars['String']['input']>;
  familyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  familyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  familyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  familyIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  familyLT?: InputMaybe<Scalars['String']['input']>;
  familyLTE?: InputMaybe<Scalars['String']['input']>;
  familyNEQ?: InputMaybe<Scalars['String']['input']>;
  familyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  familyNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** controls edge predicates */
  hasControls?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlsWith?: InputMaybe<Array<ControlWhereInput>>;
  /** notes edge predicates */
  hasNotes?: InputMaybe<Scalars['Boolean']['input']>;
  hasNotesWith?: InputMaybe<Array<NoteWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>;
  /** tasks edge predicates */
  hasTasks?: InputMaybe<Scalars['Boolean']['input']>;
  hasTasksWith?: InputMaybe<Array<TaskWhereInput>>;
  /** user edge predicates */
  hasUser?: InputMaybe<Scalars['Boolean']['input']>;
  hasUserWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** implementation_date field predicates */
  implementationDate?: InputMaybe<Scalars['Time']['input']>;
  implementationDateGT?: InputMaybe<Scalars['Time']['input']>;
  implementationDateGTE?: InputMaybe<Scalars['Time']['input']>;
  implementationDateIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  implementationDateIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  implementationDateLT?: InputMaybe<Scalars['Time']['input']>;
  implementationDateLTE?: InputMaybe<Scalars['Time']['input']>;
  implementationDateNEQ?: InputMaybe<Scalars['Time']['input']>;
  implementationDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  implementationDateNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** implementation_evidence field predicates */
  implementationEvidence?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceContains?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceContainsFold?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceEqualFold?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceGT?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceGTE?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceHasPrefix?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceHasSuffix?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceIn?: InputMaybe<Array<Scalars['String']['input']>>;
  implementationEvidenceIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  implementationEvidenceLT?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceLTE?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceNEQ?: InputMaybe<Scalars['String']['input']>;
  implementationEvidenceNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  implementationEvidenceNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** implementation_status field predicates */
  implementationStatus?: InputMaybe<Scalars['String']['input']>;
  implementationStatusContains?: InputMaybe<Scalars['String']['input']>;
  implementationStatusContainsFold?: InputMaybe<Scalars['String']['input']>;
  implementationStatusEqualFold?: InputMaybe<Scalars['String']['input']>;
  implementationStatusGT?: InputMaybe<Scalars['String']['input']>;
  implementationStatusGTE?: InputMaybe<Scalars['String']['input']>;
  implementationStatusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  implementationStatusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  implementationStatusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  implementationStatusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  implementationStatusLT?: InputMaybe<Scalars['String']['input']>;
  implementationStatusLTE?: InputMaybe<Scalars['String']['input']>;
  implementationStatusNEQ?: InputMaybe<Scalars['String']['input']>;
  implementationStatusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  implementationStatusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** implementation_verification field predicates */
  implementationVerification?: InputMaybe<Scalars['String']['input']>;
  implementationVerificationContains?: InputMaybe<Scalars['String']['input']>;
  implementationVerificationContainsFold?: InputMaybe<Scalars['String']['input']>;
  /** implementation_verification_date field predicates */
  implementationVerificationDate?: InputMaybe<Scalars['Time']['input']>;
  implementationVerificationDateGT?: InputMaybe<Scalars['Time']['input']>;
  implementationVerificationDateGTE?: InputMaybe<Scalars['Time']['input']>;
  implementationVerificationDateIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  implementationVerificationDateIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  implementationVerificationDateLT?: InputMaybe<Scalars['Time']['input']>;
  implementationVerificationDateLTE?: InputMaybe<Scalars['Time']['input']>;
  implementationVerificationDateNEQ?: InputMaybe<Scalars['Time']['input']>;
  implementationVerificationDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  implementationVerificationDateNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  implementationVerificationEqualFold?: InputMaybe<Scalars['String']['input']>;
  implementationVerificationGT?: InputMaybe<Scalars['String']['input']>;
  implementationVerificationGTE?: InputMaybe<Scalars['String']['input']>;
  implementationVerificationHasPrefix?: InputMaybe<Scalars['String']['input']>;
  implementationVerificationHasSuffix?: InputMaybe<Scalars['String']['input']>;
  implementationVerificationIn?: InputMaybe<Array<Scalars['String']['input']>>;
  implementationVerificationIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  implementationVerificationLT?: InputMaybe<Scalars['String']['input']>;
  implementationVerificationLTE?: InputMaybe<Scalars['String']['input']>;
  implementationVerificationNEQ?: InputMaybe<Scalars['String']['input']>;
  implementationVerificationNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  implementationVerificationNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** mapped_frameworks field predicates */
  mappedFrameworks?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksContains?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksContainsFold?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksEqualFold?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksGT?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksGTE?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksHasPrefix?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksHasSuffix?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mappedFrameworksIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  mappedFrameworksLT?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksLTE?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksNEQ?: InputMaybe<Scalars['String']['input']>;
  mappedFrameworksNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  mappedFrameworksNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<SubcontrolWhereInput>;
  or?: InputMaybe<Array<SubcontrolWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** source field predicates */
  source?: InputMaybe<Scalars['String']['input']>;
  sourceContains?: InputMaybe<Scalars['String']['input']>;
  sourceContainsFold?: InputMaybe<Scalars['String']['input']>;
  sourceEqualFold?: InputMaybe<Scalars['String']['input']>;
  sourceGT?: InputMaybe<Scalars['String']['input']>;
  sourceGTE?: InputMaybe<Scalars['String']['input']>;
  sourceHasPrefix?: InputMaybe<Scalars['String']['input']>;
  sourceHasSuffix?: InputMaybe<Scalars['String']['input']>;
  sourceIn?: InputMaybe<Array<Scalars['String']['input']>>;
  sourceIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  sourceLT?: InputMaybe<Scalars['String']['input']>;
  sourceLTE?: InputMaybe<Scalars['String']['input']>;
  sourceNEQ?: InputMaybe<Scalars['String']['input']>;
  sourceNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  sourceNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<Scalars['String']['input']>;
  statusContains?: InputMaybe<Scalars['String']['input']>;
  statusContainsFold?: InputMaybe<Scalars['String']['input']>;
  statusEqualFold?: InputMaybe<Scalars['String']['input']>;
  statusGT?: InputMaybe<Scalars['String']['input']>;
  statusGTE?: InputMaybe<Scalars['String']['input']>;
  statusHasPrefix?: InputMaybe<Scalars['String']['input']>;
  statusHasSuffix?: InputMaybe<Scalars['String']['input']>;
  statusIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusLT?: InputMaybe<Scalars['String']['input']>;
  statusLTE?: InputMaybe<Scalars['String']['input']>;
  statusNEQ?: InputMaybe<Scalars['String']['input']>;
  statusNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  statusNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** subcontrol_number field predicates */
  subcontrolNumber?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberContains?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberContainsFold?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberEqualFold?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberGT?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberGTE?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberHasPrefix?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberHasSuffix?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberIn?: InputMaybe<Array<Scalars['String']['input']>>;
  subcontrolNumberIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  subcontrolNumberLT?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberLTE?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberNEQ?: InputMaybe<Scalars['String']['input']>;
  subcontrolNumberNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  subcontrolNumberNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** subcontrol_type field predicates */
  subcontrolType?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeContains?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeGT?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeGTE?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  subcontrolTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  subcontrolTypeLT?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeLTE?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  subcontrolTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  subcontrolTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** version field predicates */
  version?: InputMaybe<Scalars['String']['input']>;
  versionContains?: InputMaybe<Scalars['String']['input']>;
  versionContainsFold?: InputMaybe<Scalars['String']['input']>;
  versionEqualFold?: InputMaybe<Scalars['String']['input']>;
  versionGT?: InputMaybe<Scalars['String']['input']>;
  versionGTE?: InputMaybe<Scalars['String']['input']>;
  versionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  versionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  versionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  versionLT?: InputMaybe<Scalars['String']['input']>;
  versionLTE?: InputMaybe<Scalars['String']['input']>;
  versionNEQ?: InputMaybe<Scalars['String']['input']>;
  versionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * SubscriberWhereInput is used for filtering Subscriber objects.
 * Input was generated by ent.
 */
export interface SubscriberWhereInput {
  /** active field predicates */
  active?: InputMaybe<Scalars['Boolean']['input']>;
  activeNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<SubscriberWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** email field predicates */
  email?: InputMaybe<Scalars['String']['input']>;
  emailContains?: InputMaybe<Scalars['String']['input']>;
  emailContainsFold?: InputMaybe<Scalars['String']['input']>;
  emailEqualFold?: InputMaybe<Scalars['String']['input']>;
  emailGT?: InputMaybe<Scalars['String']['input']>;
  emailGTE?: InputMaybe<Scalars['String']['input']>;
  emailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  emailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  emailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  emailLT?: InputMaybe<Scalars['String']['input']>;
  emailLTE?: InputMaybe<Scalars['String']['input']>;
  emailNEQ?: InputMaybe<Scalars['String']['input']>;
  emailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<SubscriberWhereInput>;
  or?: InputMaybe<Array<SubscriberWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** phone_number field predicates */
  phoneNumber?: InputMaybe<Scalars['String']['input']>;
  phoneNumberContains?: InputMaybe<Scalars['String']['input']>;
  phoneNumberContainsFold?: InputMaybe<Scalars['String']['input']>;
  phoneNumberEqualFold?: InputMaybe<Scalars['String']['input']>;
  phoneNumberGT?: InputMaybe<Scalars['String']['input']>;
  phoneNumberGTE?: InputMaybe<Scalars['String']['input']>;
  phoneNumberHasPrefix?: InputMaybe<Scalars['String']['input']>;
  phoneNumberHasSuffix?: InputMaybe<Scalars['String']['input']>;
  phoneNumberIn?: InputMaybe<Array<Scalars['String']['input']>>;
  phoneNumberIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  phoneNumberLT?: InputMaybe<Scalars['String']['input']>;
  phoneNumberLTE?: InputMaybe<Scalars['String']['input']>;
  phoneNumberNEQ?: InputMaybe<Scalars['String']['input']>;
  phoneNumberNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  phoneNumberNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** verified_email field predicates */
  verifiedEmail?: InputMaybe<Scalars['Boolean']['input']>;
  verifiedEmailNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** verified_phone field predicates */
  verifiedPhone?: InputMaybe<Scalars['Boolean']['input']>;
  verifiedPhoneNEQ?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * TFASettingWhereInput is used for filtering TFASetting objects.
 * Input was generated by ent.
 */
export interface TfaSettingWhereInput {
  and?: InputMaybe<Array<TfaSettingWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<TfaSettingWhereInput>;
  or?: InputMaybe<Array<TfaSettingWhereInput>>;
  /** tfa_secret field predicates */
  tfaSecret?: InputMaybe<Scalars['String']['input']>;
  tfaSecretContains?: InputMaybe<Scalars['String']['input']>;
  tfaSecretContainsFold?: InputMaybe<Scalars['String']['input']>;
  tfaSecretEqualFold?: InputMaybe<Scalars['String']['input']>;
  tfaSecretGT?: InputMaybe<Scalars['String']['input']>;
  tfaSecretGTE?: InputMaybe<Scalars['String']['input']>;
  tfaSecretHasPrefix?: InputMaybe<Scalars['String']['input']>;
  tfaSecretHasSuffix?: InputMaybe<Scalars['String']['input']>;
  tfaSecretIn?: InputMaybe<Array<Scalars['String']['input']>>;
  tfaSecretIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  tfaSecretLT?: InputMaybe<Scalars['String']['input']>;
  tfaSecretLTE?: InputMaybe<Scalars['String']['input']>;
  tfaSecretNEQ?: InputMaybe<Scalars['String']['input']>;
  tfaSecretNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  tfaSecretNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** totp_allowed field predicates */
  totpAllowed?: InputMaybe<Scalars['Boolean']['input']>;
  totpAllowedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  totpAllowedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  totpAllowedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** verified field predicates */
  verified?: InputMaybe<Scalars['Boolean']['input']>;
  verifiedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
}

/** TaskHistoryOpType is enum for the field operation */
export enum TaskHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** TaskHistoryTaskStatus is enum for the field status */
export enum TaskHistoryTaskStatus {
  COMPLETED = 'COMPLETED',
  IN_PROGRESS = 'IN_PROGRESS',
  IN_REVIEW = 'IN_REVIEW',
  OPEN = 'OPEN',
  WONT_DO = 'WONT_DO'
}

/**
 * TaskHistoryWhereInput is used for filtering TaskHistory objects.
 * Input was generated by ent.
 */
export interface TaskHistoryWhereInput {
  and?: InputMaybe<Array<TaskHistoryWhereInput>>;
  /** completed field predicates */
  completed?: InputMaybe<Scalars['Time']['input']>;
  completedGT?: InputMaybe<Scalars['Time']['input']>;
  completedGTE?: InputMaybe<Scalars['Time']['input']>;
  completedIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  completedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  completedLT?: InputMaybe<Scalars['Time']['input']>;
  completedLTE?: InputMaybe<Scalars['Time']['input']>;
  completedNEQ?: InputMaybe<Scalars['Time']['input']>;
  completedNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  completedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** due field predicates */
  due?: InputMaybe<Scalars['Time']['input']>;
  dueGT?: InputMaybe<Scalars['Time']['input']>;
  dueGTE?: InputMaybe<Scalars['Time']['input']>;
  dueIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  dueIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  dueLT?: InputMaybe<Scalars['Time']['input']>;
  dueLTE?: InputMaybe<Scalars['Time']['input']>;
  dueNEQ?: InputMaybe<Scalars['Time']['input']>;
  dueNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  dueNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<TaskHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<TaskHistoryOpType>;
  operationIn?: InputMaybe<Array<TaskHistoryOpType>>;
  operationNEQ?: InputMaybe<TaskHistoryOpType>;
  operationNotIn?: InputMaybe<Array<TaskHistoryOpType>>;
  or?: InputMaybe<Array<TaskHistoryWhereInput>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<TaskHistoryTaskStatus>;
  statusIn?: InputMaybe<Array<TaskHistoryTaskStatus>>;
  statusNEQ?: InputMaybe<TaskHistoryTaskStatus>;
  statusNotIn?: InputMaybe<Array<TaskHistoryTaskStatus>>;
  /** title field predicates */
  title?: InputMaybe<Scalars['String']['input']>;
  titleContains?: InputMaybe<Scalars['String']['input']>;
  titleContainsFold?: InputMaybe<Scalars['String']['input']>;
  titleEqualFold?: InputMaybe<Scalars['String']['input']>;
  titleGT?: InputMaybe<Scalars['String']['input']>;
  titleGTE?: InputMaybe<Scalars['String']['input']>;
  titleHasPrefix?: InputMaybe<Scalars['String']['input']>;
  titleHasSuffix?: InputMaybe<Scalars['String']['input']>;
  titleIn?: InputMaybe<Array<Scalars['String']['input']>>;
  titleLT?: InputMaybe<Scalars['String']['input']>;
  titleLTE?: InputMaybe<Scalars['String']['input']>;
  titleNEQ?: InputMaybe<Scalars['String']['input']>;
  titleNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** TaskTaskStatus is enum for the field status */
export enum TaskTaskStatus {
  COMPLETED = 'COMPLETED',
  IN_PROGRESS = 'IN_PROGRESS',
  IN_REVIEW = 'IN_REVIEW',
  OPEN = 'OPEN',
  WONT_DO = 'WONT_DO'
}

/**
 * TaskWhereInput is used for filtering Task objects.
 * Input was generated by ent.
 */
export interface TaskWhereInput {
  and?: InputMaybe<Array<TaskWhereInput>>;
  /** completed field predicates */
  completed?: InputMaybe<Scalars['Time']['input']>;
  completedGT?: InputMaybe<Scalars['Time']['input']>;
  completedGTE?: InputMaybe<Scalars['Time']['input']>;
  completedIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  completedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  completedLT?: InputMaybe<Scalars['Time']['input']>;
  completedLTE?: InputMaybe<Scalars['Time']['input']>;
  completedNEQ?: InputMaybe<Scalars['Time']['input']>;
  completedNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  completedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** due field predicates */
  due?: InputMaybe<Scalars['Time']['input']>;
  dueGT?: InputMaybe<Scalars['Time']['input']>;
  dueGTE?: InputMaybe<Scalars['Time']['input']>;
  dueIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  dueIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  dueLT?: InputMaybe<Scalars['Time']['input']>;
  dueLTE?: InputMaybe<Scalars['Time']['input']>;
  dueNEQ?: InputMaybe<Scalars['Time']['input']>;
  dueNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  dueNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** assignee edge predicates */
  hasAssignee?: InputMaybe<Scalars['Boolean']['input']>;
  hasAssigneeWith?: InputMaybe<Array<UserWhereInput>>;
  /** assigner edge predicates */
  hasAssigner?: InputMaybe<Scalars['Boolean']['input']>;
  hasAssignerWith?: InputMaybe<Array<UserWhereInput>>;
  /** control edge predicates */
  hasControl?: InputMaybe<Scalars['Boolean']['input']>;
  /** control_objective edge predicates */
  hasControlObjective?: InputMaybe<Scalars['Boolean']['input']>;
  hasControlObjectiveWith?: InputMaybe<Array<ControlObjectiveWhereInput>>;
  hasControlWith?: InputMaybe<Array<ControlWhereInput>>;
  /** group edge predicates */
  hasGroup?: InputMaybe<Scalars['Boolean']['input']>;
  hasGroupWith?: InputMaybe<Array<GroupWhereInput>>;
  /** internal_policy edge predicates */
  hasInternalPolicy?: InputMaybe<Scalars['Boolean']['input']>;
  hasInternalPolicyWith?: InputMaybe<Array<InternalPolicyWhereInput>>;
  /** organization edge predicates */
  hasOrganization?: InputMaybe<Scalars['Boolean']['input']>;
  hasOrganizationWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** procedure edge predicates */
  hasProcedure?: InputMaybe<Scalars['Boolean']['input']>;
  hasProcedureWith?: InputMaybe<Array<ProcedureWhereInput>>;
  /** program edge predicates */
  hasProgram?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgramWith?: InputMaybe<Array<ProgramWhereInput>>;
  /** subcontrol edge predicates */
  hasSubcontrol?: InputMaybe<Scalars['Boolean']['input']>;
  hasSubcontrolWith?: InputMaybe<Array<SubcontrolWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<TaskWhereInput>;
  or?: InputMaybe<Array<TaskWhereInput>>;
  /** status field predicates */
  status?: InputMaybe<TaskTaskStatus>;
  statusIn?: InputMaybe<Array<TaskTaskStatus>>;
  statusNEQ?: InputMaybe<TaskTaskStatus>;
  statusNotIn?: InputMaybe<Array<TaskTaskStatus>>;
  /** title field predicates */
  title?: InputMaybe<Scalars['String']['input']>;
  titleContains?: InputMaybe<Scalars['String']['input']>;
  titleContainsFold?: InputMaybe<Scalars['String']['input']>;
  titleEqualFold?: InputMaybe<Scalars['String']['input']>;
  titleGT?: InputMaybe<Scalars['String']['input']>;
  titleGTE?: InputMaybe<Scalars['String']['input']>;
  titleHasPrefix?: InputMaybe<Scalars['String']['input']>;
  titleHasSuffix?: InputMaybe<Scalars['String']['input']>;
  titleIn?: InputMaybe<Array<Scalars['String']['input']>>;
  titleLT?: InputMaybe<Scalars['String']['input']>;
  titleLTE?: InputMaybe<Scalars['String']['input']>;
  titleNEQ?: InputMaybe<Scalars['String']['input']>;
  titleNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** TemplateDocumentType is enum for the field template_type */
export enum TemplateDocumentType {
  DOCUMENT = 'DOCUMENT',
  ROOTTEMPLATE = 'ROOTTEMPLATE'
}

/** TemplateHistoryDocumentType is enum for the field template_type */
export enum TemplateHistoryDocumentType {
  DOCUMENT = 'DOCUMENT',
  ROOTTEMPLATE = 'ROOTTEMPLATE'
}

/** TemplateHistoryOpType is enum for the field operation */
export enum TemplateHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** Ordering options for TemplateHistory connections */
export interface TemplateHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order TemplateHistories. */
  field: TemplateHistoryOrderField;
}

/** Properties by which TemplateHistory connections can be ordered. */
export enum TemplateHistoryOrderField {
  name = 'name'
}

/**
 * TemplateHistoryWhereInput is used for filtering TemplateHistory objects.
 * Input was generated by ent.
 */
export interface TemplateHistoryWhereInput {
  and?: InputMaybe<Array<TemplateHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<TemplateHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<TemplateHistoryOpType>;
  operationIn?: InputMaybe<Array<TemplateHistoryOpType>>;
  operationNEQ?: InputMaybe<TemplateHistoryOpType>;
  operationNotIn?: InputMaybe<Array<TemplateHistoryOpType>>;
  or?: InputMaybe<Array<TemplateHistoryWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['String']['input']>;
  ownerIDContains?: InputMaybe<Scalars['String']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerIDGT?: InputMaybe<Scalars['String']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['String']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['String']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** template_type field predicates */
  templateType?: InputMaybe<TemplateHistoryDocumentType>;
  templateTypeIn?: InputMaybe<Array<TemplateHistoryDocumentType>>;
  templateTypeNEQ?: InputMaybe<TemplateHistoryDocumentType>;
  templateTypeNotIn?: InputMaybe<Array<TemplateHistoryDocumentType>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** Ordering options for Template connections */
export interface TemplateOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order Templates. */
  field: TemplateOrderField;
}

/** Properties by which Template connections can be ordered. */
export enum TemplateOrderField {
  name = 'name'
}

/**
 * TemplateWhereInput is used for filtering Template objects.
 * Input was generated by ent.
 */
export interface TemplateWhereInput {
  and?: InputMaybe<Array<TemplateWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** documents edge predicates */
  hasDocuments?: InputMaybe<Scalars['Boolean']['input']>;
  hasDocumentsWith?: InputMaybe<Array<DocumentDataWhereInput>>;
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>;
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>;
  /** owner edge predicates */
  hasOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasOwnerWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<TemplateWhereInput>;
  or?: InputMaybe<Array<TemplateWhereInput>>;
  /** owner_id field predicates */
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContains?: InputMaybe<Scalars['ID']['input']>;
  ownerIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  ownerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerIDLT?: InputMaybe<Scalars['ID']['input']>;
  ownerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  ownerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  ownerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** template_type field predicates */
  templateType?: InputMaybe<TemplateDocumentType>;
  templateTypeIn?: InputMaybe<Array<TemplateDocumentType>>;
  templateTypeNEQ?: InputMaybe<TemplateDocumentType>;
  templateTypeNotIn?: InputMaybe<Array<TemplateDocumentType>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * UpdateAPITokenInput is used for update APIToken object.
 * Input was generated by ent.
 */
export interface UpdateApiTokenInput {
  appendScopes?: InputMaybe<Array<Scalars['String']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearLastUsedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>;
  clearScopes?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  /** a description of the token's purpose */
  description?: InputMaybe<Scalars['String']['input']>;
  lastUsedAt?: InputMaybe<Scalars['Time']['input']>;
  /** the name associated with the token */
  name?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  scopes?: InputMaybe<Array<Scalars['String']['input']>>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * UpdateActionPlanInput is used for update ActionPlan object.
 * Input was generated by ent.
 */
export interface UpdateActionPlanInput {
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addStandardIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  clearControl?: InputMaybe<Scalars['Boolean']['input']>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearDetails?: InputMaybe<Scalars['Boolean']['input']>;
  clearDueDate?: InputMaybe<Scalars['Boolean']['input']>;
  clearPriority?: InputMaybe<Scalars['Boolean']['input']>;
  clearProgram?: InputMaybe<Scalars['Boolean']['input']>;
  clearRisk?: InputMaybe<Scalars['Boolean']['input']>;
  clearSource?: InputMaybe<Scalars['Boolean']['input']>;
  clearStandard?: InputMaybe<Scalars['Boolean']['input']>;
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearUser?: InputMaybe<Scalars['Boolean']['input']>;
  /** description of the action plan */
  description?: InputMaybe<Scalars['String']['input']>;
  /** json data including details of the action plan */
  details?: InputMaybe<Scalars['Map']['input']>;
  /** due date of the action plan */
  dueDate?: InputMaybe<Scalars['Time']['input']>;
  /** the name of the action plan */
  name?: InputMaybe<Scalars['String']['input']>;
  /** priority of the action plan */
  priority?: InputMaybe<Scalars['String']['input']>;
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeStandardIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** source of the action plan */
  source?: InputMaybe<Scalars['String']['input']>;
  /** status of the action plan */
  status?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * UpdateContactInput is used for update Contact object.
 * Input was generated by ent.
 */
export interface UpdateContactInput {
  addEntityIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the address of the contact */
  address?: InputMaybe<Scalars['String']['input']>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  clearAddress?: InputMaybe<Scalars['Boolean']['input']>;
  clearCompany?: InputMaybe<Scalars['Boolean']['input']>;
  clearEmail?: InputMaybe<Scalars['Boolean']['input']>;
  clearEntities?: InputMaybe<Scalars['Boolean']['input']>;
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>;
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>;
  clearPhoneNumber?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearTitle?: InputMaybe<Scalars['Boolean']['input']>;
  /** the company of the contact */
  company?: InputMaybe<Scalars['String']['input']>;
  /** the email of the contact */
  email?: InputMaybe<Scalars['String']['input']>;
  /** the full name of the contact */
  fullName?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  /** the phone number of the contact */
  phoneNumber?: InputMaybe<Scalars['String']['input']>;
  removeEntityIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** status of the contact */
  status?: InputMaybe<ContactUserStatus>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** the title of the contact */
  title?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateControlInput is used for update Control object.
 * Input was generated by ent.
 */
export interface UpdateControlInput {
  addActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addStandardIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** class associated with the control */
  class?: InputMaybe<Scalars['String']['input']>;
  clearActionPlans?: InputMaybe<Scalars['Boolean']['input']>;
  clearBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  clearClass?: InputMaybe<Scalars['Boolean']['input']>;
  clearControlNumber?: InputMaybe<Scalars['Boolean']['input']>;
  clearControlObjectives?: InputMaybe<Scalars['Boolean']['input']>;
  clearControlType?: InputMaybe<Scalars['Boolean']['input']>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearDetails?: InputMaybe<Scalars['Boolean']['input']>;
  clearEditors?: InputMaybe<Scalars['Boolean']['input']>;
  clearFamily?: InputMaybe<Scalars['Boolean']['input']>;
  clearMappedFrameworks?: InputMaybe<Scalars['Boolean']['input']>;
  clearNarratives?: InputMaybe<Scalars['Boolean']['input']>;
  clearProcedures?: InputMaybe<Scalars['Boolean']['input']>;
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>;
  clearRisks?: InputMaybe<Scalars['Boolean']['input']>;
  clearSatisfies?: InputMaybe<Scalars['Boolean']['input']>;
  clearSource?: InputMaybe<Scalars['Boolean']['input']>;
  clearStandard?: InputMaybe<Scalars['Boolean']['input']>;
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>;
  clearSubcontrols?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearTasks?: InputMaybe<Scalars['Boolean']['input']>;
  clearVersion?: InputMaybe<Scalars['Boolean']['input']>;
  clearViewers?: InputMaybe<Scalars['Boolean']['input']>;
  /** control number or identifier */
  controlNumber?: InputMaybe<Scalars['String']['input']>;
  /** type of the control */
  controlType?: InputMaybe<Scalars['String']['input']>;
  /** description of the control */
  description?: InputMaybe<Scalars['String']['input']>;
  /** json data including details of the control */
  details?: InputMaybe<Scalars['Map']['input']>;
  /** family associated with the control */
  family?: InputMaybe<Scalars['String']['input']>;
  /** mapped frameworks */
  mappedFrameworks?: InputMaybe<Scalars['String']['input']>;
  /** the name of the control */
  name?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  removeActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeStandardIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** which control objectives are satisfied by the control */
  satisfies?: InputMaybe<Scalars['String']['input']>;
  /** source of the control, e.g. framework, template, custom, etc. */
  source?: InputMaybe<Scalars['String']['input']>;
  /** status of the control */
  status?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** version of the control */
  version?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateControlObjectiveInput is used for update ControlObjective object.
 * Input was generated by ent.
 */
export interface UpdateControlObjectiveInput {
  addBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addStandardIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** class associated with the control objective */
  class?: InputMaybe<Scalars['String']['input']>;
  clearBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  clearClass?: InputMaybe<Scalars['Boolean']['input']>;
  clearControlNumber?: InputMaybe<Scalars['Boolean']['input']>;
  clearControlObjectiveType?: InputMaybe<Scalars['Boolean']['input']>;
  clearControls?: InputMaybe<Scalars['Boolean']['input']>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearDetails?: InputMaybe<Scalars['Boolean']['input']>;
  clearEditors?: InputMaybe<Scalars['Boolean']['input']>;
  clearFamily?: InputMaybe<Scalars['Boolean']['input']>;
  clearInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>;
  clearMappedFrameworks?: InputMaybe<Scalars['Boolean']['input']>;
  clearNarratives?: InputMaybe<Scalars['Boolean']['input']>;
  clearProcedures?: InputMaybe<Scalars['Boolean']['input']>;
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>;
  clearRisks?: InputMaybe<Scalars['Boolean']['input']>;
  clearSource?: InputMaybe<Scalars['Boolean']['input']>;
  clearStandard?: InputMaybe<Scalars['Boolean']['input']>;
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>;
  clearSubcontrols?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearTasks?: InputMaybe<Scalars['Boolean']['input']>;
  clearVersion?: InputMaybe<Scalars['Boolean']['input']>;
  clearViewers?: InputMaybe<Scalars['Boolean']['input']>;
  /** number of the control objective */
  controlNumber?: InputMaybe<Scalars['String']['input']>;
  /** type of the control objective */
  controlObjectiveType?: InputMaybe<Scalars['String']['input']>;
  /** description of the control objective */
  description?: InputMaybe<Scalars['String']['input']>;
  /** json data including details of the control objective */
  details?: InputMaybe<Scalars['Map']['input']>;
  /** family of the control objective */
  family?: InputMaybe<Scalars['String']['input']>;
  /** mapped frameworks */
  mappedFrameworks?: InputMaybe<Scalars['String']['input']>;
  /** the name of the control objective */
  name?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  removeBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeStandardIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** source of the control objective, e.g. framework, template, user-defined, etc. */
  source?: InputMaybe<Scalars['String']['input']>;
  /** status of the control objective */
  status?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** version of the control objective */
  version?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateDocumentDataInput is used for update DocumentData object.
 * Input was generated by ent.
 */
export interface UpdateDocumentDataInput {
  addEntityIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  clearEntity?: InputMaybe<Scalars['Boolean']['input']>;
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>;
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  /** the json data of the document */
  data?: InputMaybe<Scalars['JSON']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  removeEntityIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  templateID?: InputMaybe<Scalars['ID']['input']>;
}

/**
 * UpdateEntityInput is used for update Entity object.
 * Input was generated by ent.
 */
export interface UpdateEntityInput {
  addContactIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addDocumentIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addNoteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendDomains?: InputMaybe<Array<Scalars['String']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  clearContacts?: InputMaybe<Scalars['Boolean']['input']>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearDisplayName?: InputMaybe<Scalars['Boolean']['input']>;
  clearDocuments?: InputMaybe<Scalars['Boolean']['input']>;
  clearDomains?: InputMaybe<Scalars['Boolean']['input']>;
  clearEntityType?: InputMaybe<Scalars['Boolean']['input']>;
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>;
  clearName?: InputMaybe<Scalars['Boolean']['input']>;
  clearNotes?: InputMaybe<Scalars['Boolean']['input']>;
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>;
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  /** An optional description of the entity */
  description?: InputMaybe<Scalars['String']['input']>;
  /** The entity's displayed 'friendly' name */
  displayName?: InputMaybe<Scalars['String']['input']>;
  /** domains associated with the entity */
  domains?: InputMaybe<Array<Scalars['String']['input']>>;
  entityTypeID?: InputMaybe<Scalars['ID']['input']>;
  /** the name of the entity */
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<CreateNoteInput>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  removeContactIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeDocumentIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeNoteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** status of the entity */
  status?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * UpdateEntityTypeInput is used for update EntityType object.
 * Input was generated by ent.
 */
export interface UpdateEntityTypeInput {
  addEntityIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  clearEntities?: InputMaybe<Scalars['Boolean']['input']>;
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  /** the name of the entity */
  name?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  removeEntityIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * UpdateEventInput is used for update Event object.
 * Input was generated by ent.
 */
export interface UpdateEventInput {
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addHushIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addInviteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addPersonalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addSubscriberIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  clearCorrelationID?: InputMaybe<Scalars['Boolean']['input']>;
  clearEventID?: InputMaybe<Scalars['Boolean']['input']>;
  clearFile?: InputMaybe<Scalars['Boolean']['input']>;
  clearGroup?: InputMaybe<Scalars['Boolean']['input']>;
  clearHush?: InputMaybe<Scalars['Boolean']['input']>;
  clearIntegration?: InputMaybe<Scalars['Boolean']['input']>;
  clearInvite?: InputMaybe<Scalars['Boolean']['input']>;
  clearMetadata?: InputMaybe<Scalars['Boolean']['input']>;
  clearOrganization?: InputMaybe<Scalars['Boolean']['input']>;
  clearPersonalAccessToken?: InputMaybe<Scalars['Boolean']['input']>;
  clearSubscriber?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearUser?: InputMaybe<Scalars['Boolean']['input']>;
  correlationID?: InputMaybe<Scalars['String']['input']>;
  eventID?: InputMaybe<Scalars['String']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['Map']['input']>;
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeHushIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeInviteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removePersonalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeSubscriberIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * UpdateFileInput is used for update File object.
 * Input was generated by ent.
 */
export interface UpdateFileInput {
  addContactIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addDocumentDatumIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addEntityIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addOrganizationSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addTemplateIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addUserSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** the category type of the file, if any (e.g. evidence, invoice, etc.) */
  categoryType?: InputMaybe<Scalars['String']['input']>;
  clearCategoryType?: InputMaybe<Scalars['Boolean']['input']>;
  clearContact?: InputMaybe<Scalars['Boolean']['input']>;
  clearDetectedMimeType?: InputMaybe<Scalars['Boolean']['input']>;
  clearDocumentData?: InputMaybe<Scalars['Boolean']['input']>;
  clearEntity?: InputMaybe<Scalars['Boolean']['input']>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearGroup?: InputMaybe<Scalars['Boolean']['input']>;
  clearMd5Hash?: InputMaybe<Scalars['Boolean']['input']>;
  clearOrganization?: InputMaybe<Scalars['Boolean']['input']>;
  clearOrganizationSetting?: InputMaybe<Scalars['Boolean']['input']>;
  clearPersistedFileSize?: InputMaybe<Scalars['Boolean']['input']>;
  clearProgram?: InputMaybe<Scalars['Boolean']['input']>;
  clearProvidedFileSize?: InputMaybe<Scalars['Boolean']['input']>;
  clearStoragePath?: InputMaybe<Scalars['Boolean']['input']>;
  clearStorageScheme?: InputMaybe<Scalars['Boolean']['input']>;
  clearStorageVolume?: InputMaybe<Scalars['Boolean']['input']>;
  clearStoreKey?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  clearURI?: InputMaybe<Scalars['Boolean']['input']>;
  clearUser?: InputMaybe<Scalars['Boolean']['input']>;
  clearUserSetting?: InputMaybe<Scalars['Boolean']['input']>;
  /** the content type of the HTTP request - may be different than MIME type as multipart-form can transmit multiple files and different types */
  detectedContentType?: InputMaybe<Scalars['String']['input']>;
  /** the mime type detected by the system */
  detectedMimeType?: InputMaybe<Scalars['String']['input']>;
  /** the computed md5 hash of the file calculated after we received the contents of the file, but before the file was written to permanent storage */
  md5Hash?: InputMaybe<Scalars['String']['input']>;
  persistedFileSize?: InputMaybe<Scalars['Int']['input']>;
  /** the extension of the file provided */
  providedFileExtension?: InputMaybe<Scalars['String']['input']>;
  /** the name of the file provided in the payload key without the extension */
  providedFileName?: InputMaybe<Scalars['String']['input']>;
  /** the computed size of the file in the original http request */
  providedFileSize?: InputMaybe<Scalars['Int']['input']>;
  removeContactIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeDocumentDatumIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeEntityIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeOrganizationSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeTemplateIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeUserSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the storage path is the second-level directory of the file path, typically the correlating logical object ID the file is associated with; files can be stand alone objects and not always correlated to a logical one, so this path of the tree may be empty */
  storagePath?: InputMaybe<Scalars['String']['input']>;
  /** the storage scheme of the file, e.g. file://, s3://, etc. */
  storageScheme?: InputMaybe<Scalars['String']['input']>;
  /** the storage volume of the file which typically will be the organization ID the file belongs to - this is not a literal volume but the overlay file system mapping */
  storageVolume?: InputMaybe<Scalars['String']['input']>;
  /** the key parsed out of a multipart-form request; if we allow multiple files to be uploaded we may want our API specifications to require the use of different keys allowing us to perform easier conditional evaluation on the key and what to do with the file based on key */
  storeKey?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** the full URI of the file */
  uri?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateGroupInput is used for update Group object.
 * Input was generated by ent.
 */
export interface UpdateGroupInput {
  addControlBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlObjectiveBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlObjectiveCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlObjectiveEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlObjectiveViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addGroupCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addGroupMembers?: InputMaybe<Array<CreateGroupMembershipInput>>;
  addIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addInternalPolicyBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addInternalPolicyCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addInternalPolicyEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addNarrativeBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addNarrativeCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addNarrativeEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addNarrativeViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProcedureBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProcedureCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProcedureEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProgramBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProgramCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProgramEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProgramViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addRiskBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addRiskCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addRiskEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addRiskViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addTemplateCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  clearControlBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  clearControlCreators?: InputMaybe<Scalars['Boolean']['input']>;
  clearControlEditors?: InputMaybe<Scalars['Boolean']['input']>;
  clearControlObjectiveBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  clearControlObjectiveCreators?: InputMaybe<Scalars['Boolean']['input']>;
  clearControlObjectiveEditors?: InputMaybe<Scalars['Boolean']['input']>;
  clearControlObjectiveViewers?: InputMaybe<Scalars['Boolean']['input']>;
  clearControlViewers?: InputMaybe<Scalars['Boolean']['input']>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>;
  clearGravatarLogoURL?: InputMaybe<Scalars['Boolean']['input']>;
  clearGroupCreators?: InputMaybe<Scalars['Boolean']['input']>;
  clearIntegrations?: InputMaybe<Scalars['Boolean']['input']>;
  clearInternalPolicyBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  clearInternalPolicyCreators?: InputMaybe<Scalars['Boolean']['input']>;
  clearInternalPolicyEditors?: InputMaybe<Scalars['Boolean']['input']>;
  clearLogoURL?: InputMaybe<Scalars['Boolean']['input']>;
  clearNarrativeBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  clearNarrativeCreators?: InputMaybe<Scalars['Boolean']['input']>;
  clearNarrativeEditors?: InputMaybe<Scalars['Boolean']['input']>;
  clearNarrativeViewers?: InputMaybe<Scalars['Boolean']['input']>;
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>;
  clearProcedureBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  clearProcedureCreators?: InputMaybe<Scalars['Boolean']['input']>;
  clearProcedureEditors?: InputMaybe<Scalars['Boolean']['input']>;
  clearProgramBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  clearProgramCreators?: InputMaybe<Scalars['Boolean']['input']>;
  clearProgramEditors?: InputMaybe<Scalars['Boolean']['input']>;
  clearProgramViewers?: InputMaybe<Scalars['Boolean']['input']>;
  clearRiskBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  clearRiskCreators?: InputMaybe<Scalars['Boolean']['input']>;
  clearRiskEditors?: InputMaybe<Scalars['Boolean']['input']>;
  clearRiskViewers?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearTasks?: InputMaybe<Scalars['Boolean']['input']>;
  clearTemplateCreators?: InputMaybe<Scalars['Boolean']['input']>;
  clearUsers?: InputMaybe<Scalars['Boolean']['input']>;
  /** the groups description */
  description?: InputMaybe<Scalars['String']['input']>;
  /** The group's displayed 'friendly' name */
  displayName?: InputMaybe<Scalars['String']['input']>;
  /** the URL to an auto generated gravatar image for the group */
  gravatarLogoURL?: InputMaybe<Scalars['String']['input']>;
  /** the URL to an image uploaded by the customer for the groups avatar image */
  logoURL?: InputMaybe<Scalars['String']['input']>;
  /** the name of the group - must be unique within the organization */
  name?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  removeControlBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlObjectiveBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlObjectiveCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlObjectiveEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlObjectiveViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeGroupCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeInternalPolicyBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeInternalPolicyCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeInternalPolicyEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeNarrativeBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeNarrativeCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeNarrativeEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeNarrativeViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProcedureBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProcedureCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProcedureEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProgramBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProgramCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProgramEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProgramViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeRiskBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeRiskCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeRiskEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeRiskViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeTemplateCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  settingID?: InputMaybe<Scalars['ID']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  updateGroupSettings?: InputMaybe<UpdateGroupSettingInput>;
}

/**
 * UpdateGroupMembershipInput is used for update GroupMembership object.
 * Input was generated by ent.
 */
export interface UpdateGroupMembershipInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  role?: InputMaybe<GroupMembershipRole>;
}

/**
 * UpdateGroupSettingInput is used for update GroupSetting object.
 * Input was generated by ent.
 */
export interface UpdateGroupSettingInput {
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  clearGroup?: InputMaybe<Scalars['Boolean']['input']>;
  clearSyncToGithub?: InputMaybe<Scalars['Boolean']['input']>;
  clearSyncToSlack?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  groupID?: InputMaybe<Scalars['ID']['input']>;
  /** the policy governing ability to freely join a group, whether it requires an invitation, application, or either */
  joinPolicy?: InputMaybe<GroupSettingJoinPolicy>;
  /** whether to sync group members to github groups */
  syncToGithub?: InputMaybe<Scalars['Boolean']['input']>;
  /** whether to sync group members to slack groups */
  syncToSlack?: InputMaybe<Scalars['Boolean']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** whether the group is visible to it's members / owners only or if it's searchable by anyone within the organization */
  visibility?: InputMaybe<GroupSettingVisibility>;
}

/**
 * UpdateHushInput is used for update Hush object.
 * Input was generated by ent.
 */
export interface UpdateHushInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearIntegrations?: InputMaybe<Scalars['Boolean']['input']>;
  clearKind?: InputMaybe<Scalars['Boolean']['input']>;
  clearOrganization?: InputMaybe<Scalars['Boolean']['input']>;
  /** a description of the hush value or purpose, such as github PAT */
  description?: InputMaybe<Scalars['String']['input']>;
  /** the kind of secret, such as sshkey, certificate, api token, etc. */
  kind?: InputMaybe<Scalars['String']['input']>;
  /** the logical name of the corresponding hush secret or it's general grouping */
  name?: InputMaybe<Scalars['String']['input']>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
}

/**
 * UpdateIntegrationInput is used for update Integration object.
 * Input was generated by ent.
 */
export interface UpdateIntegrationInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addSecretIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearKind?: InputMaybe<Scalars['Boolean']['input']>;
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>;
  clearSecrets?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  /** a description of the integration */
  description?: InputMaybe<Scalars['String']['input']>;
  kind?: InputMaybe<Scalars['String']['input']>;
  /** the name of the integration - must be unique within the organization */
  name?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeSecretIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * UpdateInternalPolicyInput is used for update InternalPolicy object.
 * Input was generated by ent.
 */
export interface UpdateInternalPolicyInput {
  addBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** background of the policy */
  background?: InputMaybe<Scalars['String']['input']>;
  clearBackground?: InputMaybe<Scalars['Boolean']['input']>;
  clearBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  clearControlObjectives?: InputMaybe<Scalars['Boolean']['input']>;
  clearControls?: InputMaybe<Scalars['Boolean']['input']>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearDetails?: InputMaybe<Scalars['Boolean']['input']>;
  clearEditors?: InputMaybe<Scalars['Boolean']['input']>;
  clearNarratives?: InputMaybe<Scalars['Boolean']['input']>;
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>;
  clearPolicyType?: InputMaybe<Scalars['Boolean']['input']>;
  clearProcedures?: InputMaybe<Scalars['Boolean']['input']>;
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>;
  clearPurposeAndScope?: InputMaybe<Scalars['Boolean']['input']>;
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearTasks?: InputMaybe<Scalars['Boolean']['input']>;
  clearVersion?: InputMaybe<Scalars['Boolean']['input']>;
  /** description of the policy */
  description?: InputMaybe<Scalars['String']['input']>;
  /** json data for the policy document */
  details?: InputMaybe<Scalars['Map']['input']>;
  /** the name of the policy */
  name?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  /** type of the policy */
  policyType?: InputMaybe<Scalars['String']['input']>;
  /** purpose and scope */
  purposeAndScope?: InputMaybe<Scalars['String']['input']>;
  removeBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** status of the policy */
  status?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** version of the policy */
  version?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateInviteInput is used for update Invite object.
 * Input was generated by ent.
 */
export interface UpdateInviteInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearExpires?: InputMaybe<Scalars['Boolean']['input']>;
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>;
  /** the expiration date of the invitation token which defaults to 14 days in the future from creation */
  expires?: InputMaybe<Scalars['Time']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  role?: InputMaybe<InviteRole>;
  /** the number of attempts made to perform email send of the invitation, maximum of 5 */
  sendAttempts?: InputMaybe<Scalars['Int']['input']>;
  /** the status of the invitation */
  status?: InputMaybe<InviteInviteStatus>;
}

/**
 * UpdateNarrativeInput is used for update Narrative object.
 * Input was generated by ent.
 */
export interface UpdateNarrativeInput {
  addBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  clearBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  clearControl?: InputMaybe<Scalars['Boolean']['input']>;
  clearControlObjective?: InputMaybe<Scalars['Boolean']['input']>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearDetails?: InputMaybe<Scalars['Boolean']['input']>;
  clearEditors?: InputMaybe<Scalars['Boolean']['input']>;
  clearInternalPolicy?: InputMaybe<Scalars['Boolean']['input']>;
  clearProcedure?: InputMaybe<Scalars['Boolean']['input']>;
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>;
  clearSatisfies?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearViewers?: InputMaybe<Scalars['Boolean']['input']>;
  /** the description of the narrative */
  description?: InputMaybe<Scalars['String']['input']>;
  /** json data for the narrative document */
  details?: InputMaybe<Scalars['Map']['input']>;
  /** the name of the narrative */
  name?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  removeBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** which controls are satisfied by the narrative */
  satisfies?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * UpdateNoteInput is used for update Note object.
 * Input was generated by ent.
 */
export interface UpdateNoteInput {
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  clearEntity?: InputMaybe<Scalars['Boolean']['input']>;
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>;
  clearProgram?: InputMaybe<Scalars['Boolean']['input']>;
  clearSubcontrols?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  entityID?: InputMaybe<Scalars['ID']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** the text of the note */
  text?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateOrgMembershipInput is used for update OrgMembership object.
 * Input was generated by ent.
 */
export interface UpdateOrgMembershipInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  role?: InputMaybe<OrgMembershipRole>;
}

/**
 * UpdateOrgSubscriptionInput is used for update OrgSubscription object.
 * Input was generated by ent.
 */
export interface UpdateOrgSubscriptionInput {
  /** indicates if the subscription is active */
  active?: InputMaybe<Scalars['Boolean']['input']>;
  appendFeatures?: InputMaybe<Array<Scalars['String']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  clearExpiresAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearFeatures?: InputMaybe<Scalars['Boolean']['input']>;
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>;
  clearProductTier?: InputMaybe<Scalars['Boolean']['input']>;
  clearStripeCustomerID?: InputMaybe<Scalars['Boolean']['input']>;
  clearStripeProductTierID?: InputMaybe<Scalars['Boolean']['input']>;
  clearStripeSubscriptionID?: InputMaybe<Scalars['Boolean']['input']>;
  clearStripeSubscriptionStatus?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  /** the time the subscription is set to expire; only populated if subscription is cancelled */
  expiresAt?: InputMaybe<Scalars['Time']['input']>;
  /** the features associated with the subscription */
  features?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  /** the common name of the product tier the subscription is associated with, e.g. starter tier */
  productTier?: InputMaybe<Scalars['String']['input']>;
  /** the customer ID the subscription is associated to */
  stripeCustomerID?: InputMaybe<Scalars['String']['input']>;
  /** the product id that represents the tier in stripe */
  stripeProductTierID?: InputMaybe<Scalars['String']['input']>;
  /** the stripe subscription id */
  stripeSubscriptionID?: InputMaybe<Scalars['String']['input']>;
  /** the status of the subscription in stripe -- see https://docs.stripe.com/api/subscriptions/object#subscription_object-status */
  stripeSubscriptionStatus?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * UpdateOrganizationInput is used for update Organization object.
 * Input was generated by ent.
 */
export interface UpdateOrganizationInput {
  addAPITokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addContactIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlObjectiveCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addDocumentDatumIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addEntityIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addEntityTypeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addGroupCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addInternalPolicyCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addInviteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addNarrativeCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addNoteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addOrgMembers?: InputMaybe<Array<CreateOrgMembershipInput>>;
  addOrgSubscriptionIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addPersonalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProcedureCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProgramCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addRiskCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addSecretIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addSubscriberIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addTemplateCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addTemplateIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** URL of the user's remote avatar */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>;
  clearAPITokens?: InputMaybe<Scalars['Boolean']['input']>;
  clearAvatarRemoteURL?: InputMaybe<Scalars['Boolean']['input']>;
  clearContacts?: InputMaybe<Scalars['Boolean']['input']>;
  clearControlCreators?: InputMaybe<Scalars['Boolean']['input']>;
  clearControlObjectiveCreators?: InputMaybe<Scalars['Boolean']['input']>;
  clearControlObjectives?: InputMaybe<Scalars['Boolean']['input']>;
  clearControls?: InputMaybe<Scalars['Boolean']['input']>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearDocumentData?: InputMaybe<Scalars['Boolean']['input']>;
  clearEntities?: InputMaybe<Scalars['Boolean']['input']>;
  clearEntityTypes?: InputMaybe<Scalars['Boolean']['input']>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>;
  clearGroupCreators?: InputMaybe<Scalars['Boolean']['input']>;
  clearGroups?: InputMaybe<Scalars['Boolean']['input']>;
  clearIntegrations?: InputMaybe<Scalars['Boolean']['input']>;
  clearInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>;
  clearInternalPolicyCreators?: InputMaybe<Scalars['Boolean']['input']>;
  clearInvites?: InputMaybe<Scalars['Boolean']['input']>;
  clearNarrativeCreators?: InputMaybe<Scalars['Boolean']['input']>;
  clearNarratives?: InputMaybe<Scalars['Boolean']['input']>;
  clearNotes?: InputMaybe<Scalars['Boolean']['input']>;
  clearOrgSubscriptions?: InputMaybe<Scalars['Boolean']['input']>;
  clearPersonalAccessTokens?: InputMaybe<Scalars['Boolean']['input']>;
  clearProcedureCreators?: InputMaybe<Scalars['Boolean']['input']>;
  clearProcedures?: InputMaybe<Scalars['Boolean']['input']>;
  clearProgramCreators?: InputMaybe<Scalars['Boolean']['input']>;
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>;
  clearRiskCreators?: InputMaybe<Scalars['Boolean']['input']>;
  clearRisks?: InputMaybe<Scalars['Boolean']['input']>;
  clearSecrets?: InputMaybe<Scalars['Boolean']['input']>;
  clearSetting?: InputMaybe<Scalars['Boolean']['input']>;
  clearSubcontrols?: InputMaybe<Scalars['Boolean']['input']>;
  clearSubscribers?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearTasks?: InputMaybe<Scalars['Boolean']['input']>;
  clearTemplateCreators?: InputMaybe<Scalars['Boolean']['input']>;
  clearTemplates?: InputMaybe<Scalars['Boolean']['input']>;
  clearUsers?: InputMaybe<Scalars['Boolean']['input']>;
  /** An optional description of the organization */
  description?: InputMaybe<Scalars['String']['input']>;
  /** The organization's displayed 'friendly' name */
  displayName?: InputMaybe<Scalars['String']['input']>;
  /** the name of the organization */
  name?: InputMaybe<Scalars['String']['input']>;
  removeAPITokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeContactIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlObjectiveCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeDocumentDatumIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeEntityIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeEntityTypeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeGroupCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeIntegrationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeInternalPolicyCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeInviteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeNarrativeCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeNoteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeOrgSubscriptionIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removePersonalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProcedureCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProgramCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeRiskCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeSecretIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeSubscriberIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeTemplateCreatorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeTemplateIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  settingID?: InputMaybe<Scalars['ID']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  updateOrgSettings?: InputMaybe<UpdateOrganizationSettingInput>;
}

/**
 * UpdateOrganizationSettingInput is used for update OrganizationSetting object.
 * Input was generated by ent.
 */
export interface UpdateOrganizationSettingInput {
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendDomains?: InputMaybe<Array<Scalars['String']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Address to send billing information to */
  billingAddress?: InputMaybe<Scalars['String']['input']>;
  /** Name of the person to contact for billing */
  billingContact?: InputMaybe<Scalars['String']['input']>;
  /** Email address of the person to contact for billing */
  billingEmail?: InputMaybe<Scalars['String']['input']>;
  /** Phone number to contact for billing */
  billingPhone?: InputMaybe<Scalars['String']['input']>;
  clearBillingAddress?: InputMaybe<Scalars['Boolean']['input']>;
  clearBillingContact?: InputMaybe<Scalars['Boolean']['input']>;
  clearBillingEmail?: InputMaybe<Scalars['Boolean']['input']>;
  clearBillingPhone?: InputMaybe<Scalars['Boolean']['input']>;
  clearDomains?: InputMaybe<Scalars['Boolean']['input']>;
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>;
  clearGeoLocation?: InputMaybe<Scalars['Boolean']['input']>;
  clearOrganization?: InputMaybe<Scalars['Boolean']['input']>;
  clearStripeID?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearTaxIdentifier?: InputMaybe<Scalars['Boolean']['input']>;
  /** domains associated with the organization */
  domains?: InputMaybe<Array<Scalars['String']['input']>>;
  /** geographical location of the organization */
  geoLocation?: InputMaybe<OrganizationSettingRegion>;
  organizationID?: InputMaybe<Scalars['ID']['input']>;
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the ID of the stripe customer associated with the organization */
  stripeID?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Usually government-issued tax ID or business ID such as ABN in Australia */
  taxIdentifier?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdatePersonalAccessTokenInput is used for update PersonalAccessToken object.
 * Input was generated by ent.
 */
export interface UpdatePersonalAccessTokenInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendScopes?: InputMaybe<Array<Scalars['String']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearLastUsedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearOrganizations?: InputMaybe<Scalars['Boolean']['input']>;
  clearScopes?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  /** a description of the token's purpose */
  description?: InputMaybe<Scalars['String']['input']>;
  lastUsedAt?: InputMaybe<Scalars['Time']['input']>;
  /** the name associated with the token */
  name?: InputMaybe<Scalars['String']['input']>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  scopes?: InputMaybe<Array<Scalars['String']['input']>>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * UpdateProcedureInput is used for update Procedure object.
 * Input was generated by ent.
 */
export interface UpdateProcedureInput {
  addBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** background of the procedure */
  background?: InputMaybe<Scalars['String']['input']>;
  clearBackground?: InputMaybe<Scalars['Boolean']['input']>;
  clearBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  clearControls?: InputMaybe<Scalars['Boolean']['input']>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearDetails?: InputMaybe<Scalars['Boolean']['input']>;
  clearEditors?: InputMaybe<Scalars['Boolean']['input']>;
  clearInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>;
  clearNarratives?: InputMaybe<Scalars['Boolean']['input']>;
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>;
  clearProcedureType?: InputMaybe<Scalars['Boolean']['input']>;
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>;
  clearPurposeAndScope?: InputMaybe<Scalars['Boolean']['input']>;
  clearRisks?: InputMaybe<Scalars['Boolean']['input']>;
  clearSatisfies?: InputMaybe<Scalars['Boolean']['input']>;
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearTasks?: InputMaybe<Scalars['Boolean']['input']>;
  clearVersion?: InputMaybe<Scalars['Boolean']['input']>;
  /** description of the procedure */
  description?: InputMaybe<Scalars['String']['input']>;
  /** json data for the procedure document */
  details?: InputMaybe<Scalars['Map']['input']>;
  /** the name of the procedure */
  name?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  /** type of the procedure */
  procedureType?: InputMaybe<Scalars['String']['input']>;
  /** purpose and scope */
  purposeAndScope?: InputMaybe<Scalars['String']['input']>;
  removeBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** which controls are satisfied by the procedure */
  satisfies?: InputMaybe<Scalars['String']['input']>;
  /** status of the procedure */
  status?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** version of the procedure */
  version?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateProgramInput is used for update Program object.
 * Input was generated by ent.
 */
export interface UpdateProgramInput {
  addActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addNoteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProgramMembers?: InputMaybe<Array<CreateProgramMembershipInput>>;
  addRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addStandardIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** can the auditor read comments */
  auditorReadComments?: InputMaybe<Scalars['Boolean']['input']>;
  /** is the program ready for the auditor */
  auditorReady?: InputMaybe<Scalars['Boolean']['input']>;
  /** can the auditor write comments */
  auditorWriteComments?: InputMaybe<Scalars['Boolean']['input']>;
  clearActionPlans?: InputMaybe<Scalars['Boolean']['input']>;
  clearBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  clearControlObjectives?: InputMaybe<Scalars['Boolean']['input']>;
  clearControls?: InputMaybe<Scalars['Boolean']['input']>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearEditors?: InputMaybe<Scalars['Boolean']['input']>;
  clearEndDate?: InputMaybe<Scalars['Boolean']['input']>;
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>;
  clearInternalPolicies?: InputMaybe<Scalars['Boolean']['input']>;
  clearNarratives?: InputMaybe<Scalars['Boolean']['input']>;
  clearNotes?: InputMaybe<Scalars['Boolean']['input']>;
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>;
  clearProcedures?: InputMaybe<Scalars['Boolean']['input']>;
  clearRisks?: InputMaybe<Scalars['Boolean']['input']>;
  clearStandards?: InputMaybe<Scalars['Boolean']['input']>;
  clearStartDate?: InputMaybe<Scalars['Boolean']['input']>;
  clearSubcontrols?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearTasks?: InputMaybe<Scalars['Boolean']['input']>;
  clearUsers?: InputMaybe<Scalars['Boolean']['input']>;
  clearViewers?: InputMaybe<Scalars['Boolean']['input']>;
  /** the description of the program */
  description?: InputMaybe<Scalars['String']['input']>;
  /** the end date of the period */
  endDate?: InputMaybe<Scalars['Time']['input']>;
  /** the name of the program */
  name?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  removeActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeNarrativeIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeNoteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeRiskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeStandardIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the start date of the period */
  startDate?: InputMaybe<Scalars['Time']['input']>;
  /** the status of the program */
  status?: InputMaybe<ProgramProgramStatus>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * UpdateProgramMembershipInput is used for update ProgramMembership object.
 * Input was generated by ent.
 */
export interface UpdateProgramMembershipInput {
  role?: InputMaybe<ProgramMembershipRole>;
}

/**
 * UpdateRiskInput is used for update Risk object.
 * Input was generated by ent.
 */
export interface UpdateRiskInput {
  addActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** business costs associated with the risk */
  businessCosts?: InputMaybe<Scalars['String']['input']>;
  clearActionPlans?: InputMaybe<Scalars['Boolean']['input']>;
  clearBlockedGroups?: InputMaybe<Scalars['Boolean']['input']>;
  clearBusinessCosts?: InputMaybe<Scalars['Boolean']['input']>;
  clearControl?: InputMaybe<Scalars['Boolean']['input']>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearDetails?: InputMaybe<Scalars['Boolean']['input']>;
  clearEditors?: InputMaybe<Scalars['Boolean']['input']>;
  clearImpact?: InputMaybe<Scalars['Boolean']['input']>;
  clearLikelihood?: InputMaybe<Scalars['Boolean']['input']>;
  clearMitigation?: InputMaybe<Scalars['Boolean']['input']>;
  clearProcedure?: InputMaybe<Scalars['Boolean']['input']>;
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>;
  clearRiskType?: InputMaybe<Scalars['Boolean']['input']>;
  clearSatisfies?: InputMaybe<Scalars['Boolean']['input']>;
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearViewers?: InputMaybe<Scalars['Boolean']['input']>;
  /** description of the risk */
  description?: InputMaybe<Scalars['String']['input']>;
  /** json data for the risk document */
  details?: InputMaybe<Scalars['Map']['input']>;
  /** impact of the risk - high, medium, low */
  impact?: InputMaybe<RiskRiskImpact>;
  /** likelihood of the risk occurring; unlikely, likely, highly likely */
  likelihood?: InputMaybe<RiskRiskLikelihood>;
  /** mitigation for the risk */
  mitigation?: InputMaybe<Scalars['String']['input']>;
  /** the name of the risk */
  name?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  removeActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeBlockedGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeEditorIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeViewerIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** type of the risk, e.g. strategic, operational, financial, external, etc. */
  riskType?: InputMaybe<Scalars['String']['input']>;
  /** which controls are satisfied by the risk */
  satisfies?: InputMaybe<Scalars['String']['input']>;
  /** status of the risk - mitigated or not, inflight, etc. */
  status?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * UpdateStandardInput is used for update Standard object.
 * Input was generated by ent.
 */
export interface UpdateStandardInput {
  addActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** background of the standard */
  background?: InputMaybe<Scalars['String']['input']>;
  clearActionPlans?: InputMaybe<Scalars['Boolean']['input']>;
  clearBackground?: InputMaybe<Scalars['Boolean']['input']>;
  clearControlObjectives?: InputMaybe<Scalars['Boolean']['input']>;
  clearControls?: InputMaybe<Scalars['Boolean']['input']>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearDetails?: InputMaybe<Scalars['Boolean']['input']>;
  clearFamily?: InputMaybe<Scalars['Boolean']['input']>;
  clearProcedures?: InputMaybe<Scalars['Boolean']['input']>;
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>;
  clearPurposeAndScope?: InputMaybe<Scalars['Boolean']['input']>;
  clearSatisfies?: InputMaybe<Scalars['Boolean']['input']>;
  clearStandardType?: InputMaybe<Scalars['Boolean']['input']>;
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearVersion?: InputMaybe<Scalars['Boolean']['input']>;
  /** description of the standard */
  description?: InputMaybe<Scalars['String']['input']>;
  /** json data with details of the standard */
  details?: InputMaybe<Scalars['Map']['input']>;
  /** family of the standard, e.g. 800-53, 800-171, 27001, etc. */
  family?: InputMaybe<Scalars['String']['input']>;
  /** the name of the standard body, e.g. TSC, NIST, SOC, HITRUST, FedRamp, etc. */
  name?: InputMaybe<Scalars['String']['input']>;
  /** purpose and scope */
  purposeAndScope?: InputMaybe<Scalars['String']['input']>;
  removeActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** which controls are satisfied by the standard */
  satisfies?: InputMaybe<Scalars['String']['input']>;
  /** type of the standard - security, privacy, etc. */
  standardType?: InputMaybe<Scalars['String']['input']>;
  /** status of the standard - active, deprecated, etc. */
  status?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** version of the standard */
  version?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateSubcontrolInput is used for update Subcontrol object.
 * Input was generated by ent.
 */
export interface UpdateSubcontrolInput {
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** subcontrol class */
  class?: InputMaybe<Scalars['String']['input']>;
  clearClass?: InputMaybe<Scalars['Boolean']['input']>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearDetails?: InputMaybe<Scalars['Boolean']['input']>;
  clearFamily?: InputMaybe<Scalars['Boolean']['input']>;
  clearImplementationDate?: InputMaybe<Scalars['Boolean']['input']>;
  clearImplementationEvidence?: InputMaybe<Scalars['Boolean']['input']>;
  clearImplementationStatus?: InputMaybe<Scalars['Boolean']['input']>;
  clearImplementationVerification?: InputMaybe<Scalars['Boolean']['input']>;
  clearImplementationVerificationDate?: InputMaybe<Scalars['Boolean']['input']>;
  clearMappedFrameworks?: InputMaybe<Scalars['Boolean']['input']>;
  clearNotes?: InputMaybe<Scalars['Boolean']['input']>;
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>;
  clearSource?: InputMaybe<Scalars['Boolean']['input']>;
  clearStatus?: InputMaybe<Scalars['Boolean']['input']>;
  clearSubcontrolNumber?: InputMaybe<Scalars['Boolean']['input']>;
  clearSubcontrolType?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearTasks?: InputMaybe<Scalars['Boolean']['input']>;
  clearUser?: InputMaybe<Scalars['Boolean']['input']>;
  clearVersion?: InputMaybe<Scalars['Boolean']['input']>;
  /** description of the subcontrol */
  description?: InputMaybe<Scalars['String']['input']>;
  /** json data details of the subcontrol */
  details?: InputMaybe<Scalars['Map']['input']>;
  /** subcontrol family */
  family?: InputMaybe<Scalars['String']['input']>;
  /** date the subcontrol was implemented */
  implementationDate?: InputMaybe<Scalars['Time']['input']>;
  /** implementation evidence of the subcontrol */
  implementationEvidence?: InputMaybe<Scalars['String']['input']>;
  /** implementation status */
  implementationStatus?: InputMaybe<Scalars['String']['input']>;
  /** implementation verification */
  implementationVerification?: InputMaybe<Scalars['String']['input']>;
  /** date the subcontrol implementation was verified */
  implementationVerificationDate?: InputMaybe<Scalars['Time']['input']>;
  /** mapped frameworks that the subcontrol is part of */
  mappedFrameworks?: InputMaybe<Scalars['String']['input']>;
  /** the name of the subcontrol */
  name?: InputMaybe<Scalars['String']['input']>;
  notesID?: InputMaybe<Scalars['ID']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeUserIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** source of the control, e.g. framework, template, user-defined, etc. */
  source?: InputMaybe<Scalars['String']['input']>;
  /** status of the subcontrol */
  status?: InputMaybe<Scalars['String']['input']>;
  /** number of the subcontrol */
  subcontrolNumber?: InputMaybe<Scalars['String']['input']>;
  /** type of the subcontrol */
  subcontrolType?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** version of the control */
  version?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateSubscriberInput is used for update Subscriber object.
 * Input was generated by ent.
 */
export interface UpdateSubscriberInput {
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>;
  clearPhoneNumber?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  /** email address of the subscriber */
  email?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  /** phone number of the subscriber */
  phoneNumber?: InputMaybe<Scalars['String']['input']>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * UpdateTFASettingInput is used for update TFASetting object.
 * Input was generated by ent.
 */
export interface UpdateTfaSettingInput {
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearTotpAllowed?: InputMaybe<Scalars['Boolean']['input']>;
  /** Whether to regenerate backup codes */
  regenBackupCodes?: InputMaybe<Scalars['Boolean']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** specifies a user may complete authentication by verifying a TOTP code delivered through an authenticator app */
  totpAllowed?: InputMaybe<Scalars['Boolean']['input']>;
  /** specifies if the TFA device has been verified */
  verified?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * UpdateTaskInput is used for update Task object.
 * Input was generated by ent.
 */
export interface UpdateTaskInput {
  addControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  assigneeID?: InputMaybe<Scalars['ID']['input']>;
  assignerID?: InputMaybe<Scalars['ID']['input']>;
  clearAssignee?: InputMaybe<Scalars['Boolean']['input']>;
  clearCompleted?: InputMaybe<Scalars['Boolean']['input']>;
  clearControl?: InputMaybe<Scalars['Boolean']['input']>;
  clearControlObjective?: InputMaybe<Scalars['Boolean']['input']>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearDetails?: InputMaybe<Scalars['Boolean']['input']>;
  clearDue?: InputMaybe<Scalars['Boolean']['input']>;
  clearGroup?: InputMaybe<Scalars['Boolean']['input']>;
  clearInternalPolicy?: InputMaybe<Scalars['Boolean']['input']>;
  clearOrganization?: InputMaybe<Scalars['Boolean']['input']>;
  clearProcedure?: InputMaybe<Scalars['Boolean']['input']>;
  clearProgram?: InputMaybe<Scalars['Boolean']['input']>;
  clearSubcontrol?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  /** the completion date of the task */
  completed?: InputMaybe<Scalars['Time']['input']>;
  /** the description of the task */
  description?: InputMaybe<Scalars['String']['input']>;
  /** the details of the task */
  details?: InputMaybe<Scalars['Map']['input']>;
  /** the due date of the task */
  due?: InputMaybe<Scalars['Time']['input']>;
  removeControlIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeControlObjectiveIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeInternalPolicyIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProcedureIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the status of the task */
  status?: InputMaybe<TaskTaskStatus>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** the title of the task */
  title?: InputMaybe<Scalars['String']['input']>;
}

/**
 * UpdateTemplateInput is used for update Template object.
 * Input was generated by ent.
 */
export interface UpdateTemplateInput {
  addDocumentIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  clearDescription?: InputMaybe<Scalars['Boolean']['input']>;
  clearDocuments?: InputMaybe<Scalars['Boolean']['input']>;
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>;
  clearOwner?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearUischema?: InputMaybe<Scalars['Boolean']['input']>;
  /** the description of the template */
  description?: InputMaybe<Scalars['String']['input']>;
  /** the jsonschema object of the template */
  jsonconfig?: InputMaybe<Scalars['JSON']['input']>;
  /** the name of the template */
  name?: InputMaybe<Scalars['String']['input']>;
  ownerID?: InputMaybe<Scalars['ID']['input']>;
  removeDocumentIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** the type of the template, either a provided template or an implementation (document) */
  templateType?: InputMaybe<TemplateDocumentType>;
  /** the uischema for the template to render in the UI */
  uischema?: InputMaybe<Scalars['JSON']['input']>;
}

/**
 * UpdateUserInput is used for update User object.
 * Input was generated by ent.
 */
export interface UpdateUserInput {
  addActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addAssigneeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addAssignerTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addEmailVerificationTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addPasswordResetTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addPersonalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addTfaSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addWebauthnIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  /** auth provider used to register the account */
  authProvider?: InputMaybe<UserAuthProvider>;
  /** The user's local avatar file */
  avatarLocalFile?: InputMaybe<Scalars['String']['input']>;
  /** URL of the user's remote avatar */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>;
  /** The time the user's (local) avatar was last updated */
  avatarUpdatedAt?: InputMaybe<Scalars['Time']['input']>;
  clearActionPlans?: InputMaybe<Scalars['Boolean']['input']>;
  clearAssigneeTasks?: InputMaybe<Scalars['Boolean']['input']>;
  clearAssignerTasks?: InputMaybe<Scalars['Boolean']['input']>;
  clearAvatarLocalFile?: InputMaybe<Scalars['Boolean']['input']>;
  clearAvatarRemoteURL?: InputMaybe<Scalars['Boolean']['input']>;
  clearAvatarUpdatedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearEmailVerificationTokens?: InputMaybe<Scalars['Boolean']['input']>;
  clearEvents?: InputMaybe<Scalars['Boolean']['input']>;
  clearFile?: InputMaybe<Scalars['Boolean']['input']>;
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>;
  clearFirstName?: InputMaybe<Scalars['Boolean']['input']>;
  clearGroups?: InputMaybe<Scalars['Boolean']['input']>;
  clearLastName?: InputMaybe<Scalars['Boolean']['input']>;
  clearLastSeen?: InputMaybe<Scalars['Boolean']['input']>;
  clearOrganizations?: InputMaybe<Scalars['Boolean']['input']>;
  clearPassword?: InputMaybe<Scalars['Boolean']['input']>;
  clearPasswordResetTokens?: InputMaybe<Scalars['Boolean']['input']>;
  clearPersonalAccessTokens?: InputMaybe<Scalars['Boolean']['input']>;
  clearPrograms?: InputMaybe<Scalars['Boolean']['input']>;
  clearRole?: InputMaybe<Scalars['Boolean']['input']>;
  clearSub?: InputMaybe<Scalars['Boolean']['input']>;
  clearSubcontrols?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearTfaSettings?: InputMaybe<Scalars['Boolean']['input']>;
  clearWebauthn?: InputMaybe<Scalars['Boolean']['input']>;
  /** The user's displayed 'friendly' name */
  displayName?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  fileID?: InputMaybe<Scalars['ID']['input']>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  /** the time the user was last seen */
  lastSeen?: InputMaybe<Scalars['Time']['input']>;
  /** user password hash */
  password?: InputMaybe<Scalars['String']['input']>;
  removeActionPlanIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeAssigneeTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeAssignerTaskIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeEmailVerificationTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeEventIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeGroupIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeOrganizationIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removePasswordResetTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removePersonalAccessTokenIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProgramIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeSubcontrolIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeTfaSettingIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeWebauthnIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** the user's role */
  role?: InputMaybe<UserRole>;
  settingID?: InputMaybe<Scalars['ID']['input']>;
  /** the Subject of the user JWT */
  sub?: InputMaybe<Scalars['String']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
}

/**
 * UpdateUserSettingInput is used for update UserSetting object.
 * Input was generated by ent.
 */
export interface UpdateUserSettingInput {
  addFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  appendTags?: InputMaybe<Array<Scalars['String']['input']>>;
  clearDefaultOrg?: InputMaybe<Scalars['Boolean']['input']>;
  clearFiles?: InputMaybe<Scalars['Boolean']['input']>;
  clearIsTfaEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  clearIsWebauthnAllowed?: InputMaybe<Scalars['Boolean']['input']>;
  clearSilencedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearSuspendedAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearTags?: InputMaybe<Scalars['Boolean']['input']>;
  clearUser?: InputMaybe<Scalars['Boolean']['input']>;
  defaultOrgID?: InputMaybe<Scalars['ID']['input']>;
  /** whether the user has confirmed their email address */
  emailConfirmed?: InputMaybe<Scalars['Boolean']['input']>;
  /** whether the user has two factor authentication enabled */
  isTfaEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  /** specifies a user may complete authentication by verifying a WebAuthn capable device */
  isWebauthnAllowed?: InputMaybe<Scalars['Boolean']['input']>;
  /** user account is locked if unconfirmed or explicitly locked */
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  removeFileIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** The time notifications regarding the user were silenced */
  silencedAt?: InputMaybe<Scalars['Time']['input']>;
  /** status of the user account */
  status?: InputMaybe<UserSettingUserStatus>;
  /** The time the user was suspended */
  suspendedAt?: InputMaybe<Scalars['Time']['input']>;
  /** tags associated with the object */
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  userID?: InputMaybe<Scalars['ID']['input']>;
}

/** UserAuthProvider is enum for the field auth_provider */
export enum UserAuthProvider {
  CREDENTIALS = 'CREDENTIALS',
  GITHUB = 'GITHUB',
  GOOGLE = 'GOOGLE',
  WEBAUTHN = 'WEBAUTHN'
}

/** UserHistoryAuthProvider is enum for the field auth_provider */
export enum UserHistoryAuthProvider {
  CREDENTIALS = 'CREDENTIALS',
  GITHUB = 'GITHUB',
  GOOGLE = 'GOOGLE',
  WEBAUTHN = 'WEBAUTHN'
}

/** UserHistoryOpType is enum for the field operation */
export enum UserHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** Ordering options for UserHistory connections */
export interface UserHistoryOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order UserHistories. */
  field: UserHistoryOrderField;
}

/** Properties by which UserHistory connections can be ordered. */
export enum UserHistoryOrderField {
  display_name = 'display_name',
  first_name = 'first_name',
  last_name = 'last_name'
}

/** UserHistoryRole is enum for the field role */
export enum UserHistoryRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER',
  USER = 'USER'
}

/**
 * UserHistoryWhereInput is used for filtering UserHistory objects.
 * Input was generated by ent.
 */
export interface UserHistoryWhereInput {
  and?: InputMaybe<Array<UserHistoryWhereInput>>;
  /** auth_provider field predicates */
  authProvider?: InputMaybe<UserHistoryAuthProvider>;
  authProviderIn?: InputMaybe<Array<UserHistoryAuthProvider>>;
  authProviderNEQ?: InputMaybe<UserHistoryAuthProvider>;
  authProviderNotIn?: InputMaybe<Array<UserHistoryAuthProvider>>;
  /** avatar_local_file field predicates */
  avatarLocalFile?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileContains?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileContainsFold?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileEqualFold?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileGT?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileGTE?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileHasPrefix?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileHasSuffix?: InputMaybe<Scalars['String']['input']>;
  /** avatar_local_file_id field predicates */
  avatarLocalFileID?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileIDContains?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileIDGT?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileIDGTE?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarLocalFileIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  avatarLocalFileIDLT?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileIDLTE?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileIDNEQ?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarLocalFileIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  avatarLocalFileIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarLocalFileIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  avatarLocalFileLT?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileLTE?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileNEQ?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarLocalFileNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** avatar_remote_url field predicates */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLContains?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLGT?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLGTE?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarRemoteURLIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  avatarRemoteURLLT?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLLTE?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLNEQ?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarRemoteURLNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** avatar_updated_at field predicates */
  avatarUpdatedAt?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  avatarUpdatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  avatarUpdatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  avatarUpdatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayNameContains?: InputMaybe<Scalars['String']['input']>;
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  displayNameGT?: InputMaybe<Scalars['String']['input']>;
  displayNameGTE?: InputMaybe<Scalars['String']['input']>;
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  displayNameLT?: InputMaybe<Scalars['String']['input']>;
  displayNameLTE?: InputMaybe<Scalars['String']['input']>;
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>;
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** email field predicates */
  email?: InputMaybe<Scalars['String']['input']>;
  emailContains?: InputMaybe<Scalars['String']['input']>;
  emailContainsFold?: InputMaybe<Scalars['String']['input']>;
  emailEqualFold?: InputMaybe<Scalars['String']['input']>;
  emailGT?: InputMaybe<Scalars['String']['input']>;
  emailGTE?: InputMaybe<Scalars['String']['input']>;
  emailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  emailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  emailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  emailLT?: InputMaybe<Scalars['String']['input']>;
  emailLTE?: InputMaybe<Scalars['String']['input']>;
  emailNEQ?: InputMaybe<Scalars['String']['input']>;
  emailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** first_name field predicates */
  firstName?: InputMaybe<Scalars['String']['input']>;
  firstNameContains?: InputMaybe<Scalars['String']['input']>;
  firstNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  firstNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  firstNameGT?: InputMaybe<Scalars['String']['input']>;
  firstNameGTE?: InputMaybe<Scalars['String']['input']>;
  firstNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  firstNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  firstNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  firstNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  firstNameLT?: InputMaybe<Scalars['String']['input']>;
  firstNameLTE?: InputMaybe<Scalars['String']['input']>;
  firstNameNEQ?: InputMaybe<Scalars['String']['input']>;
  firstNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  firstNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** last_name field predicates */
  lastName?: InputMaybe<Scalars['String']['input']>;
  lastNameContains?: InputMaybe<Scalars['String']['input']>;
  lastNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  lastNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  lastNameGT?: InputMaybe<Scalars['String']['input']>;
  lastNameGTE?: InputMaybe<Scalars['String']['input']>;
  lastNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  lastNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  lastNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  lastNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  lastNameLT?: InputMaybe<Scalars['String']['input']>;
  lastNameLTE?: InputMaybe<Scalars['String']['input']>;
  lastNameNEQ?: InputMaybe<Scalars['String']['input']>;
  lastNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  lastNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** last_seen field predicates */
  lastSeen?: InputMaybe<Scalars['Time']['input']>;
  lastSeenGT?: InputMaybe<Scalars['Time']['input']>;
  lastSeenGTE?: InputMaybe<Scalars['Time']['input']>;
  lastSeenIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  lastSeenIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  lastSeenLT?: InputMaybe<Scalars['Time']['input']>;
  lastSeenLTE?: InputMaybe<Scalars['Time']['input']>;
  lastSeenNEQ?: InputMaybe<Scalars['Time']['input']>;
  lastSeenNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  lastSeenNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<UserHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<UserHistoryOpType>;
  operationIn?: InputMaybe<Array<UserHistoryOpType>>;
  operationNEQ?: InputMaybe<UserHistoryOpType>;
  operationNotIn?: InputMaybe<Array<UserHistoryOpType>>;
  or?: InputMaybe<Array<UserHistoryWhereInput>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** role field predicates */
  role?: InputMaybe<UserHistoryRole>;
  roleIn?: InputMaybe<Array<UserHistoryRole>>;
  roleIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  roleNEQ?: InputMaybe<UserHistoryRole>;
  roleNotIn?: InputMaybe<Array<UserHistoryRole>>;
  roleNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** sub field predicates */
  sub?: InputMaybe<Scalars['String']['input']>;
  subContains?: InputMaybe<Scalars['String']['input']>;
  subContainsFold?: InputMaybe<Scalars['String']['input']>;
  subEqualFold?: InputMaybe<Scalars['String']['input']>;
  subGT?: InputMaybe<Scalars['String']['input']>;
  subGTE?: InputMaybe<Scalars['String']['input']>;
  subHasPrefix?: InputMaybe<Scalars['String']['input']>;
  subHasSuffix?: InputMaybe<Scalars['String']['input']>;
  subIn?: InputMaybe<Array<Scalars['String']['input']>>;
  subIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  subLT?: InputMaybe<Scalars['String']['input']>;
  subLTE?: InputMaybe<Scalars['String']['input']>;
  subNEQ?: InputMaybe<Scalars['String']['input']>;
  subNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  subNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** Ordering options for User connections */
export interface UserOrder {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order Users. */
  field: UserOrderField;
}

/** Properties by which User connections can be ordered. */
export enum UserOrderField {
  display_name = 'display_name',
  first_name = 'first_name',
  last_name = 'last_name'
}

/** UserRole is enum for the field role */
export enum UserRole {
  ADMIN = 'ADMIN',
  MEMBER = 'MEMBER',
  USER = 'USER'
}

/** UserSettingHistoryOpType is enum for the field operation */
export enum UserSettingHistoryOpType {
  DELETE = 'DELETE',
  INSERT = 'INSERT',
  UPDATE = 'UPDATE'
}

/** UserSettingHistoryUserStatus is enum for the field status */
export enum UserSettingHistoryUserStatus {
  ACTIVE = 'ACTIVE',
  DEACTIVATED = 'DEACTIVATED',
  INACTIVE = 'INACTIVE',
  ONBOARDING = 'ONBOARDING',
  SUSPENDED = 'SUSPENDED'
}

/**
 * UserSettingHistoryWhereInput is used for filtering UserSettingHistory objects.
 * Input was generated by ent.
 */
export interface UserSettingHistoryWhereInput {
  and?: InputMaybe<Array<UserSettingHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** email_confirmed field predicates */
  emailConfirmed?: InputMaybe<Scalars['Boolean']['input']>;
  emailConfirmedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** history_time field predicates */
  historyTime?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  historyTimeLT?: InputMaybe<Scalars['Time']['input']>;
  historyTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  historyTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** is_tfa_enabled field predicates */
  isTfaEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  isTfaEnabledIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  isTfaEnabledNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  isTfaEnabledNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** is_webauthn_allowed field predicates */
  isWebauthnAllowed?: InputMaybe<Scalars['Boolean']['input']>;
  isWebauthnAllowedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  isWebauthnAllowedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  isWebauthnAllowedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** locked field predicates */
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  lockedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<UserSettingHistoryWhereInput>;
  /** operation field predicates */
  operation?: InputMaybe<UserSettingHistoryOpType>;
  operationIn?: InputMaybe<Array<UserSettingHistoryOpType>>;
  operationNEQ?: InputMaybe<UserSettingHistoryOpType>;
  operationNotIn?: InputMaybe<Array<UserSettingHistoryOpType>>;
  or?: InputMaybe<Array<UserSettingHistoryWhereInput>>;
  /** ref field predicates */
  ref?: InputMaybe<Scalars['String']['input']>;
  refContains?: InputMaybe<Scalars['String']['input']>;
  refContainsFold?: InputMaybe<Scalars['String']['input']>;
  refEqualFold?: InputMaybe<Scalars['String']['input']>;
  refGT?: InputMaybe<Scalars['String']['input']>;
  refGTE?: InputMaybe<Scalars['String']['input']>;
  refHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refLT?: InputMaybe<Scalars['String']['input']>;
  refLTE?: InputMaybe<Scalars['String']['input']>;
  refNEQ?: InputMaybe<Scalars['String']['input']>;
  refNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** silenced_at field predicates */
  silencedAt?: InputMaybe<Scalars['Time']['input']>;
  silencedAtGT?: InputMaybe<Scalars['Time']['input']>;
  silencedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  silencedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  silencedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  silencedAtLT?: InputMaybe<Scalars['Time']['input']>;
  silencedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  silencedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  silencedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  silencedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<UserSettingHistoryUserStatus>;
  statusIn?: InputMaybe<Array<UserSettingHistoryUserStatus>>;
  statusNEQ?: InputMaybe<UserSettingHistoryUserStatus>;
  statusNotIn?: InputMaybe<Array<UserSettingHistoryUserStatus>>;
  /** suspended_at field predicates */
  suspendedAt?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtGT?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  suspendedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  suspendedAtLT?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  suspendedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** user_id field predicates */
  userID?: InputMaybe<Scalars['String']['input']>;
  userIDContains?: InputMaybe<Scalars['String']['input']>;
  userIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  userIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  userIDGT?: InputMaybe<Scalars['String']['input']>;
  userIDGTE?: InputMaybe<Scalars['String']['input']>;
  userIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  userIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  userIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  userIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  userIDLT?: InputMaybe<Scalars['String']['input']>;
  userIDLTE?: InputMaybe<Scalars['String']['input']>;
  userIDNEQ?: InputMaybe<Scalars['String']['input']>;
  userIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  userIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/** UserSettingUserStatus is enum for the field status */
export enum UserSettingUserStatus {
  ACTIVE = 'ACTIVE',
  DEACTIVATED = 'DEACTIVATED',
  INACTIVE = 'INACTIVE',
  ONBOARDING = 'ONBOARDING',
  SUSPENDED = 'SUSPENDED'
}

/**
 * UserSettingWhereInput is used for filtering UserSetting objects.
 * Input was generated by ent.
 */
export interface UserSettingWhereInput {
  and?: InputMaybe<Array<UserSettingWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** email_confirmed field predicates */
  emailConfirmed?: InputMaybe<Scalars['Boolean']['input']>;
  emailConfirmedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** default_org edge predicates */
  hasDefaultOrg?: InputMaybe<Scalars['Boolean']['input']>;
  hasDefaultOrgWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>;
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>;
  /** user edge predicates */
  hasUser?: InputMaybe<Scalars['Boolean']['input']>;
  hasUserWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** is_tfa_enabled field predicates */
  isTfaEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  isTfaEnabledIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  isTfaEnabledNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  isTfaEnabledNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** is_webauthn_allowed field predicates */
  isWebauthnAllowed?: InputMaybe<Scalars['Boolean']['input']>;
  isWebauthnAllowedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  isWebauthnAllowedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  isWebauthnAllowedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** locked field predicates */
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  lockedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<UserSettingWhereInput>;
  or?: InputMaybe<Array<UserSettingWhereInput>>;
  /** silenced_at field predicates */
  silencedAt?: InputMaybe<Scalars['Time']['input']>;
  silencedAtGT?: InputMaybe<Scalars['Time']['input']>;
  silencedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  silencedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  silencedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  silencedAtLT?: InputMaybe<Scalars['Time']['input']>;
  silencedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  silencedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  silencedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  silencedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<UserSettingUserStatus>;
  statusIn?: InputMaybe<Array<UserSettingUserStatus>>;
  statusNEQ?: InputMaybe<UserSettingUserStatus>;
  statusNotIn?: InputMaybe<Array<UserSettingUserStatus>>;
  /** suspended_at field predicates */
  suspendedAt?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtGT?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  suspendedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  suspendedAtLT?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  suspendedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  suspendedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** user_id field predicates */
  userID?: InputMaybe<Scalars['ID']['input']>;
  userIDContains?: InputMaybe<Scalars['ID']['input']>;
  userIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  userIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  userIDGT?: InputMaybe<Scalars['ID']['input']>;
  userIDGTE?: InputMaybe<Scalars['ID']['input']>;
  userIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  userIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  userIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  userIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  userIDLT?: InputMaybe<Scalars['ID']['input']>;
  userIDLTE?: InputMaybe<Scalars['ID']['input']>;
  userIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  userIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  userIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

/**
 * UserWhereInput is used for filtering User objects.
 * Input was generated by ent.
 */
export interface UserWhereInput {
  and?: InputMaybe<Array<UserWhereInput>>;
  /** auth_provider field predicates */
  authProvider?: InputMaybe<UserAuthProvider>;
  authProviderIn?: InputMaybe<Array<UserAuthProvider>>;
  authProviderNEQ?: InputMaybe<UserAuthProvider>;
  authProviderNotIn?: InputMaybe<Array<UserAuthProvider>>;
  /** avatar_local_file field predicates */
  avatarLocalFile?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileContains?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileContainsFold?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileEqualFold?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileGT?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileGTE?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileHasPrefix?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileHasSuffix?: InputMaybe<Scalars['String']['input']>;
  /** avatar_local_file_id field predicates */
  avatarLocalFileID?: InputMaybe<Scalars['ID']['input']>;
  avatarLocalFileIDContains?: InputMaybe<Scalars['ID']['input']>;
  avatarLocalFileIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  avatarLocalFileIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  avatarLocalFileIDGT?: InputMaybe<Scalars['ID']['input']>;
  avatarLocalFileIDGTE?: InputMaybe<Scalars['ID']['input']>;
  avatarLocalFileIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  avatarLocalFileIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  avatarLocalFileIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  avatarLocalFileIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  avatarLocalFileIDLT?: InputMaybe<Scalars['ID']['input']>;
  avatarLocalFileIDLTE?: InputMaybe<Scalars['ID']['input']>;
  avatarLocalFileIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  avatarLocalFileIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  avatarLocalFileIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  avatarLocalFileIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarLocalFileIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  avatarLocalFileLT?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileLTE?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileNEQ?: InputMaybe<Scalars['String']['input']>;
  avatarLocalFileNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarLocalFileNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** avatar_remote_url field predicates */
  avatarRemoteURL?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLContains?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLGT?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLGTE?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarRemoteURLIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  avatarRemoteURLLT?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLLTE?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLNEQ?: InputMaybe<Scalars['String']['input']>;
  avatarRemoteURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  avatarRemoteURLNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** avatar_updated_at field predicates */
  avatarUpdatedAt?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  avatarUpdatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  avatarUpdatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  avatarUpdatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  avatarUpdatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdByContains?: InputMaybe<Scalars['String']['input']>;
  createdByContainsFold?: InputMaybe<Scalars['String']['input']>;
  createdByEqualFold?: InputMaybe<Scalars['String']['input']>;
  createdByGT?: InputMaybe<Scalars['String']['input']>;
  createdByGTE?: InputMaybe<Scalars['String']['input']>;
  createdByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  createdByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  createdByLT?: InputMaybe<Scalars['String']['input']>;
  createdByLTE?: InputMaybe<Scalars['String']['input']>;
  createdByNEQ?: InputMaybe<Scalars['String']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  createdByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_by field predicates */
  deletedBy?: InputMaybe<Scalars['String']['input']>;
  deletedByContains?: InputMaybe<Scalars['String']['input']>;
  deletedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedByGT?: InputMaybe<Scalars['String']['input']>;
  deletedByGTE?: InputMaybe<Scalars['String']['input']>;
  deletedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByLT?: InputMaybe<Scalars['String']['input']>;
  deletedByLTE?: InputMaybe<Scalars['String']['input']>;
  deletedByNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayNameContains?: InputMaybe<Scalars['String']['input']>;
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  displayNameGT?: InputMaybe<Scalars['String']['input']>;
  displayNameGTE?: InputMaybe<Scalars['String']['input']>;
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  displayNameLT?: InputMaybe<Scalars['String']['input']>;
  displayNameLTE?: InputMaybe<Scalars['String']['input']>;
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>;
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** email field predicates */
  email?: InputMaybe<Scalars['String']['input']>;
  emailContains?: InputMaybe<Scalars['String']['input']>;
  emailContainsFold?: InputMaybe<Scalars['String']['input']>;
  emailEqualFold?: InputMaybe<Scalars['String']['input']>;
  emailGT?: InputMaybe<Scalars['String']['input']>;
  emailGTE?: InputMaybe<Scalars['String']['input']>;
  emailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  emailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  emailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  emailLT?: InputMaybe<Scalars['String']['input']>;
  emailLTE?: InputMaybe<Scalars['String']['input']>;
  emailNEQ?: InputMaybe<Scalars['String']['input']>;
  emailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** first_name field predicates */
  firstName?: InputMaybe<Scalars['String']['input']>;
  firstNameContains?: InputMaybe<Scalars['String']['input']>;
  firstNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  firstNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  firstNameGT?: InputMaybe<Scalars['String']['input']>;
  firstNameGTE?: InputMaybe<Scalars['String']['input']>;
  firstNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  firstNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  firstNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  firstNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  firstNameLT?: InputMaybe<Scalars['String']['input']>;
  firstNameLTE?: InputMaybe<Scalars['String']['input']>;
  firstNameNEQ?: InputMaybe<Scalars['String']['input']>;
  firstNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  firstNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** action_plans edge predicates */
  hasActionPlans?: InputMaybe<Scalars['Boolean']['input']>;
  hasActionPlansWith?: InputMaybe<Array<ActionPlanWhereInput>>;
  /** assignee_tasks edge predicates */
  hasAssigneeTasks?: InputMaybe<Scalars['Boolean']['input']>;
  hasAssigneeTasksWith?: InputMaybe<Array<TaskWhereInput>>;
  /** assigner_tasks edge predicates */
  hasAssignerTasks?: InputMaybe<Scalars['Boolean']['input']>;
  hasAssignerTasksWith?: InputMaybe<Array<TaskWhereInput>>;
  /** events edge predicates */
  hasEvents?: InputMaybe<Scalars['Boolean']['input']>;
  hasEventsWith?: InputMaybe<Array<EventWhereInput>>;
  /** file edge predicates */
  hasFile?: InputMaybe<Scalars['Boolean']['input']>;
  hasFileWith?: InputMaybe<Array<FileWhereInput>>;
  /** files edge predicates */
  hasFiles?: InputMaybe<Scalars['Boolean']['input']>;
  hasFilesWith?: InputMaybe<Array<FileWhereInput>>;
  /** group_memberships edge predicates */
  hasGroupMemberships?: InputMaybe<Scalars['Boolean']['input']>;
  hasGroupMembershipsWith?: InputMaybe<Array<GroupMembershipWhereInput>>;
  /** groups edge predicates */
  hasGroups?: InputMaybe<Scalars['Boolean']['input']>;
  hasGroupsWith?: InputMaybe<Array<GroupWhereInput>>;
  /** org_memberships edge predicates */
  hasOrgMemberships?: InputMaybe<Scalars['Boolean']['input']>;
  hasOrgMembershipsWith?: InputMaybe<Array<OrgMembershipWhereInput>>;
  /** organizations edge predicates */
  hasOrganizations?: InputMaybe<Scalars['Boolean']['input']>;
  hasOrganizationsWith?: InputMaybe<Array<OrganizationWhereInput>>;
  /** personal_access_tokens edge predicates */
  hasPersonalAccessTokens?: InputMaybe<Scalars['Boolean']['input']>;
  hasPersonalAccessTokensWith?: InputMaybe<Array<PersonalAccessTokenWhereInput>>;
  /** program_memberships edge predicates */
  hasProgramMemberships?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgramMembershipsWith?: InputMaybe<Array<ProgramMembershipWhereInput>>;
  /** programs edge predicates */
  hasPrograms?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgramsWith?: InputMaybe<Array<ProgramWhereInput>>;
  /** setting edge predicates */
  hasSetting?: InputMaybe<Scalars['Boolean']['input']>;
  hasSettingWith?: InputMaybe<Array<UserSettingWhereInput>>;
  /** subcontrols edge predicates */
  hasSubcontrols?: InputMaybe<Scalars['Boolean']['input']>;
  hasSubcontrolsWith?: InputMaybe<Array<SubcontrolWhereInput>>;
  /** tfa_settings edge predicates */
  hasTfaSettings?: InputMaybe<Scalars['Boolean']['input']>;
  hasTfaSettingsWith?: InputMaybe<Array<TfaSettingWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** last_name field predicates */
  lastName?: InputMaybe<Scalars['String']['input']>;
  lastNameContains?: InputMaybe<Scalars['String']['input']>;
  lastNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  lastNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  lastNameGT?: InputMaybe<Scalars['String']['input']>;
  lastNameGTE?: InputMaybe<Scalars['String']['input']>;
  lastNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  lastNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  lastNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  lastNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  lastNameLT?: InputMaybe<Scalars['String']['input']>;
  lastNameLTE?: InputMaybe<Scalars['String']['input']>;
  lastNameNEQ?: InputMaybe<Scalars['String']['input']>;
  lastNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  lastNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** last_seen field predicates */
  lastSeen?: InputMaybe<Scalars['Time']['input']>;
  lastSeenGT?: InputMaybe<Scalars['Time']['input']>;
  lastSeenGTE?: InputMaybe<Scalars['Time']['input']>;
  lastSeenIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  lastSeenIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  lastSeenLT?: InputMaybe<Scalars['Time']['input']>;
  lastSeenLTE?: InputMaybe<Scalars['Time']['input']>;
  lastSeenNEQ?: InputMaybe<Scalars['Time']['input']>;
  lastSeenNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  lastSeenNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<UserWhereInput>;
  or?: InputMaybe<Array<UserWhereInput>>;
  /** role field predicates */
  role?: InputMaybe<UserRole>;
  roleIn?: InputMaybe<Array<UserRole>>;
  roleIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  roleNEQ?: InputMaybe<UserRole>;
  roleNotIn?: InputMaybe<Array<UserRole>>;
  roleNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** sub field predicates */
  sub?: InputMaybe<Scalars['String']['input']>;
  subContains?: InputMaybe<Scalars['String']['input']>;
  subContainsFold?: InputMaybe<Scalars['String']['input']>;
  subEqualFold?: InputMaybe<Scalars['String']['input']>;
  subGT?: InputMaybe<Scalars['String']['input']>;
  subGTE?: InputMaybe<Scalars['String']['input']>;
  subHasPrefix?: InputMaybe<Scalars['String']['input']>;
  subHasSuffix?: InputMaybe<Scalars['String']['input']>;
  subIn?: InputMaybe<Array<Scalars['String']['input']>>;
  subIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  subLT?: InputMaybe<Scalars['String']['input']>;
  subLTE?: InputMaybe<Scalars['String']['input']>;
  subNEQ?: InputMaybe<Scalars['String']['input']>;
  subNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  subNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedByContains?: InputMaybe<Scalars['String']['input']>;
  updatedByContainsFold?: InputMaybe<Scalars['String']['input']>;
  updatedByEqualFold?: InputMaybe<Scalars['String']['input']>;
  updatedByGT?: InputMaybe<Scalars['String']['input']>;
  updatedByGTE?: InputMaybe<Scalars['String']['input']>;
  updatedByHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updatedByHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['String']['input']>;
  updatedByLTE?: InputMaybe<Scalars['String']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['String']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
}

export type CreateApiTokenMutationVariables = Exact<{
  input: CreateApiTokenInput;
}>;


export type CreateApiTokenMutation = { __typename?: 'Mutation', createAPIToken: { __typename?: 'APITokenCreatePayload', apiToken: { __typename?: 'APIToken', token: string } } };

export type GetApiTokensQueryVariables = Exact<{ [key: string]: never; }>;


export type GetApiTokensQuery = { __typename?: 'Query', apiTokens: { __typename?: 'APITokenConnection', edges?: Array<{ __typename?: 'APITokenEdge', node?: { __typename?: 'APIToken', id: string, name: string, description?: string | null, scopes?: Array<string> | null, expiresAt?: any | null } | null } | null> | null } };

export type DeleteApiTokenMutationVariables = Exact<{
  deleteAPITokenId: Scalars['ID']['input'];
}>;


export type DeleteApiTokenMutation = { __typename?: 'Mutation', deleteAPIToken: { __typename?: 'APITokenDeletePayload', deletedID: string } };

export type GetDashboardDataQueryVariables = Exact<{
  where?: InputMaybe<TaskWhereInput>;
}>;


export type GetDashboardDataQuery = { __typename?: 'Query', programs: { __typename?: 'ProgramConnection', edges?: Array<{ __typename?: 'ProgramEdge', node?: { __typename?: 'Program', id: string, name: string, description?: string | null, controls?: Array<{ __typename?: 'Control', id: string }> | null, tasks?: Array<{ __typename?: 'Task', id: string, title: string, status: TaskTaskStatus, description?: string | null, due?: any | null }> | null } | null } | null> | null }, tasks: { __typename?: 'TaskConnection', edges?: Array<{ __typename?: 'TaskEdge', node?: { __typename?: 'Task', id: string, title: string, status: TaskTaskStatus, due?: any | null, tags?: Array<string> | null } | null } | null> | null }, organizations: { __typename?: 'OrganizationConnection', edges?: Array<{ __typename?: 'OrganizationEdge', node?: { __typename?: 'Organization', id: string, name: string } | null } | null> | null } };

export type GetDocumentDataQueryVariables = Exact<{
  documentDataId: Scalars['ID']['input'];
}>;


export type GetDocumentDataQuery = { __typename?: 'Query', documentData: { __typename?: 'DocumentData', id: string, templateID: string, data: any } };

export type CreateDocumentDataMutationVariables = Exact<{
  input: CreateDocumentDataInput;
}>;


export type CreateDocumentDataMutation = { __typename?: 'Mutation', createDocumentData: { __typename?: 'DocumentDataCreatePayload', documentData: { __typename?: 'DocumentData', id: string, templateID: string, data: any } } };

export type UpdateDocumentDataMutationVariables = Exact<{
  updateDocumentDataId: Scalars['ID']['input'];
  input: UpdateDocumentDataInput;
}>;


export type UpdateDocumentDataMutation = { __typename?: 'Mutation', updateDocumentData: { __typename?: 'DocumentDataUpdatePayload', documentData: { __typename?: 'DocumentData', id: string, templateID: string, data: any } } };

export type DeleteDocumentDataMutationVariables = Exact<{
  deleteDocumentDataId: Scalars['ID']['input'];
}>;


export type DeleteDocumentDataMutation = { __typename?: 'Mutation', deleteDocumentData: { __typename?: 'DocumentDataDeletePayload', deletedID: string } };

export type GetAllGroupsQueryVariables = Exact<{ [key: string]: never; }>;


export type GetAllGroupsQuery = { __typename?: 'Query', groups: { __typename?: 'GroupConnection', edges?: Array<{ __typename?: 'GroupEdge', node?: { __typename?: 'Group', id: string, name: string, description?: string | null, displayName: string, logoURL?: string | null, setting: { __typename?: 'GroupSetting', visibility: GroupSettingVisibility, joinPolicy: GroupSettingJoinPolicy, syncToSlack?: boolean | null, syncToGithub?: boolean | null, tags?: Array<string> | null } } | null } | null> | null } };

export type UpdateUserRoleInOrgMutationVariables = Exact<{
  updateOrgMemberId: Scalars['ID']['input'];
  input: UpdateOrgMembershipInput;
}>;


export type UpdateUserRoleInOrgMutation = { __typename?: 'Mutation', updateOrgMembership: { __typename?: 'OrgMembershipUpdatePayload', orgMembership: { __typename?: 'OrgMembership', id: string, role: OrgMembershipRole, userID: string, organizationID: string } } };

export type RemoveUserFromOrgMutationVariables = Exact<{
  deleteOrgMembershipId: Scalars['ID']['input'];
}>;


export type RemoveUserFromOrgMutation = { __typename?: 'Mutation', deleteOrgMembership: { __typename?: 'OrgMembershipDeletePayload', deletedID: string } };

export type GetAllOrganizationsQueryVariables = Exact<{ [key: string]: never; }>;


export type GetAllOrganizationsQuery = { __typename?: 'Query', organizations: { __typename?: 'OrganizationConnection', edges?: Array<{ __typename?: 'OrganizationEdge', node?: { __typename?: 'Organization', id: string, name: string, displayName: string, avatarRemoteURL?: string | null, description?: string | null, personalOrg?: boolean | null, createdAt?: any | null, updatedAt?: any | null, parent?: { __typename?: 'Organization', id: string, name: string } | null, children: { __typename?: 'OrganizationConnection', edges?: Array<{ __typename?: 'OrganizationEdge', node?: { __typename?: 'Organization', id: string, name: string, displayName: string, description?: string | null } | null } | null> | null }, members?: Array<{ __typename?: 'OrgMembership', id: string, role: OrgMembershipRole, user: { __typename?: 'User', id: string, firstName?: string | null, lastName?: string | null } }> | null, setting?: { __typename?: 'OrganizationSetting', id: string, createdAt?: any | null, updatedAt?: any | null, createdBy?: string | null, updatedBy?: string | null, domains?: Array<string> | null, billingContact?: string | null, billingEmail?: string | null, billingPhone?: string | null, billingAddress?: string | null, taxIdentifier?: string | null, tags?: Array<string> | null, geoLocation?: OrganizationSettingRegion | null } | null } | null } | null> | null } };

export type GetOrganizationNameByIdQueryVariables = Exact<{
  organizationId: Scalars['ID']['input'];
}>;


export type GetOrganizationNameByIdQuery = { __typename?: 'Query', organization: { __typename?: 'Organization', name: string, displayName: string } };

export type GetOrganizationMembersQueryVariables = Exact<{
  organizationId: Scalars['ID']['input'];
}>;


export type GetOrganizationMembersQuery = { __typename?: 'Query', organization: { __typename?: 'Organization', members?: Array<{ __typename?: 'OrgMembership', id: string, createdAt?: any | null, role: OrgMembershipRole, user: { __typename?: 'User', id: string, firstName?: string | null, lastName?: string | null, authProvider: UserAuthProvider, avatarRemoteURL?: string | null, email: string, role?: UserRole | null, createdAt?: any | null } }> | null } };

export type GetAllOrganizationMembersQueryVariables = Exact<{ [key: string]: never; }>;


export type GetAllOrganizationMembersQuery = { __typename?: 'Query', orgMemberships: { __typename?: 'OrgMembershipConnection', edges?: Array<{ __typename?: 'OrgMembershipEdge', node?: { __typename?: 'OrgMembership', user: { __typename?: 'User', id: string, firstName?: string | null, lastName?: string | null, role?: UserRole | null } } | null } | null> | null } };

export type GetInvitesQueryVariables = Exact<{ [key: string]: never; }>;


export type GetInvitesQuery = { __typename?: 'Query', invites: { __typename?: 'InviteConnection', edges?: Array<{ __typename?: 'InviteEdge', node?: { __typename?: 'Invite', id: string, recipient: string, status: InviteInviteStatus, createdAt?: any | null, expires?: any | null, role: InviteRole } | null } | null> | null } };

export type CreateOrganizationMutationVariables = Exact<{
  input: CreateOrganizationInput;
}>;


export type CreateOrganizationMutation = { __typename?: 'Mutation', createOrganization: { __typename?: 'OrganizationCreatePayload', organization: { __typename?: 'Organization', id: string } } };

export type UpdateOrganizationMutationVariables = Exact<{
  updateOrganizationId: Scalars['ID']['input'];
  input: UpdateOrganizationInput;
}>;


export type UpdateOrganizationMutation = { __typename?: 'Mutation', updateOrganization: { __typename?: 'OrganizationUpdatePayload', organization: { __typename?: 'Organization', id: string } } };

export type CreateBulkInviteMutationVariables = Exact<{
  input?: InputMaybe<Array<CreateInviteInput> | CreateInviteInput>;
}>;


export type CreateBulkInviteMutation = { __typename?: 'Mutation', createBulkInvite: { __typename?: 'InviteBulkCreatePayload', invites?: Array<{ __typename?: 'Invite', id: string }> | null } };

export type DeleteOrganizationInviteMutationVariables = Exact<{
  deleteInviteId: Scalars['ID']['input'];
}>;


export type DeleteOrganizationInviteMutation = { __typename?: 'Mutation', deleteInvite: { __typename?: 'InviteDeletePayload', deletedID: string } };

export type DeleteOrganizationMutationVariables = Exact<{
  deleteOrganizationId: Scalars['ID']['input'];
}>;


export type DeleteOrganizationMutation = { __typename?: 'Mutation', deleteOrganization: { __typename?: 'OrganizationDeletePayload', deletedID: string } };

export type CreatePersonalAccessTokenMutationVariables = Exact<{
  input: CreatePersonalAccessTokenInput;
}>;


export type CreatePersonalAccessTokenMutation = { __typename?: 'Mutation', createPersonalAccessToken: { __typename?: 'PersonalAccessTokenCreatePayload', personalAccessToken: { __typename?: 'PersonalAccessToken', token: string } } };

export type GetPersonalAccessTokensQueryVariables = Exact<{ [key: string]: never; }>;


export type GetPersonalAccessTokensQuery = { __typename?: 'Query', personalAccessTokens: { __typename?: 'PersonalAccessTokenConnection', edges?: Array<{ __typename?: 'PersonalAccessTokenEdge', node?: { __typename?: 'PersonalAccessToken', id: string, name: string, description?: string | null, expiresAt?: any | null, organizations?: Array<{ __typename?: 'Organization', id: string, name: string }> | null } | null } | null> | null } };

export type DeletePersonalAccessTokenMutationVariables = Exact<{
  deletePersonalAccessTokenId: Scalars['ID']['input'];
}>;


export type DeletePersonalAccessTokenMutation = { __typename?: 'Mutation', deletePersonalAccessToken: { __typename?: 'PersonalAccessTokenDeletePayload', deletedID: string } };

export type CreateInternalPolicyMutationVariables = Exact<{
  input: CreateInternalPolicyInput;
}>;


export type CreateInternalPolicyMutation = { __typename?: 'Mutation', createInternalPolicy: { __typename?: 'InternalPolicyCreatePayload', internalPolicy: { __typename?: 'InternalPolicy', id: string, name: string, background?: string | null, description?: string | null, policyType?: string | null, purposeAndScope?: string | null, details?: any | null } } };

export type UpdateInternalPolicyMutationVariables = Exact<{
  updateInternalPolicyId: Scalars['ID']['input'];
  input: UpdateInternalPolicyInput;
}>;


export type UpdateInternalPolicyMutation = { __typename?: 'Mutation', updateInternalPolicy: { __typename?: 'InternalPolicyUpdatePayload', internalPolicy: { __typename?: 'InternalPolicy', id: string, name: string, background?: string | null, description?: string | null, policyType?: string | null, purposeAndScope?: string | null, details?: any | null } } };

export type GetAllInternalPoliciesWithDetailsQueryVariables = Exact<{ [key: string]: never; }>;


export type GetAllInternalPoliciesWithDetailsQuery = { __typename?: 'Query', internalPolicies: { __typename?: 'InternalPolicyConnection', edges?: Array<{ __typename?: 'InternalPolicyEdge', node?: { __typename?: 'InternalPolicy', id: string, name: string, background?: string | null, description?: string | null, policyType?: string | null, purposeAndScope?: string | null, status?: string | null, version?: string | null, updatedAt?: any | null, updatedBy?: string | null, createdAt?: any | null, createdBy?: string | null, tags?: Array<string> | null } | null } | null> | null } };

export type GetInternalPoliciesListQueryVariables = Exact<{ [key: string]: never; }>;


export type GetInternalPoliciesListQuery = { __typename?: 'Query', internalPolicies: { __typename?: 'InternalPolicyConnection', edges?: Array<{ __typename?: 'InternalPolicyEdge', node?: { __typename?: 'InternalPolicy', id: string, name: string, description?: string | null, policyType?: string | null, tags?: Array<string> | null, version?: string | null, updatedAt?: any | null, updatedBy?: string | null, createdAt?: any | null, createdBy?: string | null } | null } | null> | null } };

export type GetAllInternalPoliciesQueryVariables = Exact<{ [key: string]: never; }>;


export type GetAllInternalPoliciesQuery = { __typename?: 'Query', internalPolicies: { __typename?: 'InternalPolicyConnection', edges?: Array<{ __typename?: 'InternalPolicyEdge', node?: { __typename?: 'InternalPolicy', id: string, name: string } | null } | null> | null } };

export type GetInternalPolicyDetailsByIdQueryVariables = Exact<{
  internalPolicyId: Scalars['ID']['input'];
}>;


export type GetInternalPolicyDetailsByIdQuery = { __typename?: 'Query', internalPolicy: { __typename?: 'InternalPolicy', id: string, name: string, description?: string | null, details?: any | null, background?: string | null, createdAt?: any | null, createdBy?: string | null, updatedAt?: any | null, updatedBy?: string | null, tags?: Array<string> | null, version?: string | null, status?: string | null, purposeAndScope?: string | null, policyType?: string | null, procedures?: Array<{ __typename?: 'Procedure', id: string, name: string }> | null } };

export type CreateProcedureMutationVariables = Exact<{
  input: CreateProcedureInput;
}>;


export type CreateProcedureMutation = { __typename?: 'Mutation', createProcedure: { __typename?: 'ProcedureCreatePayload', procedure: { __typename?: 'Procedure', id: string, name: string } } };

export type UpdateProcedureMutationVariables = Exact<{
  updateProcedureId: Scalars['ID']['input'];
  input: UpdateProcedureInput;
}>;


export type UpdateProcedureMutation = { __typename?: 'Mutation', updateProcedure: { __typename?: 'ProcedureUpdatePayload', procedure: { __typename?: 'Procedure', id: string, name: string } } };

export type GetAllProceduresWithDetailsQueryVariables = Exact<{ [key: string]: never; }>;


export type GetAllProceduresWithDetailsQuery = { __typename?: 'Query', procedures: { __typename?: 'ProcedureConnection', edges?: Array<{ __typename?: 'ProcedureEdge', node?: { __typename?: 'Procedure', id: string, name: string, background?: string | null, description?: string | null, procedureType?: string | null, purposeAndScope?: string | null, satisfies?: string | null, status?: string | null, version?: string | null, updatedAt?: any | null, updatedBy?: string | null, createdAt?: any | null, createdBy?: string | null, tags?: Array<string> | null } | null } | null> | null } };

export type GetAllProceduresQueryVariables = Exact<{ [key: string]: never; }>;


export type GetAllProceduresQuery = { __typename?: 'Query', procedures: { __typename?: 'ProcedureConnection', edges?: Array<{ __typename?: 'ProcedureEdge', node?: { __typename?: 'Procedure', id: string, name: string } | null } | null> | null } };

export type GetProcedureDetailsByIdQueryVariables = Exact<{
  procedureId: Scalars['ID']['input'];
}>;


export type GetProcedureDetailsByIdQuery = { __typename?: 'Query', procedure: { __typename?: 'Procedure', id: string, name: string, description?: string | null, details?: any | null, background?: string | null, createdAt?: any | null, createdBy?: string | null, updatedAt?: any | null, updatedBy?: string | null, tags?: Array<string> | null, version?: string | null, status?: string | null, satisfies?: string | null, purposeAndScope?: string | null, procedureType?: string | null, internalPolicies?: Array<{ __typename?: 'InternalPolicy', id: string, name: string }> | null } };

export type CreateProgramWithMembersMutationVariables = Exact<{
  input: CreateProgramWithMembersInput;
}>;


export type CreateProgramWithMembersMutation = { __typename?: 'Mutation', createProgramWithMembers: { __typename?: 'ProgramCreatePayload', program: { __typename?: 'Program', id: string, name: string } } };

export type UpdateProgramMutationVariables = Exact<{
  updateProgramId: Scalars['ID']['input'];
  input: UpdateProgramInput;
}>;


export type UpdateProgramMutation = { __typename?: 'Mutation', updateProgram: { __typename?: 'ProgramUpdatePayload', program: { __typename?: 'Program', id: string, name: string } } };

export type GetAllProgramsQueryVariables = Exact<{ [key: string]: never; }>;


export type GetAllProgramsQuery = { __typename?: 'Query', programs: { __typename?: 'ProgramConnection', edges?: Array<{ __typename?: 'ProgramEdge', node?: { __typename?: 'Program', id: string, name: string, description?: string | null, tags?: Array<string> | null, status: ProgramProgramStatus, startDate?: any | null, endDate?: any | null, auditorReady: boolean } | null } | null> | null } };

export type GetProgramEdgesForWizardQueryVariables = Exact<{ [key: string]: never; }>;


export type GetProgramEdgesForWizardQuery = { __typename?: 'Query', risks: { __typename?: 'RiskConnection', edges?: Array<{ __typename?: 'RiskEdge', node?: { __typename?: 'Risk', id: string, name: string } | null } | null> | null }, procedures: { __typename?: 'ProcedureConnection', edges?: Array<{ __typename?: 'ProcedureEdge', node?: { __typename?: 'Procedure', id: string, name: string } | null } | null> | null }, internalPolicies: { __typename?: 'InternalPolicyConnection', edges?: Array<{ __typename?: 'InternalPolicyEdge', node?: { __typename?: 'InternalPolicy', id: string, name: string } | null } | null> | null }, groups: { __typename?: 'GroupConnection', edges?: Array<{ __typename?: 'GroupEdge', node?: { __typename?: 'Group', id: string, name: string, displayName: string } | null } | null> | null }, orgMemberships: { __typename?: 'OrgMembershipConnection', edges?: Array<{ __typename?: 'OrgMembershipEdge', node?: { __typename?: 'OrgMembership', user: { __typename?: 'User', id: string, firstName?: string | null, lastName?: string | null, role?: UserRole | null } } | null } | null> | null } };

export type GetProgramDetailsByIdQueryVariables = Exact<{
  programId: Scalars['ID']['input'];
}>;


export type GetProgramDetailsByIdQuery = { __typename?: 'Query', program: { __typename?: 'Program', id: string, name: string, description?: string | null, tags?: Array<string> | null, status: ProgramProgramStatus, startDate?: any | null, endDate?: any | null, auditorReady: boolean, auditorWriteComments: boolean, auditorReadComments: boolean, standards?: Array<{ __typename?: 'Standard', id: string, name: string }> | null, tasks?: Array<{ __typename?: 'Task', id: string, title: string, status: TaskTaskStatus, due?: any | null, details?: any | null, assignee?: { __typename?: 'User', id: string, firstName?: string | null, lastName?: string | null, email: string } | null, assigner: { __typename?: 'User', id: string, firstName?: string | null, lastName?: string | null, email: string } }> | null, controlObjectives?: Array<{ __typename?: 'ControlObjective', id: string, name: string }> | null, controls?: Array<{ __typename?: 'Control', id: string, name: string, class?: string | null }> | null, subcontrols?: Array<{ __typename?: 'Subcontrol', id: string, name: string, class?: string | null }> | null, narratives?: Array<{ __typename?: 'Narrative', id: string, name: string }> | null, internalPolicies?: Array<{ __typename?: 'InternalPolicy', id: string, name: string }> | null, procedures?: Array<{ __typename?: 'Procedure', id: string, name: string }> | null } };

export type GetAllRisksQueryVariables = Exact<{ [key: string]: never; }>;


export type GetAllRisksQuery = { __typename?: 'Query', risks: { __typename?: 'RiskConnection', edges?: Array<{ __typename?: 'RiskEdge', node?: { __typename?: 'Risk', id: string, name: string } | null } | null> | null } };

export type CreateStandardMutationVariables = Exact<{
  input: CreateStandardInput;
}>;


export type CreateStandardMutation = { __typename?: 'Mutation', createStandard: { __typename?: 'StandardCreatePayload', standard: { __typename?: 'Standard', id: string } } };

export type CreateSubscriberMutationVariables = Exact<{
  input: CreateSubscriberInput;
}>;


export type CreateSubscriberMutation = { __typename?: 'Mutation', createSubscriber: { __typename?: 'SubscriberCreatePayload', subscriber: { __typename?: 'Subscriber', email: string } } };

export type GetAllSubscribersQueryVariables = Exact<{ [key: string]: never; }>;


export type GetAllSubscribersQuery = { __typename?: 'Query', subscribers: { __typename?: 'SubscriberConnection', edges?: Array<{ __typename?: 'SubscriberEdge', node?: { __typename?: 'Subscriber', active: boolean, email: string, id: string, verifiedEmail: boolean } | null } | null> | null } };

export type DeleteSubscriberMutationVariables = Exact<{
  deleteSubscriberEmail: Scalars['String']['input'];
}>;


export type DeleteSubscriberMutation = { __typename?: 'Mutation', deleteSubscriber: { __typename?: 'SubscriberDeletePayload', email: string } };

export type TasksWithFilterQueryVariables = Exact<{
  where?: InputMaybe<TaskWhereInput>;
}>;


export type TasksWithFilterQuery = { __typename?: 'Query', tasks: { __typename?: 'TaskConnection', edges?: Array<{ __typename?: 'TaskEdge', node?: { __typename?: 'Task', id: string, title: string, description?: string | null, status: TaskTaskStatus, tags?: Array<string> | null, details?: any | null, due?: any | null } | null } | null> | null } };

export type CreateTemplateMutationVariables = Exact<{
  input: CreateTemplateInput;
}>;


export type CreateTemplateMutation = { __typename?: 'Mutation', createTemplate: { __typename?: 'TemplateCreatePayload', template: { __typename?: 'Template', id: string, name: string, templateType: TemplateDocumentType, description?: string | null, jsonconfig: any, uischema?: any | null, owner?: { __typename?: 'Organization', id: string } | null } } };

export type UpdateTemplateMutationVariables = Exact<{
  updateTemplateId: Scalars['ID']['input'];
  input: UpdateTemplateInput;
}>;


export type UpdateTemplateMutation = { __typename?: 'Mutation', updateTemplate: { __typename?: 'TemplateUpdatePayload', template: { __typename?: 'Template', id: string, name: string, templateType: TemplateDocumentType, description?: string | null, jsonconfig: any, uischema?: any | null, owner?: { __typename?: 'Organization', id: string } | null } } };

export type GetAllTemplatesQueryVariables = Exact<{ [key: string]: never; }>;


export type GetAllTemplatesQuery = { __typename?: 'Query', templates: { __typename?: 'TemplateConnection', edges?: Array<{ __typename?: 'TemplateEdge', node?: { __typename?: 'Template', id: string, name: string, templateType: TemplateDocumentType, description?: string | null, jsonconfig: any, uischema?: any | null, createdAt?: any | null, updatedAt?: any | null } | null } | null> | null } };

export type FilterTemplatesQueryVariables = Exact<{
  where?: InputMaybe<TemplateWhereInput>;
}>;


export type FilterTemplatesQuery = { __typename?: 'Query', templates: { __typename?: 'TemplateConnection', edges?: Array<{ __typename?: 'TemplateEdge', node?: { __typename?: 'Template', id: string, name: string, templateType: TemplateDocumentType, description?: string | null, jsonconfig: any, uischema?: any | null, createdAt?: any | null, updatedAt?: any | null } | null } | null> | null } };

export type GetTemplateQueryVariables = Exact<{
  getTemplateId: Scalars['ID']['input'];
}>;


export type GetTemplateQuery = { __typename?: 'Query', template: { __typename?: 'Template', id: string, templateType: TemplateDocumentType, name: string, description?: string | null, jsonconfig: any, uischema?: any | null } };

export type DeleteTemplateMutationVariables = Exact<{
  deleteTemplateId: Scalars['ID']['input'];
}>;


export type DeleteTemplateMutation = { __typename?: 'Mutation', deleteTemplate: { __typename?: 'TemplateDeletePayload', deletedID: string } };

export type GetUserProfileQueryVariables = Exact<{
  userId: Scalars['ID']['input'];
}>;


export type GetUserProfileQuery = { __typename?: 'Query', user: { __typename?: 'User', id: string, firstName?: string | null, lastName?: string | null, displayName: string, email: string, avatarRemoteURL?: string | null, setting: { __typename?: 'UserSetting', status: UserSettingUserStatus, tags?: Array<string> | null } } };

export type UpdateUserNameMutationVariables = Exact<{
  updateUserId: Scalars['ID']['input'];
  input: UpdateUserInput;
}>;


export type UpdateUserNameMutation = { __typename?: 'Mutation', updateUser: { __typename?: 'UserUpdatePayload', user: { __typename?: 'User', id: string } } };


export const CreateApiTokenDocument = gql`
    mutation CreateAPIToken($input: CreateAPITokenInput!) {
  createAPIToken(input: $input) {
    apiToken {
      token
    }
  }
}
    `;

export function useCreateApiTokenMutation() {
  return Urql.useMutation<CreateApiTokenMutation, CreateApiTokenMutationVariables>(CreateApiTokenDocument);
};
export const GetApiTokensDocument = gql`
    query GetAPITokens {
  apiTokens {
    edges {
      node {
        id
        name
        description
        scopes
        expiresAt
      }
    }
  }
}
    `;

export function useGetApiTokensQuery(options?: Omit<Urql.UseQueryArgs<GetApiTokensQueryVariables>, 'query'>) {
  return Urql.useQuery<GetApiTokensQuery, GetApiTokensQueryVariables>({ query: GetApiTokensDocument, ...options });
};
export const DeleteApiTokenDocument = gql`
    mutation DeleteAPIToken($deleteAPITokenId: ID!) {
  deleteAPIToken(id: $deleteAPITokenId) {
    deletedID
  }
}
    `;

export function useDeleteApiTokenMutation() {
  return Urql.useMutation<DeleteApiTokenMutation, DeleteApiTokenMutationVariables>(DeleteApiTokenDocument);
};
export const GetDashboardDataDocument = gql`
    query GetDashboardData($where: TaskWhereInput) {
  programs {
    edges {
      node {
        id
        name
        description
        controls {
          id
        }
        tasks {
          id
          title
          status
          description
          due
        }
      }
    }
  }
  tasks(where: $where) {
    edges {
      node {
        id
        title
        status
        due
        tags
      }
    }
  }
  organizations {
    edges {
      node {
        id
        name
      }
    }
  }
}
    `;

export function useGetDashboardDataQuery(options?: Omit<Urql.UseQueryArgs<GetDashboardDataQueryVariables>, 'query'>) {
  return Urql.useQuery<GetDashboardDataQuery, GetDashboardDataQueryVariables>({ query: GetDashboardDataDocument, ...options });
};
export const GetDocumentDataDocument = gql`
    query GetDocumentData($documentDataId: ID!) {
  documentData(id: $documentDataId) {
    id
    templateID
    data
  }
}
    `;

export function useGetDocumentDataQuery(options: Omit<Urql.UseQueryArgs<GetDocumentDataQueryVariables>, 'query'>) {
  return Urql.useQuery<GetDocumentDataQuery, GetDocumentDataQueryVariables>({ query: GetDocumentDataDocument, ...options });
};
export const CreateDocumentDataDocument = gql`
    mutation CreateDocumentData($input: CreateDocumentDataInput!) {
  createDocumentData(input: $input) {
    documentData {
      id
      templateID
      data
    }
  }
}
    `;

export function useCreateDocumentDataMutation() {
  return Urql.useMutation<CreateDocumentDataMutation, CreateDocumentDataMutationVariables>(CreateDocumentDataDocument);
};
export const UpdateDocumentDataDocument = gql`
    mutation UpdateDocumentData($updateDocumentDataId: ID!, $input: UpdateDocumentDataInput!) {
  updateDocumentData(id: $updateDocumentDataId, input: $input) {
    documentData {
      id
      templateID
      data
    }
  }
}
    `;

export function useUpdateDocumentDataMutation() {
  return Urql.useMutation<UpdateDocumentDataMutation, UpdateDocumentDataMutationVariables>(UpdateDocumentDataDocument);
};
export const DeleteDocumentDataDocument = gql`
    mutation DeleteDocumentData($deleteDocumentDataId: ID!) {
  deleteDocumentData(id: $deleteDocumentDataId) {
    deletedID
  }
}
    `;

export function useDeleteDocumentDataMutation() {
  return Urql.useMutation<DeleteDocumentDataMutation, DeleteDocumentDataMutationVariables>(DeleteDocumentDataDocument);
};
export const GetAllGroupsDocument = gql`
    query GetAllGroups {
  groups {
    edges {
      node {
        id
        name
        description
        displayName
        logoURL
        setting {
          visibility
          joinPolicy
          syncToSlack
          syncToGithub
          tags
        }
      }
    }
  }
}
    `;

export function useGetAllGroupsQuery(options?: Omit<Urql.UseQueryArgs<GetAllGroupsQueryVariables>, 'query'>) {
  return Urql.useQuery<GetAllGroupsQuery, GetAllGroupsQueryVariables>({ query: GetAllGroupsDocument, ...options });
};
export const UpdateUserRoleInOrgDocument = gql`
    mutation UpdateUserRoleInOrg($updateOrgMemberId: ID!, $input: UpdateOrgMembershipInput!) {
  updateOrgMembership(id: $updateOrgMemberId, input: $input) {
    orgMembership {
      id
      role
      userID
      organizationID
    }
  }
}
    `;

export function useUpdateUserRoleInOrgMutation() {
  return Urql.useMutation<UpdateUserRoleInOrgMutation, UpdateUserRoleInOrgMutationVariables>(UpdateUserRoleInOrgDocument);
};
export const RemoveUserFromOrgDocument = gql`
    mutation RemoveUserFromOrg($deleteOrgMembershipId: ID!) {
  deleteOrgMembership(id: $deleteOrgMembershipId) {
    deletedID
  }
}
    `;

export function useRemoveUserFromOrgMutation() {
  return Urql.useMutation<RemoveUserFromOrgMutation, RemoveUserFromOrgMutationVariables>(RemoveUserFromOrgDocument);
};
export const GetAllOrganizationsDocument = gql`
    query GetAllOrganizations {
  organizations {
    edges {
      node {
        id
        name
        displayName
        avatarRemoteURL
        description
        personalOrg
        parent {
          id
          name
        }
        children {
          edges {
            node {
              id
              name
              displayName
              description
            }
          }
        }
        members {
          id
          role
          user {
            id
            firstName
            lastName
          }
        }
        setting {
          id
          createdAt
          updatedAt
          createdBy
          updatedBy
          domains
          billingContact
          billingEmail
          billingPhone
          billingAddress
          taxIdentifier
          tags
          geoLocation
        }
        createdAt
        updatedAt
      }
    }
  }
}
    `;

export function useGetAllOrganizationsQuery(options?: Omit<Urql.UseQueryArgs<GetAllOrganizationsQueryVariables>, 'query'>) {
  return Urql.useQuery<GetAllOrganizationsQuery, GetAllOrganizationsQueryVariables>({ query: GetAllOrganizationsDocument, ...options });
};
export const GetOrganizationNameByIdDocument = gql`
    query GetOrganizationNameByID($organizationId: ID!) {
  organization(id: $organizationId) {
    name
    displayName
  }
}
    `;

export function useGetOrganizationNameByIdQuery(options: Omit<Urql.UseQueryArgs<GetOrganizationNameByIdQueryVariables>, 'query'>) {
  return Urql.useQuery<GetOrganizationNameByIdQuery, GetOrganizationNameByIdQueryVariables>({ query: GetOrganizationNameByIdDocument, ...options });
};
export const GetOrganizationMembersDocument = gql`
    query GetOrganizationMembers($organizationId: ID!) {
  organization(id: $organizationId) {
    members {
      id
      createdAt
      role
      user {
        id
        firstName
        lastName
        authProvider
        avatarRemoteURL
        email
        role
        createdAt
      }
    }
  }
}
    `;

export function useGetOrganizationMembersQuery(options: Omit<Urql.UseQueryArgs<GetOrganizationMembersQueryVariables>, 'query'>) {
  return Urql.useQuery<GetOrganizationMembersQuery, GetOrganizationMembersQueryVariables>({ query: GetOrganizationMembersDocument, ...options });
};
export const GetAllOrganizationMembersDocument = gql`
    query GetAllOrganizationMembers {
  orgMemberships {
    edges {
      node {
        user {
          id
          firstName
          lastName
          role
        }
      }
    }
  }
}
    `;

export function useGetAllOrganizationMembersQuery(options?: Omit<Urql.UseQueryArgs<GetAllOrganizationMembersQueryVariables>, 'query'>) {
  return Urql.useQuery<GetAllOrganizationMembersQuery, GetAllOrganizationMembersQueryVariables>({ query: GetAllOrganizationMembersDocument, ...options });
};
export const GetInvitesDocument = gql`
    query GetInvites {
  invites {
    edges {
      node {
        id
        recipient
        status
        createdAt
        expires
        role
      }
    }
  }
}
    `;

export function useGetInvitesQuery(options?: Omit<Urql.UseQueryArgs<GetInvitesQueryVariables>, 'query'>) {
  return Urql.useQuery<GetInvitesQuery, GetInvitesQueryVariables>({ query: GetInvitesDocument, ...options });
};
export const CreateOrganizationDocument = gql`
    mutation CreateOrganization($input: CreateOrganizationInput!) {
  createOrganization(input: $input) {
    organization {
      id
    }
  }
}
    `;

export function useCreateOrganizationMutation() {
  return Urql.useMutation<CreateOrganizationMutation, CreateOrganizationMutationVariables>(CreateOrganizationDocument);
};
export const UpdateOrganizationDocument = gql`
    mutation UpdateOrganization($updateOrganizationId: ID!, $input: UpdateOrganizationInput!) {
  updateOrganization(id: $updateOrganizationId, input: $input) {
    organization {
      id
    }
  }
}
    `;

export function useUpdateOrganizationMutation() {
  return Urql.useMutation<UpdateOrganizationMutation, UpdateOrganizationMutationVariables>(UpdateOrganizationDocument);
};
export const CreateBulkInviteDocument = gql`
    mutation CreateBulkInvite($input: [CreateInviteInput!]) {
  createBulkInvite(input: $input) {
    invites {
      id
    }
  }
}
    `;

export function useCreateBulkInviteMutation() {
  return Urql.useMutation<CreateBulkInviteMutation, CreateBulkInviteMutationVariables>(CreateBulkInviteDocument);
};
export const DeleteOrganizationInviteDocument = gql`
    mutation DeleteOrganizationInvite($deleteInviteId: ID!) {
  deleteInvite(id: $deleteInviteId) {
    deletedID
  }
}
    `;

export function useDeleteOrganizationInviteMutation() {
  return Urql.useMutation<DeleteOrganizationInviteMutation, DeleteOrganizationInviteMutationVariables>(DeleteOrganizationInviteDocument);
};
export const DeleteOrganizationDocument = gql`
    mutation DeleteOrganization($deleteOrganizationId: ID!) {
  deleteOrganization(id: $deleteOrganizationId) {
    deletedID
  }
}
    `;

export function useDeleteOrganizationMutation() {
  return Urql.useMutation<DeleteOrganizationMutation, DeleteOrganizationMutationVariables>(DeleteOrganizationDocument);
};
export const CreatePersonalAccessTokenDocument = gql`
    mutation CreatePersonalAccessToken($input: CreatePersonalAccessTokenInput!) {
  createPersonalAccessToken(input: $input) {
    personalAccessToken {
      token
    }
  }
}
    `;

export function useCreatePersonalAccessTokenMutation() {
  return Urql.useMutation<CreatePersonalAccessTokenMutation, CreatePersonalAccessTokenMutationVariables>(CreatePersonalAccessTokenDocument);
};
export const GetPersonalAccessTokensDocument = gql`
    query GetPersonalAccessTokens {
  personalAccessTokens {
    edges {
      node {
        id
        name
        description
        expiresAt
        organizations {
          id
          name
        }
      }
    }
  }
}
    `;

export function useGetPersonalAccessTokensQuery(options?: Omit<Urql.UseQueryArgs<GetPersonalAccessTokensQueryVariables>, 'query'>) {
  return Urql.useQuery<GetPersonalAccessTokensQuery, GetPersonalAccessTokensQueryVariables>({ query: GetPersonalAccessTokensDocument, ...options });
};
export const DeletePersonalAccessTokenDocument = gql`
    mutation DeletePersonalAccessToken($deletePersonalAccessTokenId: ID!) {
  deletePersonalAccessToken(id: $deletePersonalAccessTokenId) {
    deletedID
  }
}
    `;

export function useDeletePersonalAccessTokenMutation() {
  return Urql.useMutation<DeletePersonalAccessTokenMutation, DeletePersonalAccessTokenMutationVariables>(DeletePersonalAccessTokenDocument);
};
export const CreateInternalPolicyDocument = gql`
    mutation CreateInternalPolicy($input: CreateInternalPolicyInput!) {
  createInternalPolicy(input: $input) {
    internalPolicy {
      id
      name
      background
      description
      policyType
      purposeAndScope
      details
    }
  }
}
    `;

export function useCreateInternalPolicyMutation() {
  return Urql.useMutation<CreateInternalPolicyMutation, CreateInternalPolicyMutationVariables>(CreateInternalPolicyDocument);
};
export const UpdateInternalPolicyDocument = gql`
    mutation UpdateInternalPolicy($updateInternalPolicyId: ID!, $input: UpdateInternalPolicyInput!) {
  updateInternalPolicy(id: $updateInternalPolicyId, input: $input) {
    internalPolicy {
      id
      name
      background
      description
      policyType
      purposeAndScope
      details
    }
  }
}
    `;

export function useUpdateInternalPolicyMutation() {
  return Urql.useMutation<UpdateInternalPolicyMutation, UpdateInternalPolicyMutationVariables>(UpdateInternalPolicyDocument);
};
export const GetAllInternalPoliciesWithDetailsDocument = gql`
    query GetAllInternalPoliciesWithDetails {
  internalPolicies {
    edges {
      node {
        id
        name
        background
        description
        policyType
        purposeAndScope
        status
        version
        updatedAt
        updatedBy
        createdAt
        createdBy
        tags
      }
    }
  }
}
    `;

export function useGetAllInternalPoliciesWithDetailsQuery(options?: Omit<Urql.UseQueryArgs<GetAllInternalPoliciesWithDetailsQueryVariables>, 'query'>) {
  return Urql.useQuery<GetAllInternalPoliciesWithDetailsQuery, GetAllInternalPoliciesWithDetailsQueryVariables>({ query: GetAllInternalPoliciesWithDetailsDocument, ...options });
};
export const GetInternalPoliciesListDocument = gql`
    query GetInternalPoliciesList {
  internalPolicies {
    edges {
      node {
        id
        name
        description
        policyType
        tags
        version
        updatedAt
        updatedBy
        createdAt
        createdBy
      }
    }
  }
}
    `;

export function useGetInternalPoliciesListQuery(options?: Omit<Urql.UseQueryArgs<GetInternalPoliciesListQueryVariables>, 'query'>) {
  return Urql.useQuery<GetInternalPoliciesListQuery, GetInternalPoliciesListQueryVariables>({ query: GetInternalPoliciesListDocument, ...options });
};
export const GetAllInternalPoliciesDocument = gql`
    query GetAllInternalPolicies {
  internalPolicies {
    edges {
      node {
        id
        name
      }
    }
  }
}
    `;

export function useGetAllInternalPoliciesQuery(options?: Omit<Urql.UseQueryArgs<GetAllInternalPoliciesQueryVariables>, 'query'>) {
  return Urql.useQuery<GetAllInternalPoliciesQuery, GetAllInternalPoliciesQueryVariables>({ query: GetAllInternalPoliciesDocument, ...options });
};
export const GetInternalPolicyDetailsByIdDocument = gql`
    query GetInternalPolicyDetailsById($internalPolicyId: ID!) {
  internalPolicy(id: $internalPolicyId) {
    id
    name
    description
    details
    background
    createdAt
    createdBy
    updatedAt
    updatedBy
    tags
    version
    status
    purposeAndScope
    policyType
    procedures {
      id
      name
    }
  }
}
    `;

export function useGetInternalPolicyDetailsByIdQuery(options: Omit<Urql.UseQueryArgs<GetInternalPolicyDetailsByIdQueryVariables>, 'query'>) {
  return Urql.useQuery<GetInternalPolicyDetailsByIdQuery, GetInternalPolicyDetailsByIdQueryVariables>({ query: GetInternalPolicyDetailsByIdDocument, ...options });
};
export const CreateProcedureDocument = gql`
    mutation CreateProcedure($input: CreateProcedureInput!) {
  createProcedure(input: $input) {
    procedure {
      id
      name
    }
  }
}
    `;

export function useCreateProcedureMutation() {
  return Urql.useMutation<CreateProcedureMutation, CreateProcedureMutationVariables>(CreateProcedureDocument);
};
export const UpdateProcedureDocument = gql`
    mutation UpdateProcedure($updateProcedureId: ID!, $input: UpdateProcedureInput!) {
  updateProcedure(id: $updateProcedureId, input: $input) {
    procedure {
      id
      name
    }
  }
}
    `;

export function useUpdateProcedureMutation() {
  return Urql.useMutation<UpdateProcedureMutation, UpdateProcedureMutationVariables>(UpdateProcedureDocument);
};
export const GetAllProceduresWithDetailsDocument = gql`
    query GetAllProceduresWithDetails {
  procedures {
    edges {
      node {
        id
        name
        background
        description
        procedureType
        purposeAndScope
        satisfies
        status
        version
        updatedAt
        updatedBy
        createdAt
        createdBy
        tags
      }
    }
  }
}
    `;

export function useGetAllProceduresWithDetailsQuery(options?: Omit<Urql.UseQueryArgs<GetAllProceduresWithDetailsQueryVariables>, 'query'>) {
  return Urql.useQuery<GetAllProceduresWithDetailsQuery, GetAllProceduresWithDetailsQueryVariables>({ query: GetAllProceduresWithDetailsDocument, ...options });
};
export const GetAllProceduresDocument = gql`
    query GetAllProcedures {
  procedures {
    edges {
      node {
        id
        name
      }
    }
  }
}
    `;

export function useGetAllProceduresQuery(options?: Omit<Urql.UseQueryArgs<GetAllProceduresQueryVariables>, 'query'>) {
  return Urql.useQuery<GetAllProceduresQuery, GetAllProceduresQueryVariables>({ query: GetAllProceduresDocument, ...options });
};
export const GetProcedureDetailsByIdDocument = gql`
    query GetProcedureDetailsById($procedureId: ID!) {
  procedure(id: $procedureId) {
    id
    name
    description
    details
    background
    createdAt
    createdBy
    updatedAt
    updatedBy
    tags
    version
    status
    satisfies
    purposeAndScope
    procedureType
    internalPolicies {
      id
      name
    }
  }
}
    `;

export function useGetProcedureDetailsByIdQuery(options: Omit<Urql.UseQueryArgs<GetProcedureDetailsByIdQueryVariables>, 'query'>) {
  return Urql.useQuery<GetProcedureDetailsByIdQuery, GetProcedureDetailsByIdQueryVariables>({ query: GetProcedureDetailsByIdDocument, ...options });
};
export const CreateProgramWithMembersDocument = gql`
    mutation CreateProgramWithMembers($input: CreateProgramWithMembersInput!) {
  createProgramWithMembers(input: $input) {
    program {
      id
      name
    }
  }
}
    `;

export function useCreateProgramWithMembersMutation() {
  return Urql.useMutation<CreateProgramWithMembersMutation, CreateProgramWithMembersMutationVariables>(CreateProgramWithMembersDocument);
};
export const UpdateProgramDocument = gql`
    mutation UpdateProgram($updateProgramId: ID!, $input: UpdateProgramInput!) {
  updateProgram(id: $updateProgramId, input: $input) {
    program {
      id
      name
    }
  }
}
    `;

export function useUpdateProgramMutation() {
  return Urql.useMutation<UpdateProgramMutation, UpdateProgramMutationVariables>(UpdateProgramDocument);
};
export const GetAllProgramsDocument = gql`
    query GetAllPrograms {
  programs {
    edges {
      node {
        id
        name
        description
        tags
        status
        startDate
        endDate
        auditorReady
      }
    }
  }
}
    `;

export function useGetAllProgramsQuery(options?: Omit<Urql.UseQueryArgs<GetAllProgramsQueryVariables>, 'query'>) {
  return Urql.useQuery<GetAllProgramsQuery, GetAllProgramsQueryVariables>({ query: GetAllProgramsDocument, ...options });
};
export const GetProgramEdgesForWizardDocument = gql`
    query GetProgramEdgesForWizard {
  risks {
    edges {
      node {
        id
        name
      }
    }
  }
  procedures {
    edges {
      node {
        id
        name
      }
    }
  }
  internalPolicies {
    edges {
      node {
        id
        name
      }
    }
  }
  groups {
    edges {
      node {
        id
        name
        displayName
      }
    }
  }
  orgMemberships {
    edges {
      node {
        user {
          id
          firstName
          lastName
          role
        }
      }
    }
  }
}
    `;

export function useGetProgramEdgesForWizardQuery(options?: Omit<Urql.UseQueryArgs<GetProgramEdgesForWizardQueryVariables>, 'query'>) {
  return Urql.useQuery<GetProgramEdgesForWizardQuery, GetProgramEdgesForWizardQueryVariables>({ query: GetProgramEdgesForWizardDocument, ...options });
};
export const GetProgramDetailsByIdDocument = gql`
    query GetProgramDetailsById($programId: ID!) {
  program(id: $programId) {
    id
    name
    description
    tags
    status
    startDate
    endDate
    auditorReady
    auditorWriteComments
    auditorReadComments
    standards {
      id
      name
    }
    tasks {
      id
      title
      status
      due
      details
      assignee {
        id
        firstName
        lastName
        email
      }
      assigner {
        id
        firstName
        lastName
        email
      }
    }
    controlObjectives {
      id
      name
    }
    controls {
      id
      name
      class
    }
    subcontrols {
      id
      name
      class
    }
    narratives {
      id
      name
    }
    internalPolicies {
      id
      name
    }
    procedures {
      id
      name
    }
  }
}
    `;

export function useGetProgramDetailsByIdQuery(options: Omit<Urql.UseQueryArgs<GetProgramDetailsByIdQueryVariables>, 'query'>) {
  return Urql.useQuery<GetProgramDetailsByIdQuery, GetProgramDetailsByIdQueryVariables>({ query: GetProgramDetailsByIdDocument, ...options });
};
export const GetAllRisksDocument = gql`
    query GetAllRisks {
  risks {
    edges {
      node {
        id
        name
      }
    }
  }
}
    `;

export function useGetAllRisksQuery(options?: Omit<Urql.UseQueryArgs<GetAllRisksQueryVariables>, 'query'>) {
  return Urql.useQuery<GetAllRisksQuery, GetAllRisksQueryVariables>({ query: GetAllRisksDocument, ...options });
};
export const CreateStandardDocument = gql`
    mutation CreateStandard($input: CreateStandardInput!) {
  createStandard(input: $input) {
    standard {
      id
    }
  }
}
    `;

export function useCreateStandardMutation() {
  return Urql.useMutation<CreateStandardMutation, CreateStandardMutationVariables>(CreateStandardDocument);
};
export const CreateSubscriberDocument = gql`
    mutation CreateSubscriber($input: CreateSubscriberInput!) {
  createSubscriber(input: $input) {
    subscriber {
      email
    }
  }
}
    `;

export function useCreateSubscriberMutation() {
  return Urql.useMutation<CreateSubscriberMutation, CreateSubscriberMutationVariables>(CreateSubscriberDocument);
};
export const GetAllSubscribersDocument = gql`
    query GetAllSubscribers {
  subscribers {
    edges {
      node {
        active
        email
        id
        verifiedEmail
      }
    }
  }
}
    `;

export function useGetAllSubscribersQuery(options?: Omit<Urql.UseQueryArgs<GetAllSubscribersQueryVariables>, 'query'>) {
  return Urql.useQuery<GetAllSubscribersQuery, GetAllSubscribersQueryVariables>({ query: GetAllSubscribersDocument, ...options });
};
export const DeleteSubscriberDocument = gql`
    mutation DeleteSubscriber($deleteSubscriberEmail: String!) {
  deleteSubscriber(email: $deleteSubscriberEmail) {
    email
  }
}
    `;

export function useDeleteSubscriberMutation() {
  return Urql.useMutation<DeleteSubscriberMutation, DeleteSubscriberMutationVariables>(DeleteSubscriberDocument);
};
export const TasksWithFilterDocument = gql`
    query TasksWithFilter($where: TaskWhereInput) {
  tasks(where: $where) {
    edges {
      node {
        id
        title
        description
        status
        tags
        details
        due
      }
    }
  }
}
    `;

export function useTasksWithFilterQuery(options?: Omit<Urql.UseQueryArgs<TasksWithFilterQueryVariables>, 'query'>) {
  return Urql.useQuery<TasksWithFilterQuery, TasksWithFilterQueryVariables>({ query: TasksWithFilterDocument, ...options });
};
export const CreateTemplateDocument = gql`
    mutation CreateTemplate($input: CreateTemplateInput!) {
  createTemplate(input: $input) {
    template {
      id
      name
      templateType
      description
      jsonconfig
      uischema
      owner {
        id
      }
    }
  }
}
    `;

export function useCreateTemplateMutation() {
  return Urql.useMutation<CreateTemplateMutation, CreateTemplateMutationVariables>(CreateTemplateDocument);
};
export const UpdateTemplateDocument = gql`
    mutation UpdateTemplate($updateTemplateId: ID!, $input: UpdateTemplateInput!) {
  updateTemplate(id: $updateTemplateId, input: $input) {
    template {
      id
      name
      templateType
      description
      jsonconfig
      uischema
      owner {
        id
      }
    }
  }
}
    `;

export function useUpdateTemplateMutation() {
  return Urql.useMutation<UpdateTemplateMutation, UpdateTemplateMutationVariables>(UpdateTemplateDocument);
};
export const GetAllTemplatesDocument = gql`
    query GetAllTemplates {
  templates {
    edges {
      node {
        id
        name
        templateType
        description
        jsonconfig
        uischema
        createdAt
        updatedAt
      }
    }
  }
}
    `;

export function useGetAllTemplatesQuery(options?: Omit<Urql.UseQueryArgs<GetAllTemplatesQueryVariables>, 'query'>) {
  return Urql.useQuery<GetAllTemplatesQuery, GetAllTemplatesQueryVariables>({ query: GetAllTemplatesDocument, ...options });
};
export const FilterTemplatesDocument = gql`
    query FilterTemplates($where: TemplateWhereInput) {
  templates(where: $where) {
    edges {
      node {
        id
        name
        templateType
        description
        jsonconfig
        uischema
        createdAt
        updatedAt
      }
    }
  }
}
    `;

export function useFilterTemplatesQuery(options?: Omit<Urql.UseQueryArgs<FilterTemplatesQueryVariables>, 'query'>) {
  return Urql.useQuery<FilterTemplatesQuery, FilterTemplatesQueryVariables>({ query: FilterTemplatesDocument, ...options });
};
export const GetTemplateDocument = gql`
    query GetTemplate($getTemplateId: ID!) {
  template(id: $getTemplateId) {
    id
    templateType
    name
    description
    jsonconfig
    uischema
  }
}
    `;

export function useGetTemplateQuery(options: Omit<Urql.UseQueryArgs<GetTemplateQueryVariables>, 'query'>) {
  return Urql.useQuery<GetTemplateQuery, GetTemplateQueryVariables>({ query: GetTemplateDocument, ...options });
};
export const DeleteTemplateDocument = gql`
    mutation DeleteTemplate($deleteTemplateId: ID!) {
  deleteTemplate(id: $deleteTemplateId) {
    deletedID
  }
}
    `;

export function useDeleteTemplateMutation() {
  return Urql.useMutation<DeleteTemplateMutation, DeleteTemplateMutationVariables>(DeleteTemplateDocument);
};
export const GetUserProfileDocument = gql`
    query GetUserProfile($userId: ID!) {
  user(id: $userId) {
    id
    firstName
    lastName
    displayName
    email
    avatarRemoteURL
    setting {
      status
      tags
    }
  }
}
    `;

export function useGetUserProfileQuery(options: Omit<Urql.UseQueryArgs<GetUserProfileQueryVariables>, 'query'>) {
  return Urql.useQuery<GetUserProfileQuery, GetUserProfileQueryVariables>({ query: GetUserProfileDocument, ...options });
};
export const UpdateUserNameDocument = gql`
    mutation updateUserName($updateUserId: ID!, $input: UpdateUserInput!) {
  updateUser(id: $updateUserId, input: $input) {
    user {
      id
    }
  }
}
    `;

export function useUpdateUserNameMutation() {
  return Urql.useMutation<UpdateUserNameMutation, UpdateUserNameMutationVariables>(UpdateUserNameDocument);
};